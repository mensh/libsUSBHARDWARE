ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"pb_decode.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.buf_read,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	buf_read:
  24              	.LVL0:
  25              	.LFB0:
  26              		.file 1 "nanopb/pb_decode.c"
   1:nanopb/pb_decode.c **** /* pb_decode.c -- decode a protobuf using minimal resources
   2:nanopb/pb_decode.c ****  *
   3:nanopb/pb_decode.c ****  * 2011 Petteri Aimonen <jpa@kapsi.fi>
   4:nanopb/pb_decode.c ****  */
   5:nanopb/pb_decode.c **** 
   6:nanopb/pb_decode.c **** /* Use the GCC warn_unused_result attribute to check that all return values
   7:nanopb/pb_decode.c ****  * are propagated correctly. On other compilers and gcc before 3.4.0 just
   8:nanopb/pb_decode.c ****  * ignore the annotation.
   9:nanopb/pb_decode.c ****  */
  10:nanopb/pb_decode.c **** #if !defined(__GNUC__) || ( __GNUC__ < 3) || (__GNUC__ == 3 && __GNUC_MINOR__ < 4)
  11:nanopb/pb_decode.c ****     #define checkreturn
  12:nanopb/pb_decode.c **** #else
  13:nanopb/pb_decode.c ****     #define checkreturn __attribute__((warn_unused_result))
  14:nanopb/pb_decode.c **** #endif
  15:nanopb/pb_decode.c **** 
  16:nanopb/pb_decode.c **** #include "pb.h"
  17:nanopb/pb_decode.c **** #include "pb_decode.h"
  18:nanopb/pb_decode.c **** #include "pb_common.h"
  19:nanopb/pb_decode.c **** 
  20:nanopb/pb_decode.c **** /**************************************
  21:nanopb/pb_decode.c ****  * Declarations internal to this file *
  22:nanopb/pb_decode.c ****  **************************************/
  23:nanopb/pb_decode.c **** 
  24:nanopb/pb_decode.c **** typedef bool (*pb_decoder_t)(pb_istream_t *stream, const pb_field_t *field, void *dest) checkreturn
  25:nanopb/pb_decode.c **** 
  26:nanopb/pb_decode.c **** static bool checkreturn buf_read(pb_istream_t *stream, pb_byte_t *buf, size_t count);
  27:nanopb/pb_decode.c **** static bool checkreturn read_raw_value(pb_istream_t *stream, pb_wire_type_t wire_type, pb_byte_t *b
  28:nanopb/pb_decode.c **** static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fiel
  29:nanopb/pb_decode.c **** static bool checkreturn decode_callback_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fi
  30:nanopb/pb_decode.c **** static bool checkreturn decode_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_field_iter_
  31:nanopb/pb_decode.c **** static void iter_from_extension(pb_field_iter_t *iter, pb_extension_t *extension);
  32:nanopb/pb_decode.c **** static bool checkreturn default_extension_decoder(pb_istream_t *stream, pb_extension_t *extension, 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 2


  33:nanopb/pb_decode.c **** static bool checkreturn decode_extension(pb_istream_t *stream, uint32_t tag, pb_wire_type_t wire_ty
  34:nanopb/pb_decode.c **** static bool checkreturn find_extension_field(pb_field_iter_t *iter);
  35:nanopb/pb_decode.c **** static void pb_field_set_to_default(pb_field_iter_t *iter);
  36:nanopb/pb_decode.c **** static void pb_message_set_to_defaults(const pb_field_t fields[], void *dest_struct);
  37:nanopb/pb_decode.c **** static bool checkreturn pb_dec_varint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  38:nanopb/pb_decode.c **** static bool checkreturn pb_decode_varint32_eof(pb_istream_t *stream, uint32_t *dest, bool *eof);
  39:nanopb/pb_decode.c **** static bool checkreturn pb_dec_uvarint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  40:nanopb/pb_decode.c **** static bool checkreturn pb_dec_svarint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  41:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed32(pb_istream_t *stream, const pb_field_t *field, void *dest);
  42:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed64(pb_istream_t *stream, const pb_field_t *field, void *dest);
  43:nanopb/pb_decode.c **** static bool checkreturn pb_dec_bytes(pb_istream_t *stream, const pb_field_t *field, void *dest);
  44:nanopb/pb_decode.c **** static bool checkreturn pb_dec_string(pb_istream_t *stream, const pb_field_t *field, void *dest);
  45:nanopb/pb_decode.c **** static bool checkreturn pb_dec_submessage(pb_istream_t *stream, const pb_field_t *field, void *dest
  46:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed_length_bytes(pb_istream_t *stream, const pb_field_t *field, vo
  47:nanopb/pb_decode.c **** static bool checkreturn pb_skip_varint(pb_istream_t *stream);
  48:nanopb/pb_decode.c **** static bool checkreturn pb_skip_string(pb_istream_t *stream);
  49:nanopb/pb_decode.c **** 
  50:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
  51:nanopb/pb_decode.c **** static bool checkreturn allocate_field(pb_istream_t *stream, void *pData, size_t data_size, size_t 
  52:nanopb/pb_decode.c **** static bool checkreturn pb_release_union_field(pb_istream_t *stream, pb_field_iter_t *iter);
  53:nanopb/pb_decode.c **** static void pb_release_single_field(const pb_field_iter_t *iter);
  54:nanopb/pb_decode.c **** #endif
  55:nanopb/pb_decode.c **** 
  56:nanopb/pb_decode.c **** #ifdef PB_WITHOUT_64BIT
  57:nanopb/pb_decode.c **** #define pb_int64_t int32_t
  58:nanopb/pb_decode.c **** #define pb_uint64_t uint32_t
  59:nanopb/pb_decode.c **** #else
  60:nanopb/pb_decode.c **** #define pb_int64_t int64_t
  61:nanopb/pb_decode.c **** #define pb_uint64_t uint64_t
  62:nanopb/pb_decode.c **** #endif
  63:nanopb/pb_decode.c **** 
  64:nanopb/pb_decode.c **** /* --- Function pointers to field decoders ---
  65:nanopb/pb_decode.c ****  * Order in the array must match pb_action_t LTYPE numbering.
  66:nanopb/pb_decode.c ****  */
  67:nanopb/pb_decode.c **** static const pb_decoder_t PB_DECODERS[PB_LTYPES_COUNT] = {
  68:nanopb/pb_decode.c ****     &pb_dec_varint,
  69:nanopb/pb_decode.c ****     &pb_dec_uvarint,
  70:nanopb/pb_decode.c ****     &pb_dec_svarint,
  71:nanopb/pb_decode.c ****     &pb_dec_fixed32,
  72:nanopb/pb_decode.c ****     &pb_dec_fixed64,
  73:nanopb/pb_decode.c ****     
  74:nanopb/pb_decode.c ****     &pb_dec_bytes,
  75:nanopb/pb_decode.c ****     &pb_dec_string,
  76:nanopb/pb_decode.c ****     &pb_dec_submessage,
  77:nanopb/pb_decode.c ****     NULL, /* extensions */
  78:nanopb/pb_decode.c ****     &pb_dec_fixed_length_bytes
  79:nanopb/pb_decode.c **** };
  80:nanopb/pb_decode.c **** 
  81:nanopb/pb_decode.c **** /*******************************
  82:nanopb/pb_decode.c ****  * pb_istream_t implementation *
  83:nanopb/pb_decode.c ****  *******************************/
  84:nanopb/pb_decode.c **** 
  85:nanopb/pb_decode.c **** static bool checkreturn buf_read(pb_istream_t *stream, pb_byte_t *buf, size_t count)
  86:nanopb/pb_decode.c **** {
  27              		.loc 1 86 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 3


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 86 1 is_stmt 0 view .LVU1
  33 0000 10B4     		push	{r4}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
  87:nanopb/pb_decode.c ****     size_t i;
  37              		.loc 1 87 5 is_stmt 1 view .LVU2
  88:nanopb/pb_decode.c ****     const pb_byte_t *source = (const pb_byte_t*)stream->state;
  38              		.loc 1 88 5 view .LVU3
  39              		.loc 1 88 22 is_stmt 0 view .LVU4
  40 0002 4468     		ldr	r4, [r0, #4]
  41              	.LVL1:
  89:nanopb/pb_decode.c ****     stream->state = (pb_byte_t*)stream->state + count;
  42              		.loc 1 89 5 is_stmt 1 view .LVU5
  43              		.loc 1 89 47 is_stmt 0 view .LVU6
  44 0004 A318     		adds	r3, r4, r2
  45              		.loc 1 89 19 view .LVU7
  46 0006 4360     		str	r3, [r0, #4]
  90:nanopb/pb_decode.c ****     
  91:nanopb/pb_decode.c ****     if (buf != NULL)
  47              		.loc 1 91 5 is_stmt 1 view .LVU8
  48              		.loc 1 91 8 is_stmt 0 view .LVU9
  49 0008 39B1     		cbz	r1, .L3
  50 000a 0846     		mov	r0, r1
  51              	.LVL2:
  92:nanopb/pb_decode.c ****     {
  93:nanopb/pb_decode.c ****         for (i = 0; i < count; i++)
  52              		.loc 1 93 16 view .LVU10
  53 000c 0023     		movs	r3, #0
  54              	.LVL3:
  55              	.L2:
  56              		.loc 1 93 9 discriminator 1 view .LVU11
  57 000e 9342     		cmp	r3, r2
  58 0010 03D2     		bcs	.L3
  94:nanopb/pb_decode.c ****             buf[i] = source[i];
  59              		.loc 1 94 13 is_stmt 1 discriminator 3 view .LVU12
  60              		.loc 1 94 28 is_stmt 0 discriminator 3 view .LVU13
  61 0012 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
  62              		.loc 1 94 20 discriminator 3 view .LVU14
  63 0014 C154     		strb	r1, [r0, r3]
  93:nanopb/pb_decode.c ****             buf[i] = source[i];
  64              		.loc 1 93 33 discriminator 3 view .LVU15
  65 0016 0133     		adds	r3, r3, #1
  66              	.LVL4:
  93:nanopb/pb_decode.c ****             buf[i] = source[i];
  67              		.loc 1 93 33 discriminator 3 view .LVU16
  68 0018 F9E7     		b	.L2
  69              	.LVL5:
  70              	.L3:
  95:nanopb/pb_decode.c ****     }
  96:nanopb/pb_decode.c ****     
  97:nanopb/pb_decode.c ****     return true;
  71              		.loc 1 97 5 is_stmt 1 view .LVU17
  98:nanopb/pb_decode.c **** }
  72              		.loc 1 98 1 is_stmt 0 view .LVU18
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 4


  73 001a 0120     		movs	r0, #1
  74 001c 10BC     		pop	{r4}
  75              	.LCFI1:
  76              		.cfi_restore 4
  77              		.cfi_def_cfa_offset 0
  78              	.LVL6:
  79              		.loc 1 98 1 view .LVU19
  80 001e 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.section	.text.pb_readbyte,"ax",%progbits
  85              		.align	1
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	pb_readbyte:
  92              	.LVL7:
  93              	.LFB2:
  99:nanopb/pb_decode.c **** 
 100:nanopb/pb_decode.c **** bool checkreturn pb_read(pb_istream_t *stream, pb_byte_t *buf, size_t count)
 101:nanopb/pb_decode.c **** {
 102:nanopb/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 103:nanopb/pb_decode.c **** 	if (buf == NULL && stream->callback != buf_read)
 104:nanopb/pb_decode.c **** 	{
 105:nanopb/pb_decode.c **** 		/* Skip input bytes */
 106:nanopb/pb_decode.c **** 		pb_byte_t tmp[16];
 107:nanopb/pb_decode.c **** 		while (count > 16)
 108:nanopb/pb_decode.c **** 		{
 109:nanopb/pb_decode.c **** 			if (!pb_read(stream, tmp, 16))
 110:nanopb/pb_decode.c **** 				return false;
 111:nanopb/pb_decode.c **** 			
 112:nanopb/pb_decode.c **** 			count -= 16;
 113:nanopb/pb_decode.c **** 		}
 114:nanopb/pb_decode.c **** 		
 115:nanopb/pb_decode.c **** 		return pb_read(stream, tmp, count);
 116:nanopb/pb_decode.c **** 	}
 117:nanopb/pb_decode.c **** #endif
 118:nanopb/pb_decode.c **** 
 119:nanopb/pb_decode.c ****     if (stream->bytes_left < count)
 120:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 121:nanopb/pb_decode.c ****     
 122:nanopb/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 123:nanopb/pb_decode.c ****     if (!stream->callback(stream, buf, count))
 124:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 125:nanopb/pb_decode.c **** #else
 126:nanopb/pb_decode.c ****     if (!buf_read(stream, buf, count))
 127:nanopb/pb_decode.c ****         return false;
 128:nanopb/pb_decode.c **** #endif
 129:nanopb/pb_decode.c ****     
 130:nanopb/pb_decode.c ****     stream->bytes_left -= count;
 131:nanopb/pb_decode.c ****     return true;
 132:nanopb/pb_decode.c **** }
 133:nanopb/pb_decode.c **** 
 134:nanopb/pb_decode.c **** /* Read a single byte from input stream. buf may not be NULL.
 135:nanopb/pb_decode.c ****  * This is an optimization for the varint decoding. */
 136:nanopb/pb_decode.c **** static bool checkreturn pb_readbyte(pb_istream_t *stream, pb_byte_t *buf)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 5


 137:nanopb/pb_decode.c **** {
  94              		.loc 1 137 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
 138:nanopb/pb_decode.c ****     if (stream->bytes_left == 0)
  98              		.loc 1 138 5 view .LVU21
  99              		.loc 1 138 15 is_stmt 0 view .LVU22
 100 0000 8368     		ldr	r3, [r0, #8]
 101              		.loc 1 138 8 view .LVU23
 102 0002 5BB1     		cbz	r3, .L16
 137:nanopb/pb_decode.c ****     if (stream->bytes_left == 0)
 103              		.loc 1 137 1 view .LVU24
 104 0004 10B5     		push	{r4, lr}
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
 109 0006 0446     		mov	r4, r0
 139:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 140:nanopb/pb_decode.c **** 
 141:nanopb/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 142:nanopb/pb_decode.c ****     if (!stream->callback(stream, buf, 1))
 110              		.loc 1 142 5 is_stmt 1 view .LVU25
 111              		.loc 1 142 16 is_stmt 0 view .LVU26
 112 0008 0368     		ldr	r3, [r0]
 113              		.loc 1 142 10 view .LVU27
 114 000a 0122     		movs	r2, #1
 115 000c 9847     		blx	r3
 116              	.LVL8:
 117              		.loc 1 142 8 view .LVU28
 118 000e 0346     		mov	r3, r0
 119 0010 60B1     		cbz	r0, .L17
 143:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 144:nanopb/pb_decode.c **** #else
 145:nanopb/pb_decode.c ****     *buf = *(const pb_byte_t*)stream->state;
 146:nanopb/pb_decode.c ****     stream->state = (pb_byte_t*)stream->state + 1;
 147:nanopb/pb_decode.c **** #endif
 148:nanopb/pb_decode.c **** 
 149:nanopb/pb_decode.c ****     stream->bytes_left--;
 120              		.loc 1 149 5 is_stmt 1 view .LVU29
 121              		.loc 1 149 11 is_stmt 0 view .LVU30
 122 0012 A268     		ldr	r2, [r4, #8]
 123              		.loc 1 149 23 view .LVU31
 124 0014 013A     		subs	r2, r2, #1
 125 0016 A260     		str	r2, [r4, #8]
 150:nanopb/pb_decode.c ****     
 151:nanopb/pb_decode.c ****     return true;    
 126              		.loc 1 151 5 is_stmt 1 view .LVU32
 127              	.L10:
 152:nanopb/pb_decode.c **** }
 128              		.loc 1 152 1 is_stmt 0 view .LVU33
 129 0018 1846     		mov	r0, r3
 130 001a 10BD     		pop	{r4, pc}
 131              	.LVL9:
 132              	.L16:
 133              	.LCFI3:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 6


 134              		.cfi_def_cfa_offset 0
 135              		.cfi_restore 4
 136              		.cfi_restore 14
 139:nanopb/pb_decode.c **** 
 137              		.loc 1 139 9 is_stmt 1 view .LVU34
 138 001c C368     		ldr	r3, [r0, #12]
 139 001e 1BB1     		cbz	r3, .L18
 140              	.L9:
 139:nanopb/pb_decode.c **** 
 141              		.loc 1 139 9 is_stmt 0 discriminator 4 view .LVU35
 142 0020 C360     		str	r3, [r0, #12]
 143 0022 0023     		movs	r3, #0
 144              		.loc 1 152 1 discriminator 4 view .LVU36
 145 0024 1846     		mov	r0, r3
 146              	.LVL10:
 147              		.loc 1 152 1 discriminator 4 view .LVU37
 148 0026 7047     		bx	lr
 149              	.LVL11:
 150              	.L18:
 139:nanopb/pb_decode.c **** 
 151              		.loc 1 139 9 view .LVU38
 152 0028 034B     		ldr	r3, .L20
 153 002a F9E7     		b	.L9
 154              	.LVL12:
 155              	.L17:
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 143:nanopb/pb_decode.c **** #else
 160              		.loc 1 143 9 is_stmt 1 view .LVU39
 161 002c E268     		ldr	r2, [r4, #12]
 162 002e 0AB1     		cbz	r2, .L19
 163              	.L12:
 143:nanopb/pb_decode.c **** #else
 164              		.loc 1 143 9 is_stmt 0 discriminator 4 view .LVU40
 165 0030 E260     		str	r2, [r4, #12]
 166 0032 F1E7     		b	.L10
 167              	.L19:
 143:nanopb/pb_decode.c **** #else
 168              		.loc 1 143 9 view .LVU41
 169 0034 014A     		ldr	r2, .L20+4
 170 0036 FBE7     		b	.L12
 171              	.L21:
 172              		.align	2
 173              	.L20:
 174 0038 00000000 		.word	.LC0
 175 003c 10000000 		.word	.LC1
 176              		.cfi_endproc
 177              	.LFE2:
 179              		.section	.text.pb_decode_varint32_eof,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	pb_decode_varint32_eof:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 7


 187              	.LVL13:
 188              	.LFB4:
 153:nanopb/pb_decode.c **** 
 154:nanopb/pb_decode.c **** pb_istream_t pb_istream_from_buffer(const pb_byte_t *buf, size_t bufsize)
 155:nanopb/pb_decode.c **** {
 156:nanopb/pb_decode.c ****     pb_istream_t stream;
 157:nanopb/pb_decode.c ****     /* Cast away the const from buf without a compiler error.  We are
 158:nanopb/pb_decode.c ****      * careful to use it only in a const manner in the callbacks.
 159:nanopb/pb_decode.c ****      */
 160:nanopb/pb_decode.c ****     union {
 161:nanopb/pb_decode.c ****         void *state;
 162:nanopb/pb_decode.c ****         const void *c_state;
 163:nanopb/pb_decode.c ****     } state;
 164:nanopb/pb_decode.c **** #ifdef PB_BUFFER_ONLY
 165:nanopb/pb_decode.c ****     stream.callback = NULL;
 166:nanopb/pb_decode.c **** #else
 167:nanopb/pb_decode.c ****     stream.callback = &buf_read;
 168:nanopb/pb_decode.c **** #endif
 169:nanopb/pb_decode.c ****     state.c_state = buf;
 170:nanopb/pb_decode.c ****     stream.state = state.state;
 171:nanopb/pb_decode.c ****     stream.bytes_left = bufsize;
 172:nanopb/pb_decode.c **** #ifndef PB_NO_ERRMSG
 173:nanopb/pb_decode.c ****     stream.errmsg = NULL;
 174:nanopb/pb_decode.c **** #endif
 175:nanopb/pb_decode.c ****     return stream;
 176:nanopb/pb_decode.c **** }
 177:nanopb/pb_decode.c **** 
 178:nanopb/pb_decode.c **** /********************
 179:nanopb/pb_decode.c ****  * Helper functions *
 180:nanopb/pb_decode.c ****  ********************/
 181:nanopb/pb_decode.c **** 
 182:nanopb/pb_decode.c **** static bool checkreturn pb_decode_varint32_eof(pb_istream_t *stream, uint32_t *dest, bool *eof)
 183:nanopb/pb_decode.c **** {
 189              		.loc 1 183 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 183 1 is_stmt 0 view .LVU43
 194 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 195              	.LCFI5:
 196              		.cfi_def_cfa_offset 24
 197              		.cfi_offset 4, -24
 198              		.cfi_offset 5, -20
 199              		.cfi_offset 6, -16
 200              		.cfi_offset 7, -12
 201              		.cfi_offset 8, -8
 202              		.cfi_offset 14, -4
 203 0004 82B0     		sub	sp, sp, #8
 204              	.LCFI6:
 205              		.cfi_def_cfa_offset 32
 206 0006 0646     		mov	r6, r0
 207 0008 8846     		mov	r8, r1
 208 000a 1446     		mov	r4, r2
 184:nanopb/pb_decode.c ****     pb_byte_t byte;
 209              		.loc 1 184 5 is_stmt 1 view .LVU44
 185:nanopb/pb_decode.c ****     uint32_t result;
 210              		.loc 1 185 5 view .LVU45
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 8


 186:nanopb/pb_decode.c ****     
 187:nanopb/pb_decode.c ****     if (!pb_readbyte(stream, &byte))
 211              		.loc 1 187 5 view .LVU46
 212              		.loc 1 187 10 is_stmt 0 view .LVU47
 213 000c 0DF10701 		add	r1, sp, #7
 214              	.LVL14:
 215              		.loc 1 187 10 view .LVU48
 216 0010 FFF7FEFF 		bl	pb_readbyte
 217              	.LVL15:
 218              		.loc 1 187 8 view .LVU49
 219 0014 0746     		mov	r7, r0
 220 0016 50B1     		cbz	r0, .L38
 188:nanopb/pb_decode.c ****     {
 189:nanopb/pb_decode.c ****         if (stream->bytes_left == 0)
 190:nanopb/pb_decode.c ****         {
 191:nanopb/pb_decode.c ****             if (eof)
 192:nanopb/pb_decode.c ****             {
 193:nanopb/pb_decode.c ****                 *eof = true;
 194:nanopb/pb_decode.c ****             }
 195:nanopb/pb_decode.c ****         }
 196:nanopb/pb_decode.c **** 
 197:nanopb/pb_decode.c ****         return false;
 198:nanopb/pb_decode.c ****     }
 199:nanopb/pb_decode.c ****     
 200:nanopb/pb_decode.c ****     if ((byte & 0x80) == 0)
 221              		.loc 1 200 5 is_stmt 1 view .LVU50
 222              		.loc 1 200 23 is_stmt 0 view .LVU51
 223 0018 9DF80750 		ldrb	r5, [sp, #7]	@ zero_extendqisi2
 224              		.loc 1 200 8 view .LVU52
 225 001c 15F0800F 		tst	r5, #128
 226 0020 0DD1     		bne	.L39
 227              	.LVL16:
 228              	.L27:
 201:nanopb/pb_decode.c ****     {
 202:nanopb/pb_decode.c ****         /* Quick case, 1 byte value */
 203:nanopb/pb_decode.c ****         result = byte;
 204:nanopb/pb_decode.c ****     }
 205:nanopb/pb_decode.c ****     else
 206:nanopb/pb_decode.c ****     {
 207:nanopb/pb_decode.c ****         /* Multibyte case */
 208:nanopb/pb_decode.c ****         uint_fast8_t bitpos = 7;
 209:nanopb/pb_decode.c ****         result = byte & 0x7F;
 210:nanopb/pb_decode.c ****         
 211:nanopb/pb_decode.c ****         do
 212:nanopb/pb_decode.c ****         {
 213:nanopb/pb_decode.c ****             if (!pb_readbyte(stream, &byte))
 214:nanopb/pb_decode.c ****                 return false;
 215:nanopb/pb_decode.c ****             
 216:nanopb/pb_decode.c ****             if (bitpos >= 32)
 217:nanopb/pb_decode.c ****             {
 218:nanopb/pb_decode.c ****                 /* Note: The varint could have trailing 0x80 bytes, or 0xFF for negative. */
 219:nanopb/pb_decode.c ****                 uint8_t sign_extension = (bitpos < 63) ? 0xFF : 0x01;
 220:nanopb/pb_decode.c ****                 
 221:nanopb/pb_decode.c ****                 if ((byte & 0x7F) != 0x00 && ((result >> 31) == 0 || byte != sign_extension))
 222:nanopb/pb_decode.c ****                 {
 223:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "varint overflow");
 224:nanopb/pb_decode.c ****                 }
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 9


 225:nanopb/pb_decode.c ****             }
 226:nanopb/pb_decode.c ****             else
 227:nanopb/pb_decode.c ****             {
 228:nanopb/pb_decode.c ****                 result |= (uint32_t)(byte & 0x7F) << bitpos;
 229:nanopb/pb_decode.c ****             }
 230:nanopb/pb_decode.c ****             bitpos = (uint_fast8_t)(bitpos + 7);
 231:nanopb/pb_decode.c ****         } while (byte & 0x80);
 232:nanopb/pb_decode.c ****         
 233:nanopb/pb_decode.c ****         if (bitpos == 35 && (byte & 0x70) != 0)
 234:nanopb/pb_decode.c ****         {
 235:nanopb/pb_decode.c ****             /* The last byte was at bitpos=28, so only bottom 4 bits fit. */
 236:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 237:nanopb/pb_decode.c ****         }
 238:nanopb/pb_decode.c ****    }
 239:nanopb/pb_decode.c ****    
 240:nanopb/pb_decode.c ****    *dest = result;
 229              		.loc 1 240 4 is_stmt 1 view .LVU53
 230              		.loc 1 240 10 is_stmt 0 view .LVU54
 231 0022 C8F80050 		str	r5, [r8]
 241:nanopb/pb_decode.c ****    return true;
 232              		.loc 1 241 4 is_stmt 1 view .LVU55
 233              	.LVL17:
 234              	.L25:
 242:nanopb/pb_decode.c **** }
 235              		.loc 1 242 1 is_stmt 0 view .LVU56
 236 0026 3846     		mov	r0, r7
 237 0028 02B0     		add	sp, sp, #8
 238              	.LCFI7:
 239              		.cfi_remember_state
 240              		.cfi_def_cfa_offset 24
 241              		@ sp needed
 242 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 243              	.LVL18:
 244              	.L38:
 245              	.LCFI8:
 246              		.cfi_restore_state
 189:nanopb/pb_decode.c ****         {
 247              		.loc 1 189 9 is_stmt 1 view .LVU57
 189:nanopb/pb_decode.c ****         {
 248              		.loc 1 189 19 is_stmt 0 view .LVU58
 249 002e B368     		ldr	r3, [r6, #8]
 189:nanopb/pb_decode.c ****         {
 250              		.loc 1 189 12 view .LVU59
 251 0030 002B     		cmp	r3, #0
 252 0032 F8D1     		bne	.L25
 191:nanopb/pb_decode.c ****             {
 253              		.loc 1 191 13 is_stmt 1 view .LVU60
 191:nanopb/pb_decode.c ****             {
 254              		.loc 1 191 16 is_stmt 0 view .LVU61
 255 0034 002C     		cmp	r4, #0
 256 0036 F6D0     		beq	.L25
 193:nanopb/pb_decode.c ****             }
 257              		.loc 1 193 17 is_stmt 1 view .LVU62
 193:nanopb/pb_decode.c ****             }
 258              		.loc 1 193 22 is_stmt 0 view .LVU63
 259 0038 0123     		movs	r3, #1
 260 003a 2370     		strb	r3, [r4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 10


 197:nanopb/pb_decode.c ****     }
 261              		.loc 1 197 9 is_stmt 1 view .LVU64
 197:nanopb/pb_decode.c ****     }
 262              		.loc 1 197 16 is_stmt 0 view .LVU65
 263 003c F3E7     		b	.L25
 264              	.L39:
 265              	.LBB2:
 208:nanopb/pb_decode.c ****         result = byte & 0x7F;
 266              		.loc 1 208 9 is_stmt 1 view .LVU66
 267              	.LVL19:
 209:nanopb/pb_decode.c ****         
 268              		.loc 1 209 9 view .LVU67
 209:nanopb/pb_decode.c ****         
 269              		.loc 1 209 16 is_stmt 0 view .LVU68
 270 003e 05F07F05 		and	r5, r5, #127
 271              	.LVL20:
 208:nanopb/pb_decode.c ****         result = byte & 0x7F;
 272              		.loc 1 208 22 view .LVU69
 273 0042 0724     		movs	r4, #7
 274              	.LVL21:
 208:nanopb/pb_decode.c ****         result = byte & 0x7F;
 275              		.loc 1 208 22 view .LVU70
 276 0044 0FE0     		b	.L33
 277              	.LVL22:
 278              	.L36:
 279              	.LBB3:
 219:nanopb/pb_decode.c ****                 
 280              		.loc 1 219 25 view .LVU71
 281 0046 0122     		movs	r2, #1
 282 0048 18E0     		b	.L29
 283              	.LVL23:
 284              	.L41:
 223:nanopb/pb_decode.c ****                 }
 285              		.loc 1 223 21 view .LVU72
 286 004a 1B4B     		ldr	r3, .L43
 287 004c 22E0     		b	.L32
 288              	.LVL24:
 289              	.L28:
 223:nanopb/pb_decode.c ****                 }
 290              		.loc 1 223 21 view .LVU73
 291              	.LBE3:
 228:nanopb/pb_decode.c ****             }
 292              		.loc 1 228 17 is_stmt 1 view .LVU74
 228:nanopb/pb_decode.c ****             }
 293              		.loc 1 228 43 is_stmt 0 view .LVU75
 294 004e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 228:nanopb/pb_decode.c ****             }
 295              		.loc 1 228 27 view .LVU76
 296 0052 03F07F03 		and	r3, r3, #127
 228:nanopb/pb_decode.c ****             }
 297              		.loc 1 228 51 view .LVU77
 298 0056 A340     		lsls	r3, r3, r4
 228:nanopb/pb_decode.c ****             }
 299              		.loc 1 228 24 view .LVU78
 300 0058 1D43     		orrs	r5, r5, r3
 301              	.LVL25:
 302              	.L30:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 11


 230:nanopb/pb_decode.c ****         } while (byte & 0x80);
 303              		.loc 1 230 13 is_stmt 1 view .LVU79
 230:nanopb/pb_decode.c ****         } while (byte & 0x80);
 304              		.loc 1 230 20 is_stmt 0 view .LVU80
 305 005a 0734     		adds	r4, r4, #7
 306              	.LVL26:
 231:nanopb/pb_decode.c ****         
 307              		.loc 1 231 18 view .LVU81
 308 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 231:nanopb/pb_decode.c ****         
 309              		.loc 1 231 9 view .LVU82
 310 0060 13F0800F 		tst	r3, #128
 311 0064 19D0     		beq	.L40
 312              	.LVL27:
 313              	.L33:
 211:nanopb/pb_decode.c ****         {
 314              		.loc 1 211 9 is_stmt 1 view .LVU83
 213:nanopb/pb_decode.c ****                 return false;
 315              		.loc 1 213 13 view .LVU84
 213:nanopb/pb_decode.c ****                 return false;
 316              		.loc 1 213 18 is_stmt 0 view .LVU85
 317 0066 0DF10701 		add	r1, sp, #7
 318 006a 3046     		mov	r0, r6
 319 006c FFF7FEFF 		bl	pb_readbyte
 320              	.LVL28:
 213:nanopb/pb_decode.c ****                 return false;
 321              		.loc 1 213 16 view .LVU86
 322 0070 F8B1     		cbz	r0, .L35
 216:nanopb/pb_decode.c ****             {
 323              		.loc 1 216 13 is_stmt 1 view .LVU87
 216:nanopb/pb_decode.c ****             {
 324              		.loc 1 216 16 is_stmt 0 view .LVU88
 325 0072 1F2C     		cmp	r4, #31
 326 0074 EBD9     		bls	.L28
 327              	.LBB4:
 219:nanopb/pb_decode.c ****                 
 328              		.loc 1 219 17 is_stmt 1 view .LVU89
 219:nanopb/pb_decode.c ****                 
 329              		.loc 1 219 25 is_stmt 0 view .LVU90
 330 0076 3E2C     		cmp	r4, #62
 331 0078 E5D8     		bhi	.L36
 332 007a FF22     		movs	r2, #255
 333              	.L29:
 334              	.LVL29:
 221:nanopb/pb_decode.c ****                 {
 335              		.loc 1 221 17 is_stmt 1 discriminator 4 view .LVU91
 221:nanopb/pb_decode.c ****                 {
 336              		.loc 1 221 27 is_stmt 0 discriminator 4 view .LVU92
 337 007c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 221:nanopb/pb_decode.c ****                 {
 338              		.loc 1 221 20 discriminator 4 view .LVU93
 339 0080 13F07F0F 		tst	r3, #127
 340 0084 E9D0     		beq	.L30
 221:nanopb/pb_decode.c ****                 {
 341              		.loc 1 221 43 discriminator 1 view .LVU94
 342 0086 002D     		cmp	r5, #0
 343 0088 01DA     		bge	.L31
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 12


 221:nanopb/pb_decode.c ****                 {
 344              		.loc 1 221 67 discriminator 2 view .LVU95
 345 008a 9342     		cmp	r3, r2
 346 008c E5D0     		beq	.L30
 347              	.L31:
 223:nanopb/pb_decode.c ****                 }
 348              		.loc 1 223 21 is_stmt 1 view .LVU96
 349 008e F368     		ldr	r3, [r6, #12]
 350 0090 002B     		cmp	r3, #0
 351 0092 DAD0     		beq	.L41
 352              	.L32:
 223:nanopb/pb_decode.c ****                 }
 353              		.loc 1 223 21 is_stmt 0 discriminator 4 view .LVU97
 354 0094 F360     		str	r3, [r6, #12]
 355 0096 0027     		movs	r7, #0
 356 0098 C5E7     		b	.L25
 357              	.LVL30:
 358              	.L40:
 223:nanopb/pb_decode.c ****                 }
 359              		.loc 1 223 21 discriminator 4 view .LVU98
 360              	.LBE4:
 233:nanopb/pb_decode.c ****         {
 361              		.loc 1 233 9 is_stmt 1 view .LVU99
 233:nanopb/pb_decode.c ****         {
 362              		.loc 1 233 12 is_stmt 0 view .LVU100
 363 009a 232C     		cmp	r4, #35
 364 009c C1D1     		bne	.L27
 233:nanopb/pb_decode.c ****         {
 365              		.loc 1 233 26 discriminator 1 view .LVU101
 366 009e 13F0700F 		tst	r3, #112
 367 00a2 BED0     		beq	.L27
 236:nanopb/pb_decode.c ****         }
 368              		.loc 1 236 13 is_stmt 1 view .LVU102
 369 00a4 F368     		ldr	r3, [r6, #12]
 370 00a6 13B1     		cbz	r3, .L42
 371              	.L34:
 236:nanopb/pb_decode.c ****         }
 372              		.loc 1 236 13 is_stmt 0 discriminator 4 view .LVU103
 373 00a8 F360     		str	r3, [r6, #12]
 374 00aa 0027     		movs	r7, #0
 375 00ac BBE7     		b	.L25
 376              	.L42:
 236:nanopb/pb_decode.c ****         }
 377              		.loc 1 236 13 view .LVU104
 378 00ae 024B     		ldr	r3, .L43
 379 00b0 FAE7     		b	.L34
 380              	.L35:
 214:nanopb/pb_decode.c ****             
 381              		.loc 1 214 24 view .LVU105
 382 00b2 0746     		mov	r7, r0
 383 00b4 B7E7     		b	.L25
 384              	.L44:
 385 00b6 00BF     		.align	2
 386              	.L43:
 387 00b8 00000000 		.word	.LC2
 388              	.LBE2:
 389              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 13


 390              	.LFE4:
 392              		.section	.text.decode_pointer_field,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	decode_pointer_field:
 400              	.LVL31:
 401              	.LFB15:
 243:nanopb/pb_decode.c **** 
 244:nanopb/pb_decode.c **** bool checkreturn pb_decode_varint32(pb_istream_t *stream, uint32_t *dest)
 245:nanopb/pb_decode.c **** {
 246:nanopb/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 247:nanopb/pb_decode.c **** }
 248:nanopb/pb_decode.c **** 
 249:nanopb/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
 250:nanopb/pb_decode.c **** bool checkreturn pb_decode_varint(pb_istream_t *stream, uint64_t *dest)
 251:nanopb/pb_decode.c **** {
 252:nanopb/pb_decode.c ****     pb_byte_t byte;
 253:nanopb/pb_decode.c ****     uint_fast8_t bitpos = 0;
 254:nanopb/pb_decode.c ****     uint64_t result = 0;
 255:nanopb/pb_decode.c ****     
 256:nanopb/pb_decode.c ****     do
 257:nanopb/pb_decode.c ****     {
 258:nanopb/pb_decode.c ****         if (bitpos >= 64)
 259:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 260:nanopb/pb_decode.c ****         
 261:nanopb/pb_decode.c ****         if (!pb_readbyte(stream, &byte))
 262:nanopb/pb_decode.c ****             return false;
 263:nanopb/pb_decode.c **** 
 264:nanopb/pb_decode.c ****         result |= (uint64_t)(byte & 0x7F) << bitpos;
 265:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 266:nanopb/pb_decode.c ****     } while (byte & 0x80);
 267:nanopb/pb_decode.c ****     
 268:nanopb/pb_decode.c ****     *dest = result;
 269:nanopb/pb_decode.c ****     return true;
 270:nanopb/pb_decode.c **** }
 271:nanopb/pb_decode.c **** #endif
 272:nanopb/pb_decode.c **** 
 273:nanopb/pb_decode.c **** bool checkreturn pb_skip_varint(pb_istream_t *stream)
 274:nanopb/pb_decode.c **** {
 275:nanopb/pb_decode.c ****     pb_byte_t byte;
 276:nanopb/pb_decode.c ****     do
 277:nanopb/pb_decode.c ****     {
 278:nanopb/pb_decode.c ****         if (!pb_read(stream, &byte, 1))
 279:nanopb/pb_decode.c ****             return false;
 280:nanopb/pb_decode.c ****     } while (byte & 0x80);
 281:nanopb/pb_decode.c ****     return true;
 282:nanopb/pb_decode.c **** }
 283:nanopb/pb_decode.c **** 
 284:nanopb/pb_decode.c **** bool checkreturn pb_skip_string(pb_istream_t *stream)
 285:nanopb/pb_decode.c **** {
 286:nanopb/pb_decode.c ****     uint32_t length;
 287:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &length))
 288:nanopb/pb_decode.c ****         return false;
 289:nanopb/pb_decode.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 14


 290:nanopb/pb_decode.c ****     return pb_read(stream, NULL, length);
 291:nanopb/pb_decode.c **** }
 292:nanopb/pb_decode.c **** 
 293:nanopb/pb_decode.c **** bool checkreturn pb_decode_tag(pb_istream_t *stream, pb_wire_type_t *wire_type, uint32_t *tag, bool
 294:nanopb/pb_decode.c **** {
 295:nanopb/pb_decode.c ****     uint32_t temp;
 296:nanopb/pb_decode.c ****     *eof = false;
 297:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 298:nanopb/pb_decode.c ****     *tag = 0;
 299:nanopb/pb_decode.c ****     
 300:nanopb/pb_decode.c ****     if (!pb_decode_varint32_eof(stream, &temp, eof))
 301:nanopb/pb_decode.c ****     {
 302:nanopb/pb_decode.c ****         return false;
 303:nanopb/pb_decode.c ****     }
 304:nanopb/pb_decode.c ****     
 305:nanopb/pb_decode.c ****     if (temp == 0)
 306:nanopb/pb_decode.c ****     {
 307:nanopb/pb_decode.c ****         *eof = true; /* Special feature: allow 0-terminated messages. */
 308:nanopb/pb_decode.c ****         return false;
 309:nanopb/pb_decode.c ****     }
 310:nanopb/pb_decode.c ****     
 311:nanopb/pb_decode.c ****     *tag = temp >> 3;
 312:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 313:nanopb/pb_decode.c ****     return true;
 314:nanopb/pb_decode.c **** }
 315:nanopb/pb_decode.c **** 
 316:nanopb/pb_decode.c **** bool checkreturn pb_skip_field(pb_istream_t *stream, pb_wire_type_t wire_type)
 317:nanopb/pb_decode.c **** {
 318:nanopb/pb_decode.c ****     switch (wire_type)
 319:nanopb/pb_decode.c ****     {
 320:nanopb/pb_decode.c ****         case PB_WT_VARINT: return pb_skip_varint(stream);
 321:nanopb/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 322:nanopb/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 323:nanopb/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 324:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 325:nanopb/pb_decode.c ****     }
 326:nanopb/pb_decode.c **** }
 327:nanopb/pb_decode.c **** 
 328:nanopb/pb_decode.c **** /* Read a raw value to buffer, for the purpose of passing it to callback as
 329:nanopb/pb_decode.c ****  * a substream. Size is maximum size on call, and actual size on return.
 330:nanopb/pb_decode.c ****  */
 331:nanopb/pb_decode.c **** static bool checkreturn read_raw_value(pb_istream_t *stream, pb_wire_type_t wire_type, pb_byte_t *b
 332:nanopb/pb_decode.c **** {
 333:nanopb/pb_decode.c ****     size_t max_size = *size;
 334:nanopb/pb_decode.c ****     switch (wire_type)
 335:nanopb/pb_decode.c ****     {
 336:nanopb/pb_decode.c ****         case PB_WT_VARINT:
 337:nanopb/pb_decode.c ****             *size = 0;
 338:nanopb/pb_decode.c ****             do
 339:nanopb/pb_decode.c ****             {
 340:nanopb/pb_decode.c ****                 (*size)++;
 341:nanopb/pb_decode.c ****                 if (*size > max_size) return false;
 342:nanopb/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 343:nanopb/pb_decode.c ****             } while (*buf++ & 0x80);
 344:nanopb/pb_decode.c ****             return true;
 345:nanopb/pb_decode.c ****             
 346:nanopb/pb_decode.c ****         case PB_WT_64BIT:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 15


 347:nanopb/pb_decode.c ****             *size = 8;
 348:nanopb/pb_decode.c ****             return pb_read(stream, buf, 8);
 349:nanopb/pb_decode.c ****         
 350:nanopb/pb_decode.c ****         case PB_WT_32BIT:
 351:nanopb/pb_decode.c ****             *size = 4;
 352:nanopb/pb_decode.c ****             return pb_read(stream, buf, 4);
 353:nanopb/pb_decode.c ****         
 354:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 355:nanopb/pb_decode.c ****     }
 356:nanopb/pb_decode.c **** }
 357:nanopb/pb_decode.c **** 
 358:nanopb/pb_decode.c **** /* Decode string length from stream and return a substream with limited length.
 359:nanopb/pb_decode.c ****  * Remember to close the substream using pb_close_string_substream().
 360:nanopb/pb_decode.c ****  */
 361:nanopb/pb_decode.c **** bool checkreturn pb_make_string_substream(pb_istream_t *stream, pb_istream_t *substream)
 362:nanopb/pb_decode.c **** {
 363:nanopb/pb_decode.c ****     uint32_t size;
 364:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 365:nanopb/pb_decode.c ****         return false;
 366:nanopb/pb_decode.c ****     
 367:nanopb/pb_decode.c ****     *substream = *stream;
 368:nanopb/pb_decode.c ****     if (substream->bytes_left < size)
 369:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 370:nanopb/pb_decode.c ****     
 371:nanopb/pb_decode.c ****     substream->bytes_left = size;
 372:nanopb/pb_decode.c ****     stream->bytes_left -= size;
 373:nanopb/pb_decode.c ****     return true;
 374:nanopb/pb_decode.c **** }
 375:nanopb/pb_decode.c **** 
 376:nanopb/pb_decode.c **** bool checkreturn pb_close_string_substream(pb_istream_t *stream, pb_istream_t *substream)
 377:nanopb/pb_decode.c **** {
 378:nanopb/pb_decode.c ****     if (substream->bytes_left) {
 379:nanopb/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 380:nanopb/pb_decode.c ****             return false;
 381:nanopb/pb_decode.c ****     }
 382:nanopb/pb_decode.c **** 
 383:nanopb/pb_decode.c ****     stream->state = substream->state;
 384:nanopb/pb_decode.c **** 
 385:nanopb/pb_decode.c **** #ifndef PB_NO_ERRMSG
 386:nanopb/pb_decode.c ****     stream->errmsg = substream->errmsg;
 387:nanopb/pb_decode.c **** #endif
 388:nanopb/pb_decode.c ****     return true;
 389:nanopb/pb_decode.c **** }
 390:nanopb/pb_decode.c **** 
 391:nanopb/pb_decode.c **** /*************************
 392:nanopb/pb_decode.c ****  * Decode a single field *
 393:nanopb/pb_decode.c ****  *************************/
 394:nanopb/pb_decode.c **** 
 395:nanopb/pb_decode.c **** static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fiel
 396:nanopb/pb_decode.c **** {
 397:nanopb/pb_decode.c ****     pb_type_t type;
 398:nanopb/pb_decode.c ****     pb_decoder_t func;
 399:nanopb/pb_decode.c ****     
 400:nanopb/pb_decode.c ****     type = iter->pos->type;
 401:nanopb/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 402:nanopb/pb_decode.c **** 
 403:nanopb/pb_decode.c ****     switch (PB_HTYPE(type))
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 16


 404:nanopb/pb_decode.c ****     {
 405:nanopb/pb_decode.c ****         case PB_HTYPE_REQUIRED:
 406:nanopb/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 407:nanopb/pb_decode.c ****             
 408:nanopb/pb_decode.c ****         case PB_HTYPE_OPTIONAL:
 409:nanopb/pb_decode.c ****             if (iter->pSize != iter->pData)
 410:nanopb/pb_decode.c ****                 *(bool*)iter->pSize = true;
 411:nanopb/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 412:nanopb/pb_decode.c ****     
 413:nanopb/pb_decode.c ****         case PB_HTYPE_REPEATED:
 414:nanopb/pb_decode.c ****             if (wire_type == PB_WT_STRING
 415:nanopb/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 416:nanopb/pb_decode.c ****             {
 417:nanopb/pb_decode.c ****                 /* Packed array */
 418:nanopb/pb_decode.c ****                 bool status = true;
 419:nanopb/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 420:nanopb/pb_decode.c ****                 pb_istream_t substream;
 421:nanopb/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 422:nanopb/pb_decode.c ****                     return false;
 423:nanopb/pb_decode.c ****                 
 424:nanopb/pb_decode.c ****                 while (substream.bytes_left > 0 && *size < iter->pos->array_size)
 425:nanopb/pb_decode.c ****                 {
 426:nanopb/pb_decode.c ****                     void *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 427:nanopb/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 428:nanopb/pb_decode.c ****                     {
 429:nanopb/pb_decode.c ****                         status = false;
 430:nanopb/pb_decode.c ****                         break;
 431:nanopb/pb_decode.c ****                     }
 432:nanopb/pb_decode.c ****                     (*size)++;
 433:nanopb/pb_decode.c ****                 }
 434:nanopb/pb_decode.c **** 
 435:nanopb/pb_decode.c ****                 if (substream.bytes_left != 0)
 436:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 437:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 438:nanopb/pb_decode.c ****                     return false;
 439:nanopb/pb_decode.c **** 
 440:nanopb/pb_decode.c ****                 return status;
 441:nanopb/pb_decode.c ****             }
 442:nanopb/pb_decode.c ****             else
 443:nanopb/pb_decode.c ****             {
 444:nanopb/pb_decode.c ****                 /* Repeated field */
 445:nanopb/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 446:nanopb/pb_decode.c ****                 void *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 447:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 448:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 449:nanopb/pb_decode.c ****                 
 450:nanopb/pb_decode.c ****                 (*size)++;
 451:nanopb/pb_decode.c ****                 return func(stream, iter->pos, pItem);
 452:nanopb/pb_decode.c ****             }
 453:nanopb/pb_decode.c **** 
 454:nanopb/pb_decode.c ****         case PB_HTYPE_ONEOF:
 455:nanopb/pb_decode.c ****             *(pb_size_t*)iter->pSize = iter->pos->tag;
 456:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 457:nanopb/pb_decode.c ****             {
 458:nanopb/pb_decode.c ****                 /* We memset to zero so that any callbacks are set to NULL.
 459:nanopb/pb_decode.c ****                  * Then set any default values. */
 460:nanopb/pb_decode.c ****                 memset(iter->pData, 0, iter->pos->data_size);
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 17


 461:nanopb/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 462:nanopb/pb_decode.c ****             }
 463:nanopb/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 464:nanopb/pb_decode.c **** 
 465:nanopb/pb_decode.c ****         default:
 466:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 467:nanopb/pb_decode.c ****     }
 468:nanopb/pb_decode.c **** }
 469:nanopb/pb_decode.c **** 
 470:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 471:nanopb/pb_decode.c **** /* Allocate storage for the field and store the pointer at iter->pData.
 472:nanopb/pb_decode.c ****  * array_size is the number of entries to reserve in an array.
 473:nanopb/pb_decode.c ****  * Zero size is not allowed, use pb_free() for releasing.
 474:nanopb/pb_decode.c ****  */
 475:nanopb/pb_decode.c **** static bool checkreturn allocate_field(pb_istream_t *stream, void *pData, size_t data_size, size_t 
 476:nanopb/pb_decode.c **** {    
 477:nanopb/pb_decode.c ****     void *ptr = *(void**)pData;
 478:nanopb/pb_decode.c ****     
 479:nanopb/pb_decode.c ****     if (data_size == 0 || array_size == 0)
 480:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid size");
 481:nanopb/pb_decode.c ****     
 482:nanopb/pb_decode.c ****     /* Check for multiplication overflows.
 483:nanopb/pb_decode.c ****      * This code avoids the costly division if the sizes are small enough.
 484:nanopb/pb_decode.c ****      * Multiplication is safe as long as only half of bits are set
 485:nanopb/pb_decode.c ****      * in either multiplicand.
 486:nanopb/pb_decode.c ****      */
 487:nanopb/pb_decode.c ****     {
 488:nanopb/pb_decode.c ****         const size_t check_limit = (size_t)1 << (sizeof(size_t) * 4);
 489:nanopb/pb_decode.c ****         if (data_size >= check_limit || array_size >= check_limit)
 490:nanopb/pb_decode.c ****         {
 491:nanopb/pb_decode.c ****             const size_t size_max = (size_t)-1;
 492:nanopb/pb_decode.c ****             if (size_max / array_size < data_size)
 493:nanopb/pb_decode.c ****             {
 494:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "size too large");
 495:nanopb/pb_decode.c ****             }
 496:nanopb/pb_decode.c ****         }
 497:nanopb/pb_decode.c ****     }
 498:nanopb/pb_decode.c ****     
 499:nanopb/pb_decode.c ****     /* Allocate new or expand previous allocation */
 500:nanopb/pb_decode.c ****     /* Note: on failure the old pointer will remain in the structure,
 501:nanopb/pb_decode.c ****      * the message must be freed by caller also on error return. */
 502:nanopb/pb_decode.c ****     ptr = pb_realloc(ptr, array_size * data_size);
 503:nanopb/pb_decode.c ****     if (ptr == NULL)
 504:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "realloc failed");
 505:nanopb/pb_decode.c ****     
 506:nanopb/pb_decode.c ****     *(void**)pData = ptr;
 507:nanopb/pb_decode.c ****     return true;
 508:nanopb/pb_decode.c **** }
 509:nanopb/pb_decode.c **** 
 510:nanopb/pb_decode.c **** /* Clear a newly allocated item in case it contains a pointer, or is a submessage. */
 511:nanopb/pb_decode.c **** static void initialize_pointer_field(void *pItem, pb_field_iter_t *iter)
 512:nanopb/pb_decode.c **** {
 513:nanopb/pb_decode.c ****     if (PB_LTYPE(iter->pos->type) == PB_LTYPE_STRING ||
 514:nanopb/pb_decode.c ****         PB_LTYPE(iter->pos->type) == PB_LTYPE_BYTES)
 515:nanopb/pb_decode.c ****     {
 516:nanopb/pb_decode.c ****         *(void**)pItem = NULL;
 517:nanopb/pb_decode.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 18


 518:nanopb/pb_decode.c ****     else if (PB_LTYPE(iter->pos->type) == PB_LTYPE_SUBMESSAGE)
 519:nanopb/pb_decode.c ****     {
 520:nanopb/pb_decode.c ****         /* We memset to zero so that any callbacks are set to NULL.
 521:nanopb/pb_decode.c ****          * Then set any default values. */
 522:nanopb/pb_decode.c ****         memset(pItem, 0, iter->pos->data_size);
 523:nanopb/pb_decode.c ****         pb_message_set_to_defaults((const pb_field_t *) iter->pos->ptr, pItem);
 524:nanopb/pb_decode.c ****     }
 525:nanopb/pb_decode.c **** }
 526:nanopb/pb_decode.c **** #endif
 527:nanopb/pb_decode.c **** 
 528:nanopb/pb_decode.c **** static bool checkreturn decode_pointer_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fie
 529:nanopb/pb_decode.c **** {
 402              		.loc 1 529 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 530:nanopb/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
 531:nanopb/pb_decode.c ****     PB_UNUSED(wire_type);
 407              		.loc 1 531 5 view .LVU107
 532:nanopb/pb_decode.c ****     PB_UNUSED(iter);
 408              		.loc 1 532 5 view .LVU108
 533:nanopb/pb_decode.c ****     PB_RETURN_ERROR(stream, "no malloc support");
 409              		.loc 1 533 5 view .LVU109
 410 0000 C368     		ldr	r3, [r0, #12]
 411 0002 13B1     		cbz	r3, .L47
 412              	.L46:
 413              		.loc 1 533 5 is_stmt 0 discriminator 4 view .LVU110
 414 0004 C360     		str	r3, [r0, #12]
 534:nanopb/pb_decode.c **** #else
 535:nanopb/pb_decode.c ****     pb_type_t type;
 536:nanopb/pb_decode.c ****     pb_decoder_t func;
 537:nanopb/pb_decode.c ****     
 538:nanopb/pb_decode.c ****     type = iter->pos->type;
 539:nanopb/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 540:nanopb/pb_decode.c ****     
 541:nanopb/pb_decode.c ****     switch (PB_HTYPE(type))
 542:nanopb/pb_decode.c ****     {
 543:nanopb/pb_decode.c ****         case PB_HTYPE_REQUIRED:
 544:nanopb/pb_decode.c ****         case PB_HTYPE_OPTIONAL:
 545:nanopb/pb_decode.c ****         case PB_HTYPE_ONEOF:
 546:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE &&
 547:nanopb/pb_decode.c ****                 *(void**)iter->pData != NULL)
 548:nanopb/pb_decode.c ****             {
 549:nanopb/pb_decode.c ****                 /* Duplicate field, have to release the old allocation first. */
 550:nanopb/pb_decode.c ****                 pb_release_single_field(iter);
 551:nanopb/pb_decode.c ****             }
 552:nanopb/pb_decode.c ****         
 553:nanopb/pb_decode.c ****             if (PB_HTYPE(type) == PB_HTYPE_ONEOF)
 554:nanopb/pb_decode.c ****             {
 555:nanopb/pb_decode.c ****                 *(pb_size_t*)iter->pSize = iter->pos->tag;
 556:nanopb/pb_decode.c ****             }
 557:nanopb/pb_decode.c **** 
 558:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_STRING ||
 559:nanopb/pb_decode.c ****                 PB_LTYPE(type) == PB_LTYPE_BYTES)
 560:nanopb/pb_decode.c ****             {
 561:nanopb/pb_decode.c ****                 return func(stream, iter->pos, iter->pData);
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 19


 562:nanopb/pb_decode.c ****             }
 563:nanopb/pb_decode.c ****             else
 564:nanopb/pb_decode.c ****             {
 565:nanopb/pb_decode.c ****                 if (!allocate_field(stream, iter->pData, iter->pos->data_size, 1))
 566:nanopb/pb_decode.c ****                     return false;
 567:nanopb/pb_decode.c ****                 
 568:nanopb/pb_decode.c ****                 initialize_pointer_field(*(void**)iter->pData, iter);
 569:nanopb/pb_decode.c ****                 return func(stream, iter->pos, *(void**)iter->pData);
 570:nanopb/pb_decode.c ****             }
 571:nanopb/pb_decode.c ****     
 572:nanopb/pb_decode.c ****         case PB_HTYPE_REPEATED:
 573:nanopb/pb_decode.c ****             if (wire_type == PB_WT_STRING
 574:nanopb/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 575:nanopb/pb_decode.c ****             {
 576:nanopb/pb_decode.c ****                 /* Packed array, multiple items come in at once. */
 577:nanopb/pb_decode.c ****                 bool status = true;
 578:nanopb/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 579:nanopb/pb_decode.c ****                 size_t allocated_size = *size;
 580:nanopb/pb_decode.c ****                 void *pItem;
 581:nanopb/pb_decode.c ****                 pb_istream_t substream;
 582:nanopb/pb_decode.c ****                 
 583:nanopb/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 584:nanopb/pb_decode.c ****                     return false;
 585:nanopb/pb_decode.c ****                 
 586:nanopb/pb_decode.c ****                 while (substream.bytes_left)
 587:nanopb/pb_decode.c ****                 {
 588:nanopb/pb_decode.c ****                     if ((size_t)*size + 1 > allocated_size)
 589:nanopb/pb_decode.c ****                     {
 590:nanopb/pb_decode.c ****                         /* Allocate more storage. This tries to guess the
 591:nanopb/pb_decode.c ****                          * number of remaining entries. Round the division
 592:nanopb/pb_decode.c ****                          * upwards. */
 593:nanopb/pb_decode.c ****                         allocated_size += (substream.bytes_left - 1) / iter->pos->data_size + 1;
 594:nanopb/pb_decode.c ****                         
 595:nanopb/pb_decode.c ****                         if (!allocate_field(&substream, iter->pData, iter->pos->data_size, allocate
 596:nanopb/pb_decode.c ****                         {
 597:nanopb/pb_decode.c ****                             status = false;
 598:nanopb/pb_decode.c ****                             break;
 599:nanopb/pb_decode.c ****                         }
 600:nanopb/pb_decode.c ****                     }
 601:nanopb/pb_decode.c **** 
 602:nanopb/pb_decode.c ****                     /* Decode the array entry */
 603:nanopb/pb_decode.c ****                     pItem = *(char**)iter->pData + iter->pos->data_size * (*size);
 604:nanopb/pb_decode.c ****                     initialize_pointer_field(pItem, iter);
 605:nanopb/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 606:nanopb/pb_decode.c ****                     {
 607:nanopb/pb_decode.c ****                         status = false;
 608:nanopb/pb_decode.c ****                         break;
 609:nanopb/pb_decode.c ****                     }
 610:nanopb/pb_decode.c ****                     
 611:nanopb/pb_decode.c ****                     if (*size == PB_SIZE_MAX)
 612:nanopb/pb_decode.c ****                     {
 613:nanopb/pb_decode.c **** #ifndef PB_NO_ERRMSG
 614:nanopb/pb_decode.c ****                         stream->errmsg = "too many array entries";
 615:nanopb/pb_decode.c **** #endif
 616:nanopb/pb_decode.c ****                         status = false;
 617:nanopb/pb_decode.c ****                         break;
 618:nanopb/pb_decode.c ****                     }
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 20


 619:nanopb/pb_decode.c ****                     
 620:nanopb/pb_decode.c ****                     (*size)++;
 621:nanopb/pb_decode.c ****                 }
 622:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 623:nanopb/pb_decode.c ****                     return false;
 624:nanopb/pb_decode.c ****                 
 625:nanopb/pb_decode.c ****                 return status;
 626:nanopb/pb_decode.c ****             }
 627:nanopb/pb_decode.c ****             else
 628:nanopb/pb_decode.c ****             {
 629:nanopb/pb_decode.c ****                 /* Normal repeated field, i.e. only one item at a time. */
 630:nanopb/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 631:nanopb/pb_decode.c ****                 void *pItem;
 632:nanopb/pb_decode.c ****                 
 633:nanopb/pb_decode.c ****                 if (*size == PB_SIZE_MAX)
 634:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "too many array entries");
 635:nanopb/pb_decode.c ****                 
 636:nanopb/pb_decode.c ****                 (*size)++;
 637:nanopb/pb_decode.c ****                 if (!allocate_field(stream, iter->pData, iter->pos->data_size, *size))
 638:nanopb/pb_decode.c ****                     return false;
 639:nanopb/pb_decode.c ****             
 640:nanopb/pb_decode.c ****                 pItem = *(char**)iter->pData + iter->pos->data_size * (*size - 1);
 641:nanopb/pb_decode.c ****                 initialize_pointer_field(pItem, iter);
 642:nanopb/pb_decode.c ****                 return func(stream, iter->pos, pItem);
 643:nanopb/pb_decode.c ****             }
 644:nanopb/pb_decode.c **** 
 645:nanopb/pb_decode.c ****         default:
 646:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 647:nanopb/pb_decode.c ****     }
 648:nanopb/pb_decode.c **** #endif
 649:nanopb/pb_decode.c **** }
 415              		.loc 1 649 1 discriminator 4 view .LVU111
 416 0006 0020     		movs	r0, #0
 417              	.LVL32:
 418              		.loc 1 649 1 discriminator 4 view .LVU112
 419 0008 7047     		bx	lr
 420              	.LVL33:
 421              	.L47:
 533:nanopb/pb_decode.c ****     PB_RETURN_ERROR(stream, "no malloc support");
 422              		.loc 1 533 5 view .LVU113
 423 000a 014B     		ldr	r3, .L48
 424 000c FAE7     		b	.L46
 425              	.L49:
 426 000e 00BF     		.align	2
 427              	.L48:
 428 0010 00000000 		.word	.LC3
 429              		.cfi_endproc
 430              	.LFE15:
 432              		.section	.text.iter_from_extension,"ax",%progbits
 433              		.align	1
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	iter_from_extension:
 440              	.LVL34:
 441              	.LFB18:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 21


 650:nanopb/pb_decode.c **** 
 651:nanopb/pb_decode.c **** static bool checkreturn decode_callback_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fi
 652:nanopb/pb_decode.c **** {
 653:nanopb/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 654:nanopb/pb_decode.c ****     
 655:nanopb/pb_decode.c **** #ifdef PB_OLD_CALLBACK_STYLE
 656:nanopb/pb_decode.c ****     void *arg = pCallback->arg;
 657:nanopb/pb_decode.c **** #else
 658:nanopb/pb_decode.c ****     void **arg = &(pCallback->arg);
 659:nanopb/pb_decode.c **** #endif
 660:nanopb/pb_decode.c ****     
 661:nanopb/pb_decode.c ****     if (pCallback == NULL || pCallback->funcs.decode == NULL)
 662:nanopb/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 663:nanopb/pb_decode.c ****     
 664:nanopb/pb_decode.c ****     if (wire_type == PB_WT_STRING)
 665:nanopb/pb_decode.c ****     {
 666:nanopb/pb_decode.c ****         pb_istream_t substream;
 667:nanopb/pb_decode.c ****         
 668:nanopb/pb_decode.c ****         if (!pb_make_string_substream(stream, &substream))
 669:nanopb/pb_decode.c ****             return false;
 670:nanopb/pb_decode.c ****         
 671:nanopb/pb_decode.c ****         do
 672:nanopb/pb_decode.c ****         {
 673:nanopb/pb_decode.c ****             if (!pCallback->funcs.decode(&substream, iter->pos, arg))
 674:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 675:nanopb/pb_decode.c ****         } while (substream.bytes_left);
 676:nanopb/pb_decode.c ****         
 677:nanopb/pb_decode.c ****         if (!pb_close_string_substream(stream, &substream))
 678:nanopb/pb_decode.c ****             return false;
 679:nanopb/pb_decode.c **** 
 680:nanopb/pb_decode.c ****         return true;
 681:nanopb/pb_decode.c ****     }
 682:nanopb/pb_decode.c ****     else
 683:nanopb/pb_decode.c ****     {
 684:nanopb/pb_decode.c ****         /* Copy the single scalar value to stack.
 685:nanopb/pb_decode.c ****          * This is required so that we can limit the stream length,
 686:nanopb/pb_decode.c ****          * which in turn allows to use same callback for packed and
 687:nanopb/pb_decode.c ****          * not-packed fields. */
 688:nanopb/pb_decode.c ****         pb_istream_t substream;
 689:nanopb/pb_decode.c ****         pb_byte_t buffer[10];
 690:nanopb/pb_decode.c ****         size_t size = sizeof(buffer);
 691:nanopb/pb_decode.c ****         
 692:nanopb/pb_decode.c ****         if (!read_raw_value(stream, wire_type, buffer, &size))
 693:nanopb/pb_decode.c ****             return false;
 694:nanopb/pb_decode.c ****         substream = pb_istream_from_buffer(buffer, size);
 695:nanopb/pb_decode.c ****         
 696:nanopb/pb_decode.c ****         return pCallback->funcs.decode(&substream, iter->pos, arg);
 697:nanopb/pb_decode.c ****     }
 698:nanopb/pb_decode.c **** }
 699:nanopb/pb_decode.c **** 
 700:nanopb/pb_decode.c **** static bool checkreturn decode_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_field_iter_
 701:nanopb/pb_decode.c **** {
 702:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 703:nanopb/pb_decode.c ****     /* When decoding an oneof field, check if there is old data that must be
 704:nanopb/pb_decode.c ****      * released first. */
 705:nanopb/pb_decode.c ****     if (PB_HTYPE(iter->pos->type) == PB_HTYPE_ONEOF)
 706:nanopb/pb_decode.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 22


 707:nanopb/pb_decode.c ****         if (!pb_release_union_field(stream, iter))
 708:nanopb/pb_decode.c ****             return false;
 709:nanopb/pb_decode.c ****     }
 710:nanopb/pb_decode.c **** #endif
 711:nanopb/pb_decode.c **** 
 712:nanopb/pb_decode.c ****     switch (PB_ATYPE(iter->pos->type))
 713:nanopb/pb_decode.c ****     {
 714:nanopb/pb_decode.c ****         case PB_ATYPE_STATIC:
 715:nanopb/pb_decode.c ****             return decode_static_field(stream, wire_type, iter);
 716:nanopb/pb_decode.c ****         
 717:nanopb/pb_decode.c ****         case PB_ATYPE_POINTER:
 718:nanopb/pb_decode.c ****             return decode_pointer_field(stream, wire_type, iter);
 719:nanopb/pb_decode.c ****         
 720:nanopb/pb_decode.c ****         case PB_ATYPE_CALLBACK:
 721:nanopb/pb_decode.c ****             return decode_callback_field(stream, wire_type, iter);
 722:nanopb/pb_decode.c ****         
 723:nanopb/pb_decode.c ****         default:
 724:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 725:nanopb/pb_decode.c ****     }
 726:nanopb/pb_decode.c **** }
 727:nanopb/pb_decode.c **** 
 728:nanopb/pb_decode.c **** static void iter_from_extension(pb_field_iter_t *iter, pb_extension_t *extension)
 729:nanopb/pb_decode.c **** {
 442              		.loc 1 729 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		.loc 1 729 1 is_stmt 0 view .LVU115
 447 0000 70B5     		push	{r4, r5, r6, lr}
 448              	.LCFI9:
 449              		.cfi_def_cfa_offset 16
 450              		.cfi_offset 4, -16
 451              		.cfi_offset 5, -12
 452              		.cfi_offset 6, -8
 453              		.cfi_offset 14, -4
 454 0002 0546     		mov	r5, r0
 455 0004 0C46     		mov	r4, r1
 730:nanopb/pb_decode.c ****     /* Fake a field iterator for the extension field.
 731:nanopb/pb_decode.c ****      * It is not actually safe to advance this iterator, but decode_field
 732:nanopb/pb_decode.c ****      * will not even try to. */
 733:nanopb/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 456              		.loc 1 733 5 is_stmt 1 view .LVU116
 457              		.loc 1 733 59 is_stmt 0 view .LVU117
 458 0006 0B68     		ldr	r3, [r1]
 459              		.loc 1 733 23 view .LVU118
 460 0008 9E68     		ldr	r6, [r3, #8]
 461              	.LVL35:
 734:nanopb/pb_decode.c ****     (void)pb_field_iter_begin(iter, field, extension->dest);
 462              		.loc 1 734 5 is_stmt 1 view .LVU119
 463              		.loc 1 734 11 is_stmt 0 view .LVU120
 464 000a 4A68     		ldr	r2, [r1, #4]
 465 000c 3146     		mov	r1, r6
 466              	.LVL36:
 467              		.loc 1 734 11 view .LVU121
 468 000e FFF7FEFF 		bl	pb_field_iter_begin
 469              	.LVL37:
 735:nanopb/pb_decode.c ****     iter->pData = extension->dest;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 23


 470              		.loc 1 735 5 is_stmt 1 view .LVU122
 471              		.loc 1 735 28 is_stmt 0 view .LVU123
 472 0012 6368     		ldr	r3, [r4, #4]
 473              		.loc 1 735 17 view .LVU124
 474 0014 2B61     		str	r3, [r5, #16]
 736:nanopb/pb_decode.c ****     iter->pSize = &extension->found;
 475              		.loc 1 736 5 is_stmt 1 view .LVU125
 476              		.loc 1 736 19 is_stmt 0 view .LVU126
 477 0016 04F10C03 		add	r3, r4, #12
 478              		.loc 1 736 17 view .LVU127
 479 001a 6B61     		str	r3, [r5, #20]
 737:nanopb/pb_decode.c ****     
 738:nanopb/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
 480              		.loc 1 738 5 is_stmt 1 view .LVU128
 481              		.loc 1 738 9 is_stmt 0 view .LVU129
 482 001c 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 483              		.loc 1 738 8 view .LVU130
 484 001e 03F0C003 		and	r3, r3, #192
 485 0022 802B     		cmp	r3, #128
 486 0024 00D0     		beq	.L53
 487              	.LVL38:
 488              	.L50:
 739:nanopb/pb_decode.c ****     {
 740:nanopb/pb_decode.c ****         /* For pointer extensions, the pointer is stored directly
 741:nanopb/pb_decode.c ****          * in the extension structure. This avoids having an extra
 742:nanopb/pb_decode.c ****          * indirection. */
 743:nanopb/pb_decode.c ****         iter->pData = &extension->dest;
 744:nanopb/pb_decode.c ****     }
 745:nanopb/pb_decode.c **** }
 489              		.loc 1 745 1 view .LVU131
 490 0026 70BD     		pop	{r4, r5, r6, pc}
 491              	.LVL39:
 492              	.L53:
 743:nanopb/pb_decode.c ****     }
 493              		.loc 1 743 9 is_stmt 1 view .LVU132
 743:nanopb/pb_decode.c ****     }
 494              		.loc 1 743 23 is_stmt 0 view .LVU133
 495 0028 0434     		adds	r4, r4, #4
 496              	.LVL40:
 743:nanopb/pb_decode.c ****     }
 497              		.loc 1 743 21 view .LVU134
 498 002a 2C61     		str	r4, [r5, #16]
 499              		.loc 1 745 1 view .LVU135
 500 002c FBE7     		b	.L50
 501              		.cfi_endproc
 502              	.LFE18:
 504              		.section	.text.find_extension_field,"ax",%progbits
 505              		.align	1
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu softvfp
 511              	find_extension_field:
 512              	.LVL41:
 513              	.LFB21:
 746:nanopb/pb_decode.c **** 
 747:nanopb/pb_decode.c **** /* Default handler for extension fields. Expects a pb_field_t structure
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 24


 748:nanopb/pb_decode.c ****  * in extension->type->arg. */
 749:nanopb/pb_decode.c **** static bool checkreturn default_extension_decoder(pb_istream_t *stream,
 750:nanopb/pb_decode.c ****     pb_extension_t *extension, uint32_t tag, pb_wire_type_t wire_type)
 751:nanopb/pb_decode.c **** {
 752:nanopb/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 753:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 754:nanopb/pb_decode.c ****     
 755:nanopb/pb_decode.c ****     if (field->tag != tag)
 756:nanopb/pb_decode.c ****         return true;
 757:nanopb/pb_decode.c ****     
 758:nanopb/pb_decode.c ****     iter_from_extension(&iter, extension);
 759:nanopb/pb_decode.c ****     extension->found = true;
 760:nanopb/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 761:nanopb/pb_decode.c **** }
 762:nanopb/pb_decode.c **** 
 763:nanopb/pb_decode.c **** /* Try to decode an unknown field as an extension field. Tries each extension
 764:nanopb/pb_decode.c ****  * decoder in turn, until one of them handles the field or loop ends. */
 765:nanopb/pb_decode.c **** static bool checkreturn decode_extension(pb_istream_t *stream,
 766:nanopb/pb_decode.c ****     uint32_t tag, pb_wire_type_t wire_type, pb_field_iter_t *iter)
 767:nanopb/pb_decode.c **** {
 768:nanopb/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 769:nanopb/pb_decode.c ****     size_t pos = stream->bytes_left;
 770:nanopb/pb_decode.c ****     
 771:nanopb/pb_decode.c ****     while (extension != NULL && pos == stream->bytes_left)
 772:nanopb/pb_decode.c ****     {
 773:nanopb/pb_decode.c ****         bool status;
 774:nanopb/pb_decode.c ****         if (extension->type->decode)
 775:nanopb/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 776:nanopb/pb_decode.c ****         else
 777:nanopb/pb_decode.c ****             status = default_extension_decoder(stream, extension, tag, wire_type);
 778:nanopb/pb_decode.c **** 
 779:nanopb/pb_decode.c ****         if (!status)
 780:nanopb/pb_decode.c ****             return false;
 781:nanopb/pb_decode.c ****         
 782:nanopb/pb_decode.c ****         extension = extension->next;
 783:nanopb/pb_decode.c ****     }
 784:nanopb/pb_decode.c ****     
 785:nanopb/pb_decode.c ****     return true;
 786:nanopb/pb_decode.c **** }
 787:nanopb/pb_decode.c **** 
 788:nanopb/pb_decode.c **** /* Step through the iterator until an extension field is found or until all
 789:nanopb/pb_decode.c ****  * entries have been checked. There can be only one extension field per
 790:nanopb/pb_decode.c ****  * message. Returns false if no extension field is found. */
 791:nanopb/pb_decode.c **** static bool checkreturn find_extension_field(pb_field_iter_t *iter)
 792:nanopb/pb_decode.c **** {
 514              		.loc 1 792 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		.loc 1 792 1 is_stmt 0 view .LVU137
 519 0000 38B5     		push	{r3, r4, r5, lr}
 520              	.LCFI10:
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 25


 526 0002 0446     		mov	r4, r0
 793:nanopb/pb_decode.c ****     const pb_field_t *start = iter->pos;
 527              		.loc 1 793 5 is_stmt 1 view .LVU138
 528              		.loc 1 793 23 is_stmt 0 view .LVU139
 529 0004 4568     		ldr	r5, [r0, #4]
 530              	.LVL42:
 531              	.L56:
 794:nanopb/pb_decode.c ****     
 795:nanopb/pb_decode.c ****     do {
 532              		.loc 1 795 5 is_stmt 1 view .LVU140
 796:nanopb/pb_decode.c ****         if (PB_LTYPE(iter->pos->type) == PB_LTYPE_EXTENSION)
 533              		.loc 1 796 9 view .LVU141
 534              		.loc 1 796 13 is_stmt 0 view .LVU142
 535 0006 6368     		ldr	r3, [r4, #4]
 536 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 537              		.loc 1 796 12 view .LVU143
 538 000a 03F00F03 		and	r3, r3, #15
 539 000e 082B     		cmp	r3, #8
 540 0010 07D0     		beq	.L57
 797:nanopb/pb_decode.c ****             return true;
 798:nanopb/pb_decode.c ****         (void)pb_field_iter_next(iter);
 541              		.loc 1 798 9 is_stmt 1 view .LVU144
 542              		.loc 1 798 15 is_stmt 0 view .LVU145
 543 0012 2046     		mov	r0, r4
 544 0014 FFF7FEFF 		bl	pb_field_iter_next
 545              	.LVL43:
 799:nanopb/pb_decode.c ****     } while (iter->pos != start);
 546              		.loc 1 799 18 view .LVU146
 547 0018 6368     		ldr	r3, [r4, #4]
 548              		.loc 1 799 5 view .LVU147
 549 001a AB42     		cmp	r3, r5
 550 001c F3D1     		bne	.L56
 800:nanopb/pb_decode.c ****     
 801:nanopb/pb_decode.c ****     return false;
 551              		.loc 1 801 12 view .LVU148
 552 001e 0020     		movs	r0, #0
 553 0020 00E0     		b	.L55
 554              	.L57:
 797:nanopb/pb_decode.c ****         (void)pb_field_iter_next(iter);
 555              		.loc 1 797 20 view .LVU149
 556 0022 0120     		movs	r0, #1
 557              	.L55:
 802:nanopb/pb_decode.c **** }
 558              		.loc 1 802 1 view .LVU150
 559 0024 38BD     		pop	{r3, r4, r5, pc}
 560              		.loc 1 802 1 view .LVU151
 561              		.cfi_endproc
 562              	.LFE21:
 564              		.section	.text.pb_field_set_to_default,"ax",%progbits
 565              		.align	1
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu softvfp
 571              	pb_field_set_to_default:
 572              	.LVL44:
 573              	.LFB22:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 26


 803:nanopb/pb_decode.c **** 
 804:nanopb/pb_decode.c **** /* Initialize message fields to default values, recursively */
 805:nanopb/pb_decode.c **** static void pb_field_set_to_default(pb_field_iter_t *iter)
 806:nanopb/pb_decode.c **** {
 574              		.loc 1 806 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 24
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		.loc 1 806 1 is_stmt 0 view .LVU153
 579 0000 10B5     		push	{r4, lr}
 580              	.LCFI11:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 4, -8
 583              		.cfi_offset 14, -4
 584 0002 86B0     		sub	sp, sp, #24
 585              	.LCFI12:
 586              		.cfi_def_cfa_offset 32
 807:nanopb/pb_decode.c ****     pb_type_t type;
 587              		.loc 1 807 5 is_stmt 1 view .LVU154
 808:nanopb/pb_decode.c ****     type = iter->pos->type;
 588              		.loc 1 808 5 view .LVU155
 589              		.loc 1 808 16 is_stmt 0 view .LVU156
 590 0004 4368     		ldr	r3, [r0, #4]
 591              		.loc 1 808 10 view .LVU157
 592 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 593              	.LVL45:
 809:nanopb/pb_decode.c ****     
 810:nanopb/pb_decode.c ****     if (PB_LTYPE(type) == PB_LTYPE_EXTENSION)
 594              		.loc 1 810 5 is_stmt 1 view .LVU158
 595              		.loc 1 810 8 is_stmt 0 view .LVU159
 596 0008 03F00F02 		and	r2, r3, #15
 597 000c 082A     		cmp	r2, #8
 598 000e 18D0     		beq	.L72
 811:nanopb/pb_decode.c ****     {
 812:nanopb/pb_decode.c ****         pb_extension_t *ext = *(pb_extension_t* const *)iter->pData;
 813:nanopb/pb_decode.c ****         while (ext != NULL)
 814:nanopb/pb_decode.c ****         {
 815:nanopb/pb_decode.c ****             pb_field_iter_t ext_iter;
 816:nanopb/pb_decode.c ****             ext->found = false;
 817:nanopb/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 818:nanopb/pb_decode.c ****             pb_field_set_to_default(&ext_iter);
 819:nanopb/pb_decode.c ****             ext = ext->next;
 820:nanopb/pb_decode.c ****         }
 821:nanopb/pb_decode.c ****     }
 822:nanopb/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_STATIC)
 599              		.loc 1 822 10 is_stmt 1 view .LVU160
 600              		.loc 1 822 13 is_stmt 0 view .LVU161
 601 0010 13F0C002 		ands	r2, r3, #192
 602 0014 3AD1     		bne	.L64
 603              	.LBB5:
 823:nanopb/pb_decode.c ****     {
 824:nanopb/pb_decode.c ****         bool init_data = true;
 604              		.loc 1 824 9 is_stmt 1 view .LVU162
 605              	.LVL46:
 825:nanopb/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_OPTIONAL && iter->pSize != iter->pData)
 606              		.loc 1 825 9 view .LVU163
 607 0016 03F03003 		and	r3, r3, #48
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 27


 608              	.LVL47:
 609              		.loc 1 825 12 is_stmt 0 view .LVU164
 610 001a 102B     		cmp	r3, #16
 611 001c 1FD0     		beq	.L73
 612              	.L65:
 826:nanopb/pb_decode.c ****         {
 827:nanopb/pb_decode.c ****             /* Set has_field to false. Still initialize the optional field
 828:nanopb/pb_decode.c ****              * itself also. */
 829:nanopb/pb_decode.c ****             *(bool*)iter->pSize = false;
 830:nanopb/pb_decode.c ****         }
 831:nanopb/pb_decode.c ****         else if (PB_HTYPE(type) == PB_HTYPE_REPEATED ||
 613              		.loc 1 831 14 is_stmt 1 view .LVU165
 614              		.loc 1 831 17 is_stmt 0 view .LVU166
 615 001e 202B     		cmp	r3, #32
 616 0020 24D0     		beq	.L67
 617              		.loc 1 831 54 discriminator 1 view .LVU167
 618 0022 302B     		cmp	r3, #48
 619 0024 22D0     		beq	.L67
 620              	.LVL48:
 621              	.L66:
 832:nanopb/pb_decode.c ****                  PB_HTYPE(type) == PB_HTYPE_ONEOF)
 833:nanopb/pb_decode.c ****         {
 834:nanopb/pb_decode.c ****             /* REPEATED: Set array count to 0, no need to initialize contents.
 835:nanopb/pb_decode.c ****                ONEOF: Set which_field to 0. */
 836:nanopb/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
 837:nanopb/pb_decode.c ****             init_data = false;
 838:nanopb/pb_decode.c ****         }
 839:nanopb/pb_decode.c **** 
 840:nanopb/pb_decode.c ****         if (init_data)
 841:nanopb/pb_decode.c ****         {
 842:nanopb/pb_decode.c ****             if (PB_LTYPE(iter->pos->type) == PB_LTYPE_SUBMESSAGE)
 622              		.loc 1 842 13 is_stmt 1 view .LVU168
 623              		.loc 1 842 17 is_stmt 0 view .LVU169
 624 0026 4268     		ldr	r2, [r0, #4]
 625 0028 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 626              		.loc 1 842 16 view .LVU170
 627 002a 03F00F03 		and	r3, r3, #15
 628 002e 072B     		cmp	r3, #7
 629 0030 20D0     		beq	.L74
 843:nanopb/pb_decode.c ****             {
 844:nanopb/pb_decode.c ****                 /* Initialize submessage to defaults */
 845:nanopb/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t *) iter->pos->ptr, iter->pData);
 846:nanopb/pb_decode.c ****             }
 847:nanopb/pb_decode.c ****             else if (iter->pos->ptr != NULL)
 630              		.loc 1 847 18 is_stmt 1 view .LVU171
 631              		.loc 1 847 31 is_stmt 0 view .LVU172
 632 0032 D2F80610 		ldr	r1, [r2, #6]	@ unaligned
 633              		.loc 1 847 21 view .LVU173
 634 0036 19B3     		cbz	r1, .L69
 848:nanopb/pb_decode.c ****             {
 849:nanopb/pb_decode.c ****                 /* Initialize to default value */
 850:nanopb/pb_decode.c ****                 memcpy(iter->pData, iter->pos->ptr, iter->pos->data_size);
 635              		.loc 1 850 17 is_stmt 1 view .LVU174
 636 0038 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 637 003a 0069     		ldr	r0, [r0, #16]
 638              	.LVL49:
 639              		.loc 1 850 17 is_stmt 0 view .LVU175
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 28


 640 003c FFF7FEFF 		bl	memcpy
 641              	.LVL50:
 642 0040 26E0     		b	.L59
 643              	.LVL51:
 644              	.L72:
 645              		.loc 1 850 17 view .LVU176
 646              	.LBE5:
 647              	.LBB6:
 812:nanopb/pb_decode.c ****         while (ext != NULL)
 648              		.loc 1 812 9 is_stmt 1 view .LVU177
 812:nanopb/pb_decode.c ****         while (ext != NULL)
 649              		.loc 1 812 61 is_stmt 0 view .LVU178
 650 0042 0369     		ldr	r3, [r0, #16]
 651              	.LVL52:
 812:nanopb/pb_decode.c ****         while (ext != NULL)
 652              		.loc 1 812 25 view .LVU179
 653 0044 1C68     		ldr	r4, [r3]
 654              	.LVL53:
 813:nanopb/pb_decode.c ****         {
 655              		.loc 1 813 9 is_stmt 1 view .LVU180
 656              	.L61:
 813:nanopb/pb_decode.c ****         {
 657              		.loc 1 813 15 is_stmt 0 view .LVU181
 658 0046 1CB3     		cbz	r4, .L59
 659              	.LBB7:
 815:nanopb/pb_decode.c ****             ext->found = false;
 660              		.loc 1 815 13 is_stmt 1 view .LVU182
 816:nanopb/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 661              		.loc 1 816 13 view .LVU183
 816:nanopb/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 662              		.loc 1 816 24 is_stmt 0 view .LVU184
 663 0048 0023     		movs	r3, #0
 664 004a 2373     		strb	r3, [r4, #12]
 817:nanopb/pb_decode.c ****             pb_field_set_to_default(&ext_iter);
 665              		.loc 1 817 13 is_stmt 1 view .LVU185
 666 004c 2146     		mov	r1, r4
 667 004e 6846     		mov	r0, sp
 668 0050 FFF7FEFF 		bl	iter_from_extension
 669              	.LVL54:
 818:nanopb/pb_decode.c ****             ext = ext->next;
 670              		.loc 1 818 13 view .LVU186
 671 0054 6846     		mov	r0, sp
 672 0056 FFF7D3FF 		bl	pb_field_set_to_default
 673              	.LVL55:
 819:nanopb/pb_decode.c ****         }
 674              		.loc 1 819 13 view .LVU187
 819:nanopb/pb_decode.c ****         }
 675              		.loc 1 819 17 is_stmt 0 view .LVU188
 676 005a A468     		ldr	r4, [r4, #8]
 677              	.LVL56:
 819:nanopb/pb_decode.c ****         }
 678              		.loc 1 819 17 view .LVU189
 679 005c F3E7     		b	.L61
 680              	.LVL57:
 681              	.L73:
 819:nanopb/pb_decode.c ****         }
 682              		.loc 1 819 17 view .LVU190
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 29


 683              	.LBE7:
 684              	.LBE6:
 685              	.LBB8:
 825:nanopb/pb_decode.c ****         {
 686              		.loc 1 825 56 discriminator 1 view .LVU191
 687 005e 4269     		ldr	r2, [r0, #20]
 825:nanopb/pb_decode.c ****         {
 688              		.loc 1 825 71 discriminator 1 view .LVU192
 689 0060 0169     		ldr	r1, [r0, #16]
 825:nanopb/pb_decode.c ****         {
 690              		.loc 1 825 49 discriminator 1 view .LVU193
 691 0062 8A42     		cmp	r2, r1
 692 0064 DBD0     		beq	.L65
 829:nanopb/pb_decode.c ****         }
 693              		.loc 1 829 13 is_stmt 1 view .LVU194
 829:nanopb/pb_decode.c ****         }
 694              		.loc 1 829 33 is_stmt 0 view .LVU195
 695 0066 0023     		movs	r3, #0
 696 0068 1370     		strb	r3, [r2]
 697              	.LVL58:
 840:nanopb/pb_decode.c ****         {
 698              		.loc 1 840 9 is_stmt 1 view .LVU196
 699 006a DCE7     		b	.L66
 700              	.LVL59:
 701              	.L67:
 836:nanopb/pb_decode.c ****             init_data = false;
 702              		.loc 1 836 13 view .LVU197
 836:nanopb/pb_decode.c ****             init_data = false;
 703              		.loc 1 836 30 is_stmt 0 view .LVU198
 704 006c 4369     		ldr	r3, [r0, #20]
 836:nanopb/pb_decode.c ****             init_data = false;
 705              		.loc 1 836 38 view .LVU199
 706 006e 0022     		movs	r2, #0
 707 0070 1A70     		strb	r2, [r3]
 708              	.LVL60:
 837:nanopb/pb_decode.c ****         }
 709              		.loc 1 837 13 is_stmt 1 view .LVU200
 840:nanopb/pb_decode.c ****         {
 710              		.loc 1 840 9 view .LVU201
 711 0072 0DE0     		b	.L59
 712              	.LVL61:
 713              	.L74:
 845:nanopb/pb_decode.c ****             }
 714              		.loc 1 845 17 view .LVU202
 715 0074 0169     		ldr	r1, [r0, #16]
 716 0076 D2F80600 		ldr	r0, [r2, #6]	@ unaligned
 717              	.LVL62:
 845:nanopb/pb_decode.c ****             }
 718              		.loc 1 845 17 is_stmt 0 view .LVU203
 719 007a FFF7FEFF 		bl	pb_message_set_to_defaults
 720              	.LVL63:
 721 007e 07E0     		b	.L59
 722              	.LVL64:
 723              	.L69:
 851:nanopb/pb_decode.c ****             }
 852:nanopb/pb_decode.c ****             else
 853:nanopb/pb_decode.c ****             {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 30


 854:nanopb/pb_decode.c ****                 /* Initialize to zeros */
 855:nanopb/pb_decode.c ****                 memset(iter->pData, 0, iter->pos->data_size);
 724              		.loc 1 855 17 is_stmt 1 view .LVU204
 725 0080 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 726 0082 0021     		movs	r1, #0
 727 0084 0069     		ldr	r0, [r0, #16]
 728              	.LVL65:
 729              		.loc 1 855 17 is_stmt 0 view .LVU205
 730 0086 FFF7FEFF 		bl	memset
 731              	.LVL66:
 732 008a 01E0     		b	.L59
 733              	.LVL67:
 734              	.L64:
 735              		.loc 1 855 17 view .LVU206
 736              	.LBE8:
 856:nanopb/pb_decode.c ****             }
 857:nanopb/pb_decode.c ****         }
 858:nanopb/pb_decode.c ****     }
 859:nanopb/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_POINTER)
 737              		.loc 1 859 10 is_stmt 1 view .LVU207
 738              		.loc 1 859 13 is_stmt 0 view .LVU208
 739 008c 802A     		cmp	r2, #128
 740 008e 01D0     		beq	.L75
 741              	.LVL68:
 742              	.L59:
 860:nanopb/pb_decode.c ****     {
 861:nanopb/pb_decode.c ****         /* Initialize the pointer to NULL. */
 862:nanopb/pb_decode.c ****         *(void**)iter->pData = NULL;
 863:nanopb/pb_decode.c ****         
 864:nanopb/pb_decode.c ****         /* Initialize array count to 0. */
 865:nanopb/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED ||
 866:nanopb/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 867:nanopb/pb_decode.c ****         {
 868:nanopb/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
 869:nanopb/pb_decode.c ****         }
 870:nanopb/pb_decode.c ****     }
 871:nanopb/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_CALLBACK)
 872:nanopb/pb_decode.c ****     {
 873:nanopb/pb_decode.c ****         /* Don't overwrite callback */
 874:nanopb/pb_decode.c ****     }
 875:nanopb/pb_decode.c **** }
 743              		.loc 1 875 1 view .LVU209
 744 0090 06B0     		add	sp, sp, #24
 745              	.LCFI13:
 746              		.cfi_remember_state
 747              		.cfi_def_cfa_offset 8
 748              		@ sp needed
 749 0092 10BD     		pop	{r4, pc}
 750              	.LVL69:
 751              	.L75:
 752              	.LCFI14:
 753              		.cfi_restore_state
 862:nanopb/pb_decode.c ****         
 754              		.loc 1 862 9 is_stmt 1 view .LVU210
 862:nanopb/pb_decode.c ****         
 755              		.loc 1 862 22 is_stmt 0 view .LVU211
 756 0094 0269     		ldr	r2, [r0, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 31


 862:nanopb/pb_decode.c ****         
 757              		.loc 1 862 30 view .LVU212
 758 0096 0021     		movs	r1, #0
 759 0098 1160     		str	r1, [r2]
 865:nanopb/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 760              		.loc 1 865 9 is_stmt 1 view .LVU213
 761 009a 03F03003 		and	r3, r3, #48
 762              	.LVL70:
 865:nanopb/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 763              		.loc 1 865 12 is_stmt 0 view .LVU214
 764 009e 202B     		cmp	r3, #32
 765 00a0 01D0     		beq	.L70
 865:nanopb/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 766              		.loc 1 865 49 discriminator 1 view .LVU215
 767 00a2 302B     		cmp	r3, #48
 768 00a4 F4D1     		bne	.L59
 769              	.L70:
 868:nanopb/pb_decode.c ****         }
 770              		.loc 1 868 13 is_stmt 1 view .LVU216
 868:nanopb/pb_decode.c ****         }
 771              		.loc 1 868 30 is_stmt 0 view .LVU217
 772 00a6 4369     		ldr	r3, [r0, #20]
 868:nanopb/pb_decode.c ****         }
 773              		.loc 1 868 38 view .LVU218
 774 00a8 0022     		movs	r2, #0
 775 00aa 1A70     		strb	r2, [r3]
 874:nanopb/pb_decode.c **** }
 776              		.loc 1 874 5 is_stmt 1 view .LVU219
 777              		.loc 1 875 1 is_stmt 0 view .LVU220
 778 00ac F0E7     		b	.L59
 779              		.cfi_endproc
 780              	.LFE22:
 782              		.section	.text.pb_message_set_to_defaults,"ax",%progbits
 783              		.align	1
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu softvfp
 789              	pb_message_set_to_defaults:
 790              	.LVL71:
 791              	.LFB23:
 876:nanopb/pb_decode.c **** 
 877:nanopb/pb_decode.c **** static void pb_message_set_to_defaults(const pb_field_t fields[], void *dest_struct)
 878:nanopb/pb_decode.c **** {
 792              		.loc 1 878 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 24
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		.loc 1 878 1 is_stmt 0 view .LVU222
 797 0000 00B5     		push	{lr}
 798              	.LCFI15:
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 14, -4
 801 0002 87B0     		sub	sp, sp, #28
 802              	.LCFI16:
 803              		.cfi_def_cfa_offset 32
 879:nanopb/pb_decode.c ****     pb_field_iter_t iter;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 32


 804              		.loc 1 879 5 is_stmt 1 view .LVU223
 880:nanopb/pb_decode.c **** 
 881:nanopb/pb_decode.c ****     if (!pb_field_iter_begin(&iter, fields, dest_struct))
 805              		.loc 1 881 5 view .LVU224
 806              		.loc 1 881 10 is_stmt 0 view .LVU225
 807 0004 0A46     		mov	r2, r1
 808 0006 0146     		mov	r1, r0
 809              	.LVL72:
 810              		.loc 1 881 10 view .LVU226
 811 0008 6846     		mov	r0, sp
 812              	.LVL73:
 813              		.loc 1 881 10 view .LVU227
 814 000a FFF7FEFF 		bl	pb_field_iter_begin
 815              	.LVL74:
 816              		.loc 1 881 8 view .LVU228
 817 000e 38B1     		cbz	r0, .L76
 818              	.L77:
 882:nanopb/pb_decode.c ****         return; /* Empty message type */
 883:nanopb/pb_decode.c ****     
 884:nanopb/pb_decode.c ****     do
 819              		.loc 1 884 5 is_stmt 1 discriminator 1 view .LVU229
 885:nanopb/pb_decode.c ****     {
 886:nanopb/pb_decode.c ****         pb_field_set_to_default(&iter);
 820              		.loc 1 886 9 discriminator 1 view .LVU230
 821 0010 6846     		mov	r0, sp
 822 0012 FFF7FEFF 		bl	pb_field_set_to_default
 823              	.LVL75:
 887:nanopb/pb_decode.c ****     } while (pb_field_iter_next(&iter));
 824              		.loc 1 887 14 is_stmt 0 discriminator 1 view .LVU231
 825 0016 6846     		mov	r0, sp
 826 0018 FFF7FEFF 		bl	pb_field_iter_next
 827              	.LVL76:
 828              		.loc 1 887 5 discriminator 1 view .LVU232
 829 001c 0028     		cmp	r0, #0
 830 001e F7D1     		bne	.L77
 831              	.L76:
 888:nanopb/pb_decode.c **** }
 832              		.loc 1 888 1 view .LVU233
 833 0020 07B0     		add	sp, sp, #28
 834              	.LCFI17:
 835              		.cfi_def_cfa_offset 4
 836              		@ sp needed
 837 0022 5DF804FB 		ldr	pc, [sp], #4
 838              		.cfi_endproc
 839              	.LFE23:
 841              		.section	.text.pb_read,"ax",%progbits
 842              		.align	1
 843              		.global	pb_read
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu softvfp
 849              	pb_read:
 850              	.LVL77:
 851              	.LFB1:
 101:nanopb/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 852              		.loc 1 101 1 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 33


 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 16
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 101:nanopb/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 856              		.loc 1 101 1 is_stmt 0 view .LVU235
 857 0000 30B5     		push	{r4, r5, lr}
 858              	.LCFI18:
 859              		.cfi_def_cfa_offset 12
 860              		.cfi_offset 4, -12
 861              		.cfi_offset 5, -8
 862              		.cfi_offset 14, -4
 863 0002 85B0     		sub	sp, sp, #20
 864              	.LCFI19:
 865              		.cfi_def_cfa_offset 32
 866 0004 0446     		mov	r4, r0
 867 0006 1546     		mov	r5, r2
 103:nanopb/pb_decode.c **** 	{
 868              		.loc 1 103 2 is_stmt 1 view .LVU236
 103:nanopb/pb_decode.c **** 	{
 869              		.loc 1 103 5 is_stmt 0 view .LVU237
 870 0008 0846     		mov	r0, r1
 871              	.LVL78:
 103:nanopb/pb_decode.c **** 	{
 872              		.loc 1 103 5 view .LVU238
 873 000a 79B1     		cbz	r1, .L91
 874              	.LVL79:
 875              	.L81:
 119:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 876              		.loc 1 119 5 is_stmt 1 view .LVU239
 119:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 877              		.loc 1 119 15 is_stmt 0 view .LVU240
 878 000c A368     		ldr	r3, [r4, #8]
 119:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 879              		.loc 1 119 8 view .LVU241
 880 000e AB42     		cmp	r3, r5
 881 0010 23D3     		bcc	.L92
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 882              		.loc 1 123 5 is_stmt 1 view .LVU242
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 883              		.loc 1 123 16 is_stmt 0 view .LVU243
 884 0012 2368     		ldr	r3, [r4]
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 885              		.loc 1 123 10 view .LVU244
 886 0014 2A46     		mov	r2, r5
 887 0016 0146     		mov	r1, r0
 888              	.LVL80:
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 889              		.loc 1 123 10 view .LVU245
 890 0018 2046     		mov	r0, r4
 891              	.LVL81:
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 892              		.loc 1 123 10 view .LVU246
 893 001a 9847     		blx	r3
 894              	.LVL82:
 123:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 895              		.loc 1 123 8 view .LVU247
 896 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 34


 897 001e 18B3     		cbz	r0, .L93
 130:nanopb/pb_decode.c ****     return true;
 898              		.loc 1 130 5 is_stmt 1 view .LVU248
 130:nanopb/pb_decode.c ****     return true;
 899              		.loc 1 130 24 is_stmt 0 view .LVU249
 900 0020 A268     		ldr	r2, [r4, #8]
 901 0022 551B     		subs	r5, r2, r5
 902              	.LVL83:
 130:nanopb/pb_decode.c ****     return true;
 903              		.loc 1 130 24 view .LVU250
 904 0024 A560     		str	r5, [r4, #8]
 131:nanopb/pb_decode.c **** }
 905              		.loc 1 131 5 is_stmt 1 view .LVU251
 906              	.LVL84:
 907              	.L85:
 132:nanopb/pb_decode.c **** 
 908              		.loc 1 132 1 is_stmt 0 discriminator 1 view .LVU252
 909 0026 1846     		mov	r0, r3
 910 0028 05B0     		add	sp, sp, #20
 911              	.LCFI20:
 912              		.cfi_remember_state
 913              		.cfi_def_cfa_offset 12
 914              		@ sp needed
 915 002a 30BD     		pop	{r4, r5, pc}
 916              	.LVL85:
 917              	.L91:
 918              	.LCFI21:
 919              		.cfi_restore_state
 103:nanopb/pb_decode.c **** 	{
 920              		.loc 1 103 27 discriminator 1 view .LVU253
 921 002c 2268     		ldr	r2, [r4]
 922              	.LVL86:
 103:nanopb/pb_decode.c **** 	{
 923              		.loc 1 103 18 discriminator 1 view .LVU254
 924 002e 114B     		ldr	r3, .L97
 925 0030 9A42     		cmp	r2, r3
 926 0032 EBD0     		beq	.L81
 927              	.LVL87:
 928              	.L82:
 929              	.LBB9:
 107:nanopb/pb_decode.c **** 		{
 930              		.loc 1 107 9 view .LVU255
 931 0034 102D     		cmp	r5, #16
 932 0036 09D9     		bls	.L94
 109:nanopb/pb_decode.c **** 				return false;
 933              		.loc 1 109 4 is_stmt 1 view .LVU256
 109:nanopb/pb_decode.c **** 				return false;
 934              		.loc 1 109 9 is_stmt 0 view .LVU257
 935 0038 1022     		movs	r2, #16
 936 003a 6946     		mov	r1, sp
 937 003c 2046     		mov	r0, r4
 938 003e FFF7FEFF 		bl	pb_read
 939              	.LVL88:
 109:nanopb/pb_decode.c **** 				return false;
 940              		.loc 1 109 7 view .LVU258
 941 0042 0346     		mov	r3, r0
 942 0044 0028     		cmp	r0, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 35


 943 0046 EED0     		beq	.L85
 112:nanopb/pb_decode.c **** 		}
 944              		.loc 1 112 4 is_stmt 1 view .LVU259
 112:nanopb/pb_decode.c **** 		}
 945              		.loc 1 112 10 is_stmt 0 view .LVU260
 946 0048 103D     		subs	r5, r5, #16
 947              	.LVL89:
 112:nanopb/pb_decode.c **** 		}
 948              		.loc 1 112 10 view .LVU261
 949 004a F3E7     		b	.L82
 950              	.L94:
 115:nanopb/pb_decode.c **** 	}
 951              		.loc 1 115 3 is_stmt 1 view .LVU262
 115:nanopb/pb_decode.c **** 	}
 952              		.loc 1 115 10 is_stmt 0 view .LVU263
 953 004c 2A46     		mov	r2, r5
 954 004e 6946     		mov	r1, sp
 955 0050 2046     		mov	r0, r4
 956 0052 FFF7FEFF 		bl	pb_read
 957              	.LVL90:
 958 0056 0346     		mov	r3, r0
 959 0058 E5E7     		b	.L85
 960              	.LVL91:
 961              	.L92:
 115:nanopb/pb_decode.c **** 	}
 962              		.loc 1 115 10 view .LVU264
 963              	.LBE9:
 120:nanopb/pb_decode.c ****     
 964              		.loc 1 120 9 is_stmt 1 view .LVU265
 965 005a E368     		ldr	r3, [r4, #12]
 966 005c 13B1     		cbz	r3, .L95
 967              	.L87:
 120:nanopb/pb_decode.c ****     
 968              		.loc 1 120 9 is_stmt 0 discriminator 4 view .LVU266
 969 005e E360     		str	r3, [r4, #12]
 970 0060 0023     		movs	r3, #0
 971 0062 E0E7     		b	.L85
 972              	.L95:
 120:nanopb/pb_decode.c ****     
 973              		.loc 1 120 9 view .LVU267
 974 0064 044B     		ldr	r3, .L97+4
 975 0066 FAE7     		b	.L87
 976              	.LVL92:
 977              	.L93:
 124:nanopb/pb_decode.c **** #else
 978              		.loc 1 124 9 is_stmt 1 view .LVU268
 979 0068 E268     		ldr	r2, [r4, #12]
 980 006a 0AB1     		cbz	r2, .L96
 981              	.L89:
 124:nanopb/pb_decode.c **** #else
 982              		.loc 1 124 9 is_stmt 0 discriminator 4 view .LVU269
 983 006c E260     		str	r2, [r4, #12]
 984 006e DAE7     		b	.L85
 985              	.L96:
 124:nanopb/pb_decode.c **** #else
 986              		.loc 1 124 9 view .LVU270
 987 0070 024A     		ldr	r2, .L97+8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 36


 988 0072 FBE7     		b	.L89
 989              	.L98:
 990              		.align	2
 991              	.L97:
 992 0074 00000000 		.word	buf_read
 993 0078 00000000 		.word	.LC0
 994 007c 10000000 		.word	.LC1
 995              		.cfi_endproc
 996              	.LFE1:
 998              		.section	.text.pb_skip_varint,"ax",%progbits
 999              		.align	1
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1003              		.fpu softvfp
 1005              	pb_skip_varint:
 1006              	.LVL93:
 1007              	.LFB7:
 274:nanopb/pb_decode.c ****     pb_byte_t byte;
 1008              		.loc 1 274 1 is_stmt 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 274:nanopb/pb_decode.c ****     pb_byte_t byte;
 1012              		.loc 1 274 1 is_stmt 0 view .LVU272
 1013 0000 10B5     		push	{r4, lr}
 1014              	.LCFI22:
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 4, -8
 1017              		.cfi_offset 14, -4
 1018 0002 82B0     		sub	sp, sp, #8
 1019              	.LCFI23:
 1020              		.cfi_def_cfa_offset 16
 1021 0004 0446     		mov	r4, r0
 1022              	.LVL94:
 1023              	.L101:
 275:nanopb/pb_decode.c ****     do
 1024              		.loc 1 275 5 is_stmt 1 view .LVU273
 276:nanopb/pb_decode.c ****     {
 1025              		.loc 1 276 5 view .LVU274
 278:nanopb/pb_decode.c ****             return false;
 1026              		.loc 1 278 9 view .LVU275
 278:nanopb/pb_decode.c ****             return false;
 1027              		.loc 1 278 14 is_stmt 0 view .LVU276
 1028 0006 0122     		movs	r2, #1
 1029 0008 0DF10701 		add	r1, sp, #7
 1030 000c 2046     		mov	r0, r4
 1031 000e FFF7FEFF 		bl	pb_read
 1032              	.LVL95:
 278:nanopb/pb_decode.c ****             return false;
 1033              		.loc 1 278 12 view .LVU277
 1034 0012 0246     		mov	r2, r0
 1035 0014 18B1     		cbz	r0, .L100
 280:nanopb/pb_decode.c ****     return true;
 1036              		.loc 1 280 14 view .LVU278
 1037 0016 9DF90730 		ldrsb	r3, [sp, #7]
 280:nanopb/pb_decode.c ****     return true;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 37


 1038              		.loc 1 280 5 view .LVU279
 1039 001a 002B     		cmp	r3, #0
 1040 001c F3DB     		blt	.L101
 1041              	.L100:
 282:nanopb/pb_decode.c **** 
 1042              		.loc 1 282 1 view .LVU280
 1043 001e 1046     		mov	r0, r2
 1044 0020 02B0     		add	sp, sp, #8
 1045              	.LCFI24:
 1046              		.cfi_def_cfa_offset 8
 1047              		@ sp needed
 1048 0022 10BD     		pop	{r4, pc}
 282:nanopb/pb_decode.c **** 
 1049              		.loc 1 282 1 view .LVU281
 1050              		.cfi_endproc
 1051              	.LFE7:
 1053              		.section	.text.read_raw_value,"ax",%progbits
 1054              		.align	1
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1058              		.fpu softvfp
 1060              	read_raw_value:
 1061              	.LVL96:
 1062              	.LFB11:
 332:nanopb/pb_decode.c ****     size_t max_size = *size;
 1063              		.loc 1 332 1 is_stmt 1 view -0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 332:nanopb/pb_decode.c ****     size_t max_size = *size;
 1067              		.loc 1 332 1 is_stmt 0 view .LVU283
 1068 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1069              	.LCFI25:
 1070              		.cfi_def_cfa_offset 24
 1071              		.cfi_offset 3, -24
 1072              		.cfi_offset 4, -20
 1073              		.cfi_offset 5, -16
 1074              		.cfi_offset 6, -12
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 0646     		mov	r6, r0
 1078 0004 1446     		mov	r4, r2
 1079 0006 1D46     		mov	r5, r3
 333:nanopb/pb_decode.c ****     switch (wire_type)
 1080              		.loc 1 333 5 is_stmt 1 view .LVU284
 333:nanopb/pb_decode.c ****     switch (wire_type)
 1081              		.loc 1 333 12 is_stmt 0 view .LVU285
 1082 0008 1F68     		ldr	r7, [r3]
 1083              	.LVL97:
 334:nanopb/pb_decode.c ****     {
 1084              		.loc 1 334 5 is_stmt 1 view .LVU286
 1085 000a 0129     		cmp	r1, #1
 1086 000c 1ED0     		beq	.L104
 1087 000e 4BB2     		sxtb	r3, r1
 1088              	.LVL98:
 334:nanopb/pb_decode.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 38


 1089              		.loc 1 334 5 is_stmt 0 view .LVU287
 1090 0010 33B1     		cbz	r3, .L105
 1091 0012 0529     		cmp	r1, #5
 1092 0014 22D0     		beq	.L106
 354:nanopb/pb_decode.c ****     }
 1093              		.loc 1 354 18 is_stmt 1 view .LVU288
 1094 0016 C368     		ldr	r3, [r0, #12]
 1095 0018 3BB3     		cbz	r3, .L115
 1096              	.L110:
 354:nanopb/pb_decode.c ****     }
 1097              		.loc 1 354 18 is_stmt 0 discriminator 4 view .LVU289
 1098 001a F360     		str	r3, [r6, #12]
 1099 001c 0022     		movs	r2, #0
 1100              	.LVL99:
 354:nanopb/pb_decode.c ****     }
 1101              		.loc 1 354 18 discriminator 4 view .LVU290
 1102 001e 1BE0     		b	.L108
 1103              	.LVL100:
 1104              	.L105:
 337:nanopb/pb_decode.c ****             do
 1105              		.loc 1 337 13 is_stmt 1 view .LVU291
 337:nanopb/pb_decode.c ****             do
 1106              		.loc 1 337 19 is_stmt 0 view .LVU292
 1107 0020 0023     		movs	r3, #0
 1108 0022 2B60     		str	r3, [r5]
 1109 0024 00E0     		b	.L109
 1110              	.LVL101:
 1111              	.L112:
 343:nanopb/pb_decode.c ****             return true;
 1112              		.loc 1 343 26 view .LVU293
 1113 0026 0C46     		mov	r4, r1
 1114              	.LVL102:
 1115              	.L109:
 338:nanopb/pb_decode.c ****             {
 1116              		.loc 1 338 13 is_stmt 1 view .LVU294
 340:nanopb/pb_decode.c ****                 if (*size > max_size) return false;
 1117              		.loc 1 340 17 view .LVU295
 340:nanopb/pb_decode.c ****                 if (*size > max_size) return false;
 1118              		.loc 1 340 18 is_stmt 0 view .LVU296
 1119 0028 2B68     		ldr	r3, [r5]
 340:nanopb/pb_decode.c ****                 if (*size > max_size) return false;
 1120              		.loc 1 340 24 view .LVU297
 1121 002a 0133     		adds	r3, r3, #1
 1122 002c 2B60     		str	r3, [r5]
 341:nanopb/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1123              		.loc 1 341 17 is_stmt 1 view .LVU298
 341:nanopb/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1124              		.loc 1 341 20 is_stmt 0 view .LVU299
 1125 002e BB42     		cmp	r3, r7
 1126 0030 1DD8     		bhi	.L111
 342:nanopb/pb_decode.c ****             } while (*buf++ & 0x80);
 1127              		.loc 1 342 17 is_stmt 1 view .LVU300
 342:nanopb/pb_decode.c ****             } while (*buf++ & 0x80);
 1128              		.loc 1 342 22 is_stmt 0 view .LVU301
 1129 0032 0122     		movs	r2, #1
 1130 0034 2146     		mov	r1, r4
 1131 0036 3046     		mov	r0, r6
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 39


 1132 0038 FFF7FEFF 		bl	pb_read
 1133              	.LVL103:
 342:nanopb/pb_decode.c ****             } while (*buf++ & 0x80);
 1134              		.loc 1 342 20 view .LVU302
 1135 003c 0246     		mov	r2, r0
 1136 003e 58B1     		cbz	r0, .L108
 343:nanopb/pb_decode.c ****             return true;
 1137              		.loc 1 343 26 view .LVU303
 1138 0040 2146     		mov	r1, r4
 343:nanopb/pb_decode.c ****             return true;
 1139              		.loc 1 343 22 view .LVU304
 1140 0042 11F9013B 		ldrsb	r3, [r1], #1
 343:nanopb/pb_decode.c ****             return true;
 1141              		.loc 1 343 13 view .LVU305
 1142 0046 002B     		cmp	r3, #0
 1143 0048 EDDB     		blt	.L112
 1144 004a 05E0     		b	.L108
 1145              	.LVL104:
 1146              	.L104:
 347:nanopb/pb_decode.c ****             return pb_read(stream, buf, 8);
 1147              		.loc 1 347 13 is_stmt 1 view .LVU306
 347:nanopb/pb_decode.c ****             return pb_read(stream, buf, 8);
 1148              		.loc 1 347 19 is_stmt 0 view .LVU307
 1149 004c 0822     		movs	r2, #8
 1150              	.LVL105:
 347:nanopb/pb_decode.c ****             return pb_read(stream, buf, 8);
 1151              		.loc 1 347 19 view .LVU308
 1152 004e 1A60     		str	r2, [r3]
 348:nanopb/pb_decode.c ****         
 1153              		.loc 1 348 13 is_stmt 1 view .LVU309
 348:nanopb/pb_decode.c ****         
 1154              		.loc 1 348 20 is_stmt 0 view .LVU310
 1155 0050 2146     		mov	r1, r4
 1156              	.LVL106:
 348:nanopb/pb_decode.c ****         
 1157              		.loc 1 348 20 view .LVU311
 1158 0052 FFF7FEFF 		bl	pb_read
 1159              	.LVL107:
 348:nanopb/pb_decode.c ****         
 1160              		.loc 1 348 20 view .LVU312
 1161 0056 0246     		mov	r2, r0
 1162              	.L108:
 356:nanopb/pb_decode.c **** 
 1163              		.loc 1 356 1 view .LVU313
 1164 0058 1046     		mov	r0, r2
 1165 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1166              	.LVL108:
 1167              	.L106:
 351:nanopb/pb_decode.c ****             return pb_read(stream, buf, 4);
 1168              		.loc 1 351 13 is_stmt 1 view .LVU314
 351:nanopb/pb_decode.c ****             return pb_read(stream, buf, 4);
 1169              		.loc 1 351 19 is_stmt 0 view .LVU315
 1170 005c 0422     		movs	r2, #4
 1171              	.LVL109:
 351:nanopb/pb_decode.c ****             return pb_read(stream, buf, 4);
 1172              		.loc 1 351 19 view .LVU316
 1173 005e 2A60     		str	r2, [r5]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 40


 352:nanopb/pb_decode.c ****         
 1174              		.loc 1 352 13 is_stmt 1 view .LVU317
 352:nanopb/pb_decode.c ****         
 1175              		.loc 1 352 20 is_stmt 0 view .LVU318
 1176 0060 2146     		mov	r1, r4
 1177              	.LVL110:
 352:nanopb/pb_decode.c ****         
 1178              		.loc 1 352 20 view .LVU319
 1179 0062 FFF7FEFF 		bl	pb_read
 1180              	.LVL111:
 352:nanopb/pb_decode.c ****         
 1181              		.loc 1 352 20 view .LVU320
 1182 0066 0246     		mov	r2, r0
 1183 0068 F6E7     		b	.L108
 1184              	.LVL112:
 1185              	.L115:
 354:nanopb/pb_decode.c ****     }
 1186              		.loc 1 354 18 view .LVU321
 1187 006a 024B     		ldr	r3, .L116
 1188 006c D5E7     		b	.L110
 1189              	.LVL113:
 1190              	.L111:
 341:nanopb/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1191              		.loc 1 341 46 view .LVU322
 1192 006e 0022     		movs	r2, #0
 1193 0070 F2E7     		b	.L108
 1194              	.L117:
 1195 0072 00BF     		.align	2
 1196              	.L116:
 1197 0074 00000000 		.word	.LC4
 1198              		.cfi_endproc
 1199              	.LFE11:
 1201              		.section	.text.pb_istream_from_buffer,"ax",%progbits
 1202              		.align	1
 1203              		.global	pb_istream_from_buffer
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu softvfp
 1209              	pb_istream_from_buffer:
 1210              	.LVL114:
 1211              	.LFB3:
 155:nanopb/pb_decode.c ****     pb_istream_t stream;
 1212              		.loc 1 155 1 is_stmt 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 155:nanopb/pb_decode.c ****     pb_istream_t stream;
 1217              		.loc 1 155 1 is_stmt 0 view .LVU324
 1218 0000 10B4     		push	{r4}
 1219              	.LCFI26:
 1220              		.cfi_def_cfa_offset 4
 1221              		.cfi_offset 4, -4
 156:nanopb/pb_decode.c ****     /* Cast away the const from buf without a compiler error.  We are
 1222              		.loc 1 156 5 is_stmt 1 view .LVU325
 160:nanopb/pb_decode.c ****         void *state;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 41


 1223              		.loc 1 160 5 view .LVU326
 167:nanopb/pb_decode.c **** #endif
 1224              		.loc 1 167 5 view .LVU327
 167:nanopb/pb_decode.c **** #endif
 1225              		.loc 1 167 21 is_stmt 0 view .LVU328
 1226 0002 044C     		ldr	r4, .L120
 1227 0004 0460     		str	r4, [r0]
 169:nanopb/pb_decode.c ****     stream.state = state.state;
 1228              		.loc 1 169 5 is_stmt 1 view .LVU329
 170:nanopb/pb_decode.c ****     stream.bytes_left = bufsize;
 1229              		.loc 1 170 5 view .LVU330
 170:nanopb/pb_decode.c ****     stream.bytes_left = bufsize;
 1230              		.loc 1 170 18 is_stmt 0 view .LVU331
 1231 0006 4160     		str	r1, [r0, #4]
 171:nanopb/pb_decode.c **** #ifndef PB_NO_ERRMSG
 1232              		.loc 1 171 5 is_stmt 1 view .LVU332
 171:nanopb/pb_decode.c **** #ifndef PB_NO_ERRMSG
 1233              		.loc 1 171 23 is_stmt 0 view .LVU333
 1234 0008 8260     		str	r2, [r0, #8]
 173:nanopb/pb_decode.c **** #endif
 1235              		.loc 1 173 5 is_stmt 1 view .LVU334
 173:nanopb/pb_decode.c **** #endif
 1236              		.loc 1 173 19 is_stmt 0 view .LVU335
 1237 000a 0022     		movs	r2, #0
 1238              	.LVL115:
 173:nanopb/pb_decode.c **** #endif
 1239              		.loc 1 173 19 view .LVU336
 1240 000c C260     		str	r2, [r0, #12]
 175:nanopb/pb_decode.c **** }
 1241              		.loc 1 175 5 is_stmt 1 view .LVU337
 176:nanopb/pb_decode.c **** 
 1242              		.loc 1 176 1 is_stmt 0 view .LVU338
 1243 000e 10BC     		pop	{r4}
 1244              	.LCFI27:
 1245              		.cfi_restore 4
 1246              		.cfi_def_cfa_offset 0
 1247 0010 7047     		bx	lr
 1248              	.L121:
 1249 0012 00BF     		.align	2
 1250              	.L120:
 1251 0014 00000000 		.word	buf_read
 1252              		.cfi_endproc
 1253              	.LFE3:
 1255              		.section	.text.pb_decode_varint32,"ax",%progbits
 1256              		.align	1
 1257              		.global	pb_decode_varint32
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1261              		.fpu softvfp
 1263              	pb_decode_varint32:
 1264              	.LVL116:
 1265              	.LFB5:
 245:nanopb/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 1266              		.loc 1 245 1 is_stmt 1 view -0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 42


 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 245:nanopb/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 1270              		.loc 1 245 1 is_stmt 0 view .LVU340
 1271 0000 08B5     		push	{r3, lr}
 1272              	.LCFI28:
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 3, -8
 1275              		.cfi_offset 14, -4
 246:nanopb/pb_decode.c **** }
 1276              		.loc 1 246 5 is_stmt 1 view .LVU341
 246:nanopb/pb_decode.c **** }
 1277              		.loc 1 246 12 is_stmt 0 view .LVU342
 1278 0002 0022     		movs	r2, #0
 1279 0004 FFF7FEFF 		bl	pb_decode_varint32_eof
 1280              	.LVL117:
 247:nanopb/pb_decode.c **** 
 1281              		.loc 1 247 1 view .LVU343
 1282 0008 08BD     		pop	{r3, pc}
 1283              		.cfi_endproc
 1284              	.LFE5:
 1286              		.section	.text.pb_skip_string,"ax",%progbits
 1287              		.align	1
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1291              		.fpu softvfp
 1293              	pb_skip_string:
 1294              	.LVL118:
 1295              	.LFB8:
 285:nanopb/pb_decode.c ****     uint32_t length;
 1296              		.loc 1 285 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 8
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 285:nanopb/pb_decode.c ****     uint32_t length;
 1300              		.loc 1 285 1 is_stmt 0 view .LVU345
 1301 0000 10B5     		push	{r4, lr}
 1302              	.LCFI29:
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 4, -8
 1305              		.cfi_offset 14, -4
 1306 0002 82B0     		sub	sp, sp, #8
 1307              	.LCFI30:
 1308              		.cfi_def_cfa_offset 16
 1309 0004 0446     		mov	r4, r0
 286:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &length))
 1310              		.loc 1 286 5 is_stmt 1 view .LVU346
 287:nanopb/pb_decode.c ****         return false;
 1311              		.loc 1 287 5 view .LVU347
 287:nanopb/pb_decode.c ****         return false;
 1312              		.loc 1 287 10 is_stmt 0 view .LVU348
 1313 0006 01A9     		add	r1, sp, #4
 1314 0008 FFF7FEFF 		bl	pb_decode_varint32
 1315              	.LVL119:
 287:nanopb/pb_decode.c ****         return false;
 1316              		.loc 1 287 8 view .LVU349
 1317 000c 0346     		mov	r3, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 43


 1318 000e 10B9     		cbnz	r0, .L127
 1319              	.L125:
 291:nanopb/pb_decode.c **** 
 1320              		.loc 1 291 1 view .LVU350
 1321 0010 1846     		mov	r0, r3
 1322 0012 02B0     		add	sp, sp, #8
 1323              	.LCFI31:
 1324              		.cfi_remember_state
 1325              		.cfi_def_cfa_offset 8
 1326              		@ sp needed
 1327 0014 10BD     		pop	{r4, pc}
 1328              	.LVL120:
 1329              	.L127:
 1330              	.LCFI32:
 1331              		.cfi_restore_state
 290:nanopb/pb_decode.c **** }
 1332              		.loc 1 290 5 is_stmt 1 view .LVU351
 290:nanopb/pb_decode.c **** }
 1333              		.loc 1 290 12 is_stmt 0 view .LVU352
 1334 0016 019A     		ldr	r2, [sp, #4]
 1335 0018 0021     		movs	r1, #0
 1336 001a 2046     		mov	r0, r4
 1337 001c FFF7FEFF 		bl	pb_read
 1338              	.LVL121:
 1339 0020 0346     		mov	r3, r0
 1340 0022 F5E7     		b	.L125
 1341              		.cfi_endproc
 1342              	.LFE8:
 1344              		.section	.text.pb_dec_fixed_length_bytes,"ax",%progbits
 1345              		.align	1
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1349              		.fpu softvfp
 1351              	pb_dec_fixed_length_bytes:
 1352              	.LVL122:
 1353              	.LFB40:
 889:nanopb/pb_decode.c **** 
 890:nanopb/pb_decode.c **** /*********************
 891:nanopb/pb_decode.c ****  * Decode all fields *
 892:nanopb/pb_decode.c ****  *********************/
 893:nanopb/pb_decode.c **** 
 894:nanopb/pb_decode.c **** bool checkreturn pb_decode_noinit(pb_istream_t *stream, const pb_field_t fields[], void *dest_struc
 895:nanopb/pb_decode.c **** {
 896:nanopb/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 897:nanopb/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 898:nanopb/pb_decode.c ****     uint32_t extension_range_start = 0;
 899:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 900:nanopb/pb_decode.c ****     
 901:nanopb/pb_decode.c ****     /* Return value ignored, as empty message types will be correctly handled by
 902:nanopb/pb_decode.c ****      * pb_field_iter_find() anyway. */
 903:nanopb/pb_decode.c ****     (void)pb_field_iter_begin(&iter, fields, dest_struct);
 904:nanopb/pb_decode.c ****     
 905:nanopb/pb_decode.c ****     while (stream->bytes_left)
 906:nanopb/pb_decode.c ****     {
 907:nanopb/pb_decode.c ****         uint32_t tag;
 908:nanopb/pb_decode.c ****         pb_wire_type_t wire_type;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 44


 909:nanopb/pb_decode.c ****         bool eof;
 910:nanopb/pb_decode.c ****         
 911:nanopb/pb_decode.c ****         if (!pb_decode_tag(stream, &wire_type, &tag, &eof))
 912:nanopb/pb_decode.c ****         {
 913:nanopb/pb_decode.c ****             if (eof)
 914:nanopb/pb_decode.c ****                 break;
 915:nanopb/pb_decode.c ****             else
 916:nanopb/pb_decode.c ****                 return false;
 917:nanopb/pb_decode.c ****         }
 918:nanopb/pb_decode.c ****         
 919:nanopb/pb_decode.c ****         if (!pb_field_iter_find(&iter, tag))
 920:nanopb/pb_decode.c ****         {
 921:nanopb/pb_decode.c ****             /* No match found, check if it matches an extension. */
 922:nanopb/pb_decode.c ****             if (tag >= extension_range_start)
 923:nanopb/pb_decode.c ****             {
 924:nanopb/pb_decode.c ****                 if (!find_extension_field(&iter))
 925:nanopb/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 926:nanopb/pb_decode.c ****                 else
 927:nanopb/pb_decode.c ****                     extension_range_start = iter.pos->tag;
 928:nanopb/pb_decode.c ****                 
 929:nanopb/pb_decode.c ****                 if (tag >= extension_range_start)
 930:nanopb/pb_decode.c ****                 {
 931:nanopb/pb_decode.c ****                     size_t pos = stream->bytes_left;
 932:nanopb/pb_decode.c ****                 
 933:nanopb/pb_decode.c ****                     if (!decode_extension(stream, tag, wire_type, &iter))
 934:nanopb/pb_decode.c ****                         return false;
 935:nanopb/pb_decode.c ****                     
 936:nanopb/pb_decode.c ****                     if (pos != stream->bytes_left)
 937:nanopb/pb_decode.c ****                     {
 938:nanopb/pb_decode.c ****                         /* The field was handled */
 939:nanopb/pb_decode.c ****                         continue;                    
 940:nanopb/pb_decode.c ****                     }
 941:nanopb/pb_decode.c ****                 }
 942:nanopb/pb_decode.c ****             }
 943:nanopb/pb_decode.c ****         
 944:nanopb/pb_decode.c ****             /* No match found, skip data */
 945:nanopb/pb_decode.c ****             if (!pb_skip_field(stream, wire_type))
 946:nanopb/pb_decode.c ****                 return false;
 947:nanopb/pb_decode.c ****             continue;
 948:nanopb/pb_decode.c ****         }
 949:nanopb/pb_decode.c ****         
 950:nanopb/pb_decode.c ****         if (PB_HTYPE(iter.pos->type) == PB_HTYPE_REQUIRED
 951:nanopb/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 952:nanopb/pb_decode.c ****         {
 953:nanopb/pb_decode.c ****             uint32_t tmp = ((uint32_t)1 << (iter.required_field_index & 31));
 954:nanopb/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 955:nanopb/pb_decode.c ****         }
 956:nanopb/pb_decode.c ****             
 957:nanopb/pb_decode.c ****         if (!decode_field(stream, wire_type, &iter))
 958:nanopb/pb_decode.c ****             return false;
 959:nanopb/pb_decode.c ****     }
 960:nanopb/pb_decode.c ****     
 961:nanopb/pb_decode.c ****     /* Check that all required fields were present. */
 962:nanopb/pb_decode.c ****     {
 963:nanopb/pb_decode.c ****         /* First figure out the number of required fields by
 964:nanopb/pb_decode.c ****          * seeking to the end of the field array. Usually we
 965:nanopb/pb_decode.c ****          * are already close to end after decoding.
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 45


 966:nanopb/pb_decode.c ****          */
 967:nanopb/pb_decode.c ****         unsigned req_field_count;
 968:nanopb/pb_decode.c ****         pb_type_t last_type;
 969:nanopb/pb_decode.c ****         unsigned i;
 970:nanopb/pb_decode.c ****         do {
 971:nanopb/pb_decode.c ****             req_field_count = iter.required_field_index;
 972:nanopb/pb_decode.c ****             last_type = iter.pos->type;
 973:nanopb/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 974:nanopb/pb_decode.c ****         
 975:nanopb/pb_decode.c ****         /* Fixup if last field was also required. */
 976:nanopb/pb_decode.c ****         if (PB_HTYPE(last_type) == PB_HTYPE_REQUIRED && iter.pos->tag != 0)
 977:nanopb/pb_decode.c ****             req_field_count++;
 978:nanopb/pb_decode.c ****         
 979:nanopb/pb_decode.c ****         if (req_field_count > PB_MAX_REQUIRED_FIELDS)
 980:nanopb/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
 981:nanopb/pb_decode.c **** 
 982:nanopb/pb_decode.c ****         if (req_field_count > 0)
 983:nanopb/pb_decode.c ****         {
 984:nanopb/pb_decode.c ****             /* Check the whole words */
 985:nanopb/pb_decode.c ****             for (i = 0; i < (req_field_count >> 5); i++)
 986:nanopb/pb_decode.c ****             {
 987:nanopb/pb_decode.c ****                 if (fields_seen[i] != allbits)
 988:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 989:nanopb/pb_decode.c ****             }
 990:nanopb/pb_decode.c ****             
 991:nanopb/pb_decode.c ****             /* Check the remaining bits (if any) */
 992:nanopb/pb_decode.c ****             if ((req_field_count & 31) != 0)
 993:nanopb/pb_decode.c ****             {
 994:nanopb/pb_decode.c ****                 if (fields_seen[req_field_count >> 5] !=
 995:nanopb/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 996:nanopb/pb_decode.c ****                 {
 997:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 998:nanopb/pb_decode.c ****                 }
 999:nanopb/pb_decode.c ****             }
1000:nanopb/pb_decode.c ****         }
1001:nanopb/pb_decode.c ****     }
1002:nanopb/pb_decode.c ****     
1003:nanopb/pb_decode.c ****     return true;
1004:nanopb/pb_decode.c **** }
1005:nanopb/pb_decode.c **** 
1006:nanopb/pb_decode.c **** bool checkreturn pb_decode(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1007:nanopb/pb_decode.c **** {
1008:nanopb/pb_decode.c ****     bool status;
1009:nanopb/pb_decode.c ****     pb_message_set_to_defaults(fields, dest_struct);
1010:nanopb/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
1011:nanopb/pb_decode.c ****     
1012:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
1013:nanopb/pb_decode.c ****     if (!status)
1014:nanopb/pb_decode.c ****         pb_release(fields, dest_struct);
1015:nanopb/pb_decode.c **** #endif
1016:nanopb/pb_decode.c ****     
1017:nanopb/pb_decode.c ****     return status;
1018:nanopb/pb_decode.c **** }
1019:nanopb/pb_decode.c **** 
1020:nanopb/pb_decode.c **** bool pb_decode_delimited_noinit(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1021:nanopb/pb_decode.c **** {
1022:nanopb/pb_decode.c ****     pb_istream_t substream;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 46


1023:nanopb/pb_decode.c ****     bool status;
1024:nanopb/pb_decode.c **** 
1025:nanopb/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1026:nanopb/pb_decode.c ****         return false;
1027:nanopb/pb_decode.c **** 
1028:nanopb/pb_decode.c ****     status = pb_decode_noinit(&substream, fields, dest_struct);
1029:nanopb/pb_decode.c **** 
1030:nanopb/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1031:nanopb/pb_decode.c ****         return false;
1032:nanopb/pb_decode.c ****     return status;
1033:nanopb/pb_decode.c **** }
1034:nanopb/pb_decode.c **** 
1035:nanopb/pb_decode.c **** bool pb_decode_delimited(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1036:nanopb/pb_decode.c **** {
1037:nanopb/pb_decode.c ****     pb_istream_t substream;
1038:nanopb/pb_decode.c ****     bool status;
1039:nanopb/pb_decode.c ****     
1040:nanopb/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1041:nanopb/pb_decode.c ****         return false;
1042:nanopb/pb_decode.c ****     
1043:nanopb/pb_decode.c ****     status = pb_decode(&substream, fields, dest_struct);
1044:nanopb/pb_decode.c **** 
1045:nanopb/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1046:nanopb/pb_decode.c ****         return false;
1047:nanopb/pb_decode.c ****     return status;
1048:nanopb/pb_decode.c **** }
1049:nanopb/pb_decode.c **** 
1050:nanopb/pb_decode.c **** bool pb_decode_nullterminated(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1051:nanopb/pb_decode.c **** {
1052:nanopb/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
1053:nanopb/pb_decode.c ****     return pb_decode(stream, fields, dest_struct);
1054:nanopb/pb_decode.c **** }
1055:nanopb/pb_decode.c **** 
1056:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
1057:nanopb/pb_decode.c **** /* Given an oneof field, if there has already been a field inside this oneof,
1058:nanopb/pb_decode.c ****  * release it before overwriting with a different one. */
1059:nanopb/pb_decode.c **** static bool pb_release_union_field(pb_istream_t *stream, pb_field_iter_t *iter)
1060:nanopb/pb_decode.c **** {
1061:nanopb/pb_decode.c ****     pb_size_t old_tag = *(pb_size_t*)iter->pSize; /* Previous which_ value */
1062:nanopb/pb_decode.c ****     pb_size_t new_tag = iter->pos->tag; /* New which_ value */
1063:nanopb/pb_decode.c **** 
1064:nanopb/pb_decode.c ****     if (old_tag == 0)
1065:nanopb/pb_decode.c ****         return true; /* Ok, no old data in union */
1066:nanopb/pb_decode.c **** 
1067:nanopb/pb_decode.c ****     if (old_tag == new_tag)
1068:nanopb/pb_decode.c ****         return true; /* Ok, old data is of same type => merge */
1069:nanopb/pb_decode.c **** 
1070:nanopb/pb_decode.c ****     /* Release old data. The find can fail if the message struct contains
1071:nanopb/pb_decode.c ****      * invalid data. */
1072:nanopb/pb_decode.c ****     if (!pb_field_iter_find(iter, old_tag))
1073:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid union tag");
1074:nanopb/pb_decode.c **** 
1075:nanopb/pb_decode.c ****     pb_release_single_field(iter);
1076:nanopb/pb_decode.c **** 
1077:nanopb/pb_decode.c ****     /* Restore iterator to where it should be.
1078:nanopb/pb_decode.c ****      * This shouldn't fail unless the pb_field_t structure is corrupted. */
1079:nanopb/pb_decode.c ****     if (!pb_field_iter_find(iter, new_tag))
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 47


1080:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "iterator error");
1081:nanopb/pb_decode.c ****     
1082:nanopb/pb_decode.c ****     return true;
1083:nanopb/pb_decode.c **** }
1084:nanopb/pb_decode.c **** 
1085:nanopb/pb_decode.c **** static void pb_release_single_field(const pb_field_iter_t *iter)
1086:nanopb/pb_decode.c **** {
1087:nanopb/pb_decode.c ****     pb_type_t type;
1088:nanopb/pb_decode.c ****     type = iter->pos->type;
1089:nanopb/pb_decode.c **** 
1090:nanopb/pb_decode.c ****     if (PB_HTYPE(type) == PB_HTYPE_ONEOF)
1091:nanopb/pb_decode.c ****     {
1092:nanopb/pb_decode.c ****         if (*(pb_size_t*)iter->pSize != iter->pos->tag)
1093:nanopb/pb_decode.c ****             return; /* This is not the current field in the union */
1094:nanopb/pb_decode.c ****     }
1095:nanopb/pb_decode.c **** 
1096:nanopb/pb_decode.c ****     /* Release anything contained inside an extension or submsg.
1097:nanopb/pb_decode.c ****      * This has to be done even if the submsg itself is statically
1098:nanopb/pb_decode.c ****      * allocated. */
1099:nanopb/pb_decode.c ****     if (PB_LTYPE(type) == PB_LTYPE_EXTENSION)
1100:nanopb/pb_decode.c ****     {
1101:nanopb/pb_decode.c ****         /* Release fields from all extensions in the linked list */
1102:nanopb/pb_decode.c ****         pb_extension_t *ext = *(pb_extension_t**)iter->pData;
1103:nanopb/pb_decode.c ****         while (ext != NULL)
1104:nanopb/pb_decode.c ****         {
1105:nanopb/pb_decode.c ****             pb_field_iter_t ext_iter;
1106:nanopb/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
1107:nanopb/pb_decode.c ****             pb_release_single_field(&ext_iter);
1108:nanopb/pb_decode.c ****             ext = ext->next;
1109:nanopb/pb_decode.c ****         }
1110:nanopb/pb_decode.c ****     }
1111:nanopb/pb_decode.c ****     else if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
1112:nanopb/pb_decode.c ****     {
1113:nanopb/pb_decode.c ****         /* Release fields in submessage or submsg array */
1114:nanopb/pb_decode.c ****         void *pItem = iter->pData;
1115:nanopb/pb_decode.c ****         pb_size_t count = 1;
1116:nanopb/pb_decode.c ****         
1117:nanopb/pb_decode.c ****         if (PB_ATYPE(type) == PB_ATYPE_POINTER)
1118:nanopb/pb_decode.c ****         {
1119:nanopb/pb_decode.c ****             pItem = *(void**)iter->pData;
1120:nanopb/pb_decode.c ****         }
1121:nanopb/pb_decode.c ****         
1122:nanopb/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED)
1123:nanopb/pb_decode.c ****         {
1124:nanopb/pb_decode.c ****             count = *(pb_size_t*)iter->pSize;
1125:nanopb/pb_decode.c **** 
1126:nanopb/pb_decode.c ****             if (PB_ATYPE(type) == PB_ATYPE_STATIC && count > iter->pos->array_size)
1127:nanopb/pb_decode.c ****             {
1128:nanopb/pb_decode.c ****                 /* Protect against corrupted _count fields */
1129:nanopb/pb_decode.c ****                 count = iter->pos->array_size;
1130:nanopb/pb_decode.c ****             }
1131:nanopb/pb_decode.c ****         }
1132:nanopb/pb_decode.c ****         
1133:nanopb/pb_decode.c ****         if (pItem)
1134:nanopb/pb_decode.c ****         {
1135:nanopb/pb_decode.c ****             while (count--)
1136:nanopb/pb_decode.c ****             {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 48


1137:nanopb/pb_decode.c ****                 pb_release((const pb_field_t*)iter->pos->ptr, pItem);
1138:nanopb/pb_decode.c ****                 pItem = (char*)pItem + iter->pos->data_size;
1139:nanopb/pb_decode.c ****             }
1140:nanopb/pb_decode.c ****         }
1141:nanopb/pb_decode.c ****     }
1142:nanopb/pb_decode.c ****     
1143:nanopb/pb_decode.c ****     if (PB_ATYPE(type) == PB_ATYPE_POINTER)
1144:nanopb/pb_decode.c ****     {
1145:nanopb/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED &&
1146:nanopb/pb_decode.c ****             (PB_LTYPE(type) == PB_LTYPE_STRING ||
1147:nanopb/pb_decode.c ****              PB_LTYPE(type) == PB_LTYPE_BYTES))
1148:nanopb/pb_decode.c ****         {
1149:nanopb/pb_decode.c ****             /* Release entries in repeated string or bytes array */
1150:nanopb/pb_decode.c ****             void **pItem = *(void***)iter->pData;
1151:nanopb/pb_decode.c ****             pb_size_t count = *(pb_size_t*)iter->pSize;
1152:nanopb/pb_decode.c ****             while (count--)
1153:nanopb/pb_decode.c ****             {
1154:nanopb/pb_decode.c ****                 pb_free(*pItem);
1155:nanopb/pb_decode.c ****                 *pItem++ = NULL;
1156:nanopb/pb_decode.c ****             }
1157:nanopb/pb_decode.c ****         }
1158:nanopb/pb_decode.c ****         
1159:nanopb/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED)
1160:nanopb/pb_decode.c ****         {
1161:nanopb/pb_decode.c ****             /* We are going to release the array, so set the size to 0 */
1162:nanopb/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
1163:nanopb/pb_decode.c ****         }
1164:nanopb/pb_decode.c ****         
1165:nanopb/pb_decode.c ****         /* Release main item */
1166:nanopb/pb_decode.c ****         pb_free(*(void**)iter->pData);
1167:nanopb/pb_decode.c ****         *(void**)iter->pData = NULL;
1168:nanopb/pb_decode.c ****     }
1169:nanopb/pb_decode.c **** }
1170:nanopb/pb_decode.c **** 
1171:nanopb/pb_decode.c **** void pb_release(const pb_field_t fields[], void *dest_struct)
1172:nanopb/pb_decode.c **** {
1173:nanopb/pb_decode.c ****     pb_field_iter_t iter;
1174:nanopb/pb_decode.c ****     
1175:nanopb/pb_decode.c ****     if (!dest_struct)
1176:nanopb/pb_decode.c ****         return; /* Ignore NULL pointers, similar to free() */
1177:nanopb/pb_decode.c **** 
1178:nanopb/pb_decode.c ****     if (!pb_field_iter_begin(&iter, fields, dest_struct))
1179:nanopb/pb_decode.c ****         return; /* Empty message type */
1180:nanopb/pb_decode.c ****     
1181:nanopb/pb_decode.c ****     do
1182:nanopb/pb_decode.c ****     {
1183:nanopb/pb_decode.c ****         pb_release_single_field(&iter);
1184:nanopb/pb_decode.c ****     } while (pb_field_iter_next(&iter));
1185:nanopb/pb_decode.c **** }
1186:nanopb/pb_decode.c **** #endif
1187:nanopb/pb_decode.c **** 
1188:nanopb/pb_decode.c **** /* Field decoders */
1189:nanopb/pb_decode.c **** 
1190:nanopb/pb_decode.c **** bool pb_decode_svarint(pb_istream_t *stream, pb_int64_t *dest)
1191:nanopb/pb_decode.c **** {
1192:nanopb/pb_decode.c ****     pb_uint64_t value;
1193:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 49


1194:nanopb/pb_decode.c ****         return false;
1195:nanopb/pb_decode.c ****     
1196:nanopb/pb_decode.c ****     if (value & 1)
1197:nanopb/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
1198:nanopb/pb_decode.c ****     else
1199:nanopb/pb_decode.c ****         *dest = (pb_int64_t)(value >> 1);
1200:nanopb/pb_decode.c ****     
1201:nanopb/pb_decode.c ****     return true;
1202:nanopb/pb_decode.c **** }
1203:nanopb/pb_decode.c **** 
1204:nanopb/pb_decode.c **** bool pb_decode_fixed32(pb_istream_t *stream, void *dest)
1205:nanopb/pb_decode.c **** {
1206:nanopb/pb_decode.c ****     pb_byte_t bytes[4];
1207:nanopb/pb_decode.c **** 
1208:nanopb/pb_decode.c ****     if (!pb_read(stream, bytes, 4))
1209:nanopb/pb_decode.c ****         return false;
1210:nanopb/pb_decode.c ****     
1211:nanopb/pb_decode.c ****     *(uint32_t*)dest = ((uint32_t)bytes[0] << 0) |
1212:nanopb/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
1213:nanopb/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
1214:nanopb/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
1215:nanopb/pb_decode.c ****     return true;
1216:nanopb/pb_decode.c **** }
1217:nanopb/pb_decode.c **** 
1218:nanopb/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
1219:nanopb/pb_decode.c **** bool pb_decode_fixed64(pb_istream_t *stream, void *dest)
1220:nanopb/pb_decode.c **** {
1221:nanopb/pb_decode.c ****     pb_byte_t bytes[8];
1222:nanopb/pb_decode.c **** 
1223:nanopb/pb_decode.c ****     if (!pb_read(stream, bytes, 8))
1224:nanopb/pb_decode.c ****         return false;
1225:nanopb/pb_decode.c ****     
1226:nanopb/pb_decode.c ****     *(uint64_t*)dest = ((uint64_t)bytes[0] << 0) |
1227:nanopb/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
1228:nanopb/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
1229:nanopb/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
1230:nanopb/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
1231:nanopb/pb_decode.c ****                        ((uint64_t)bytes[5] << 40) |
1232:nanopb/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
1233:nanopb/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
1234:nanopb/pb_decode.c ****     
1235:nanopb/pb_decode.c ****     return true;
1236:nanopb/pb_decode.c **** }
1237:nanopb/pb_decode.c **** #endif
1238:nanopb/pb_decode.c **** 
1239:nanopb/pb_decode.c **** static bool checkreturn pb_dec_varint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1240:nanopb/pb_decode.c **** {
1241:nanopb/pb_decode.c ****     pb_uint64_t value;
1242:nanopb/pb_decode.c ****     pb_int64_t svalue;
1243:nanopb/pb_decode.c ****     pb_int64_t clamped;
1244:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
1245:nanopb/pb_decode.c ****         return false;
1246:nanopb/pb_decode.c ****     
1247:nanopb/pb_decode.c ****     /* See issue 97: Google's C++ protobuf allows negative varint values to
1248:nanopb/pb_decode.c ****      * be cast as int32_t, instead of the int64_t that should be used when
1249:nanopb/pb_decode.c ****      * encoding. Previous nanopb versions had a bug in encoding. In order to
1250:nanopb/pb_decode.c ****      * not break decoding of such messages, we cast <=32 bit fields to
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 50


1251:nanopb/pb_decode.c ****      * int32_t first to get the sign correct.
1252:nanopb/pb_decode.c ****      */
1253:nanopb/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
1254:nanopb/pb_decode.c ****         svalue = (pb_int64_t)value;
1255:nanopb/pb_decode.c ****     else
1256:nanopb/pb_decode.c ****         svalue = (int32_t)value;
1257:nanopb/pb_decode.c **** 
1258:nanopb/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1259:nanopb/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
1260:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
1261:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
1262:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
1263:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
1264:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
1265:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
1266:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
1267:nanopb/pb_decode.c ****     else
1268:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1269:nanopb/pb_decode.c **** 
1270:nanopb/pb_decode.c ****     if (clamped != svalue)
1271:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1272:nanopb/pb_decode.c ****     
1273:nanopb/pb_decode.c ****     return true;
1274:nanopb/pb_decode.c **** }
1275:nanopb/pb_decode.c **** 
1276:nanopb/pb_decode.c **** static bool checkreturn pb_dec_uvarint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1277:nanopb/pb_decode.c **** {
1278:nanopb/pb_decode.c ****     pb_uint64_t value, clamped;
1279:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
1280:nanopb/pb_decode.c ****         return false;
1281:nanopb/pb_decode.c ****     
1282:nanopb/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1283:nanopb/pb_decode.c ****     if (field->data_size == sizeof(pb_uint64_t))
1284:nanopb/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
1285:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
1286:nanopb/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
1287:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
1288:nanopb/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
1289:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
1290:nanopb/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
1291:nanopb/pb_decode.c ****     else
1292:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1293:nanopb/pb_decode.c ****     
1294:nanopb/pb_decode.c ****     if (clamped != value)
1295:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1296:nanopb/pb_decode.c **** 
1297:nanopb/pb_decode.c ****     return true;
1298:nanopb/pb_decode.c **** }
1299:nanopb/pb_decode.c **** 
1300:nanopb/pb_decode.c **** static bool checkreturn pb_dec_svarint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1301:nanopb/pb_decode.c **** {
1302:nanopb/pb_decode.c ****     pb_int64_t value, clamped;
1303:nanopb/pb_decode.c ****     if (!pb_decode_svarint(stream, &value))
1304:nanopb/pb_decode.c ****         return false;
1305:nanopb/pb_decode.c ****     
1306:nanopb/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1307:nanopb/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 51


1308:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
1309:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
1310:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
1311:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
1312:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
1313:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
1314:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
1315:nanopb/pb_decode.c ****     else
1316:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1317:nanopb/pb_decode.c **** 
1318:nanopb/pb_decode.c ****     if (clamped != value)
1319:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1320:nanopb/pb_decode.c ****     
1321:nanopb/pb_decode.c ****     return true;
1322:nanopb/pb_decode.c **** }
1323:nanopb/pb_decode.c **** 
1324:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed32(pb_istream_t *stream, const pb_field_t *field, void *dest)
1325:nanopb/pb_decode.c **** {
1326:nanopb/pb_decode.c ****     PB_UNUSED(field);
1327:nanopb/pb_decode.c ****     return pb_decode_fixed32(stream, dest);
1328:nanopb/pb_decode.c **** }
1329:nanopb/pb_decode.c **** 
1330:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed64(pb_istream_t *stream, const pb_field_t *field, void *dest)
1331:nanopb/pb_decode.c **** {
1332:nanopb/pb_decode.c ****     PB_UNUSED(field);
1333:nanopb/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
1334:nanopb/pb_decode.c ****     return pb_decode_fixed64(stream, dest);
1335:nanopb/pb_decode.c **** #else
1336:nanopb/pb_decode.c ****     PB_UNUSED(dest);
1337:nanopb/pb_decode.c ****     PB_RETURN_ERROR(stream, "no 64bit support");
1338:nanopb/pb_decode.c **** #endif
1339:nanopb/pb_decode.c **** }
1340:nanopb/pb_decode.c **** 
1341:nanopb/pb_decode.c **** static bool checkreturn pb_dec_bytes(pb_istream_t *stream, const pb_field_t *field, void *dest)
1342:nanopb/pb_decode.c **** {
1343:nanopb/pb_decode.c ****     uint32_t size;
1344:nanopb/pb_decode.c ****     size_t alloc_size;
1345:nanopb/pb_decode.c ****     pb_bytes_array_t *bdest;
1346:nanopb/pb_decode.c ****     
1347:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
1348:nanopb/pb_decode.c ****         return false;
1349:nanopb/pb_decode.c ****     
1350:nanopb/pb_decode.c ****     if (size > PB_SIZE_MAX)
1351:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
1352:nanopb/pb_decode.c ****     
1353:nanopb/pb_decode.c ****     alloc_size = PB_BYTES_ARRAY_T_ALLOCSIZE(size);
1354:nanopb/pb_decode.c ****     if (size > alloc_size)
1355:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
1356:nanopb/pb_decode.c ****     
1357:nanopb/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
1358:nanopb/pb_decode.c ****     {
1359:nanopb/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
1360:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "no malloc support");
1361:nanopb/pb_decode.c **** #else
1362:nanopb/pb_decode.c ****         if (!allocate_field(stream, dest, alloc_size, 1))
1363:nanopb/pb_decode.c ****             return false;
1364:nanopb/pb_decode.c ****         bdest = *(pb_bytes_array_t**)dest;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 52


1365:nanopb/pb_decode.c **** #endif
1366:nanopb/pb_decode.c ****     }
1367:nanopb/pb_decode.c ****     else
1368:nanopb/pb_decode.c ****     {
1369:nanopb/pb_decode.c ****         if (alloc_size > field->data_size)
1370:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
1371:nanopb/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
1372:nanopb/pb_decode.c ****     }
1373:nanopb/pb_decode.c **** 
1374:nanopb/pb_decode.c ****     bdest->size = (pb_size_t)size;
1375:nanopb/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
1376:nanopb/pb_decode.c **** }
1377:nanopb/pb_decode.c **** 
1378:nanopb/pb_decode.c **** static bool checkreturn pb_dec_string(pb_istream_t *stream, const pb_field_t *field, void *dest)
1379:nanopb/pb_decode.c **** {
1380:nanopb/pb_decode.c ****     uint32_t size;
1381:nanopb/pb_decode.c ****     size_t alloc_size;
1382:nanopb/pb_decode.c ****     bool status;
1383:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
1384:nanopb/pb_decode.c ****         return false;
1385:nanopb/pb_decode.c ****     
1386:nanopb/pb_decode.c ****     /* Space for null terminator */
1387:nanopb/pb_decode.c ****     alloc_size = size + 1;
1388:nanopb/pb_decode.c ****     
1389:nanopb/pb_decode.c ****     if (alloc_size < size)
1390:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
1391:nanopb/pb_decode.c ****     
1392:nanopb/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
1393:nanopb/pb_decode.c ****     {
1394:nanopb/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
1395:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "no malloc support");
1396:nanopb/pb_decode.c **** #else
1397:nanopb/pb_decode.c ****         if (!allocate_field(stream, dest, alloc_size, 1))
1398:nanopb/pb_decode.c ****             return false;
1399:nanopb/pb_decode.c ****         dest = *(void**)dest;
1400:nanopb/pb_decode.c **** #endif
1401:nanopb/pb_decode.c ****     }
1402:nanopb/pb_decode.c ****     else
1403:nanopb/pb_decode.c ****     {
1404:nanopb/pb_decode.c ****         if (alloc_size > field->data_size)
1405:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
1406:nanopb/pb_decode.c ****     }
1407:nanopb/pb_decode.c ****     
1408:nanopb/pb_decode.c ****     status = pb_read(stream, (pb_byte_t*)dest, size);
1409:nanopb/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
1410:nanopb/pb_decode.c ****     return status;
1411:nanopb/pb_decode.c **** }
1412:nanopb/pb_decode.c **** 
1413:nanopb/pb_decode.c **** static bool checkreturn pb_dec_submessage(pb_istream_t *stream, const pb_field_t *field, void *dest
1414:nanopb/pb_decode.c **** {
1415:nanopb/pb_decode.c ****     bool status;
1416:nanopb/pb_decode.c ****     pb_istream_t substream;
1417:nanopb/pb_decode.c ****     const pb_field_t* submsg_fields = (const pb_field_t*)field->ptr;
1418:nanopb/pb_decode.c ****     
1419:nanopb/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1420:nanopb/pb_decode.c ****         return false;
1421:nanopb/pb_decode.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 53


1422:nanopb/pb_decode.c ****     if (field->ptr == NULL)
1423:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
1424:nanopb/pb_decode.c ****     
1425:nanopb/pb_decode.c ****     /* New array entries need to be initialized, while required and optional
1426:nanopb/pb_decode.c ****      * submessages have already been initialized in the top-level pb_decode. */
1427:nanopb/pb_decode.c ****     if (PB_HTYPE(field->type) == PB_HTYPE_REPEATED)
1428:nanopb/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
1429:nanopb/pb_decode.c ****     else
1430:nanopb/pb_decode.c ****         status = pb_decode_noinit(&substream, submsg_fields, dest);
1431:nanopb/pb_decode.c ****     
1432:nanopb/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1433:nanopb/pb_decode.c ****         return false;
1434:nanopb/pb_decode.c ****     return status;
1435:nanopb/pb_decode.c **** }
1436:nanopb/pb_decode.c **** 
1437:nanopb/pb_decode.c **** static bool checkreturn pb_dec_fixed_length_bytes(pb_istream_t *stream, const pb_field_t *field, vo
1438:nanopb/pb_decode.c **** {
 1354              		.loc 1 1438 1 is_stmt 1 view -0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 8
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              		.loc 1 1438 1 is_stmt 0 view .LVU354
 1359 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1360              	.LCFI33:
 1361              		.cfi_def_cfa_offset 20
 1362              		.cfi_offset 4, -20
 1363              		.cfi_offset 5, -16
 1364              		.cfi_offset 6, -12
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 83B0     		sub	sp, sp, #12
 1368              	.LCFI34:
 1369              		.cfi_def_cfa_offset 32
 1370 0004 0546     		mov	r5, r0
 1371 0006 0E46     		mov	r6, r1
 1372 0008 1746     		mov	r7, r2
1439:nanopb/pb_decode.c ****     uint32_t size;
 1373              		.loc 1 1439 5 is_stmt 1 view .LVU355
1440:nanopb/pb_decode.c **** 
1441:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 1374              		.loc 1 1441 5 view .LVU356
 1375              		.loc 1 1441 10 is_stmt 0 view .LVU357
 1376 000a 01A9     		add	r1, sp, #4
 1377              	.LVL123:
 1378              		.loc 1 1441 10 view .LVU358
 1379 000c FFF7FEFF 		bl	pb_decode_varint32
 1380              	.LVL124:
 1381              		.loc 1 1441 8 view .LVU359
 1382 0010 0446     		mov	r4, r0
 1383 0012 50B1     		cbz	r0, .L129
1442:nanopb/pb_decode.c ****         return false;
1443:nanopb/pb_decode.c **** 
1444:nanopb/pb_decode.c ****     if (size > PB_SIZE_MAX)
 1384              		.loc 1 1444 5 is_stmt 1 view .LVU360
 1385              		.loc 1 1444 14 is_stmt 0 view .LVU361
 1386 0014 019B     		ldr	r3, [sp, #4]
 1387              		.loc 1 1444 8 view .LVU362
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 54


 1388 0016 FF2B     		cmp	r3, #255
 1389 0018 0AD8     		bhi	.L136
1445:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
1446:nanopb/pb_decode.c **** 
1447:nanopb/pb_decode.c ****     if (size == 0)
 1390              		.loc 1 1447 5 is_stmt 1 view .LVU363
 1391              		.loc 1 1447 8 is_stmt 0 view .LVU364
 1392 001a 83B1     		cbz	r3, .L137
1448:nanopb/pb_decode.c ****     {
1449:nanopb/pb_decode.c ****         /* As a special case, treat empty bytes string as all zeros for fixed_length_bytes. */
1450:nanopb/pb_decode.c ****         memset(dest, 0, field->data_size);
1451:nanopb/pb_decode.c ****         return true;
1452:nanopb/pb_decode.c ****     }
1453:nanopb/pb_decode.c **** 
1454:nanopb/pb_decode.c ****     if (size != field->data_size)
 1393              		.loc 1 1454 5 is_stmt 1 view .LVU365
 1394              		.loc 1 1454 22 is_stmt 0 view .LVU366
 1395 001c 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
 1396              		.loc 1 1454 8 view .LVU367
 1397 001e 9342     		cmp	r3, r2
 1398 0020 15D0     		beq	.L133
1455:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "incorrect fixed length bytes size");
 1399              		.loc 1 1455 9 is_stmt 1 view .LVU368
 1400 0022 EB68     		ldr	r3, [r5, #12]
 1401 0024 8BB1     		cbz	r3, .L138
 1402              	.L134:
 1403              		.loc 1 1455 9 is_stmt 0 discriminator 4 view .LVU369
 1404 0026 EB60     		str	r3, [r5, #12]
 1405 0028 0024     		movs	r4, #0
 1406              	.L129:
1456:nanopb/pb_decode.c **** 
1457:nanopb/pb_decode.c ****     return pb_read(stream, (pb_byte_t*)dest, field->data_size);
1458:nanopb/pb_decode.c **** }
 1407              		.loc 1 1458 1 view .LVU370
 1408 002a 2046     		mov	r0, r4
 1409 002c 03B0     		add	sp, sp, #12
 1410              	.LCFI35:
 1411              		.cfi_remember_state
 1412              		.cfi_def_cfa_offset 20
 1413              		@ sp needed
 1414 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1415              	.LVL125:
 1416              	.L136:
 1417              	.LCFI36:
 1418              		.cfi_restore_state
1445:nanopb/pb_decode.c **** 
 1419              		.loc 1 1445 9 is_stmt 1 view .LVU371
 1420 0030 EB68     		ldr	r3, [r5, #12]
 1421 0032 13B1     		cbz	r3, .L139
 1422              	.L131:
1445:nanopb/pb_decode.c **** 
 1423              		.loc 1 1445 9 is_stmt 0 discriminator 4 view .LVU372
 1424 0034 EB60     		str	r3, [r5, #12]
 1425 0036 0024     		movs	r4, #0
 1426 0038 F7E7     		b	.L129
 1427              	.L139:
1445:nanopb/pb_decode.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 55


 1428              		.loc 1 1445 9 view .LVU373
 1429 003a 084B     		ldr	r3, .L140
 1430 003c FAE7     		b	.L131
 1431              	.L137:
1450:nanopb/pb_decode.c ****         return true;
 1432              		.loc 1 1450 9 is_stmt 1 view .LVU374
 1433 003e 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
 1434 0040 0021     		movs	r1, #0
 1435 0042 3846     		mov	r0, r7
 1436 0044 FFF7FEFF 		bl	memset
 1437              	.LVL126:
1451:nanopb/pb_decode.c ****     }
 1438              		.loc 1 1451 9 view .LVU375
1451:nanopb/pb_decode.c ****     }
 1439              		.loc 1 1451 16 is_stmt 0 view .LVU376
 1440 0048 EFE7     		b	.L129
 1441              	.L138:
1455:nanopb/pb_decode.c **** 
 1442              		.loc 1 1455 9 view .LVU377
 1443 004a 054B     		ldr	r3, .L140+4
 1444 004c EBE7     		b	.L134
 1445              	.L133:
1457:nanopb/pb_decode.c **** }
 1446              		.loc 1 1457 5 is_stmt 1 view .LVU378
1457:nanopb/pb_decode.c **** }
 1447              		.loc 1 1457 12 is_stmt 0 view .LVU379
 1448 004e 3946     		mov	r1, r7
 1449 0050 2846     		mov	r0, r5
 1450 0052 FFF7FEFF 		bl	pb_read
 1451              	.LVL127:
 1452 0056 0446     		mov	r4, r0
 1453 0058 E7E7     		b	.L129
 1454              	.L141:
 1455 005a 00BF     		.align	2
 1456              	.L140:
 1457 005c 00000000 		.word	.LC5
 1458 0060 10000000 		.word	.LC6
 1459              		.cfi_endproc
 1460              	.LFE40:
 1462              		.section	.text.pb_dec_string,"ax",%progbits
 1463              		.align	1
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu softvfp
 1469              	pb_dec_string:
 1470              	.LVL128:
 1471              	.LFB38:
1379:nanopb/pb_decode.c ****     uint32_t size;
 1472              		.loc 1 1379 1 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
1379:nanopb/pb_decode.c ****     uint32_t size;
 1476              		.loc 1 1379 1 is_stmt 0 view .LVU381
 1477 0000 70B5     		push	{r4, r5, r6, lr}
 1478              	.LCFI37:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 56


 1479              		.cfi_def_cfa_offset 16
 1480              		.cfi_offset 4, -16
 1481              		.cfi_offset 5, -12
 1482              		.cfi_offset 6, -8
 1483              		.cfi_offset 14, -4
 1484 0002 82B0     		sub	sp, sp, #8
 1485              	.LCFI38:
 1486              		.cfi_def_cfa_offset 24
 1487 0004 0446     		mov	r4, r0
 1488 0006 0D46     		mov	r5, r1
 1489 0008 1646     		mov	r6, r2
1380:nanopb/pb_decode.c ****     size_t alloc_size;
 1490              		.loc 1 1380 5 is_stmt 1 view .LVU382
1381:nanopb/pb_decode.c ****     bool status;
 1491              		.loc 1 1381 5 view .LVU383
1382:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 1492              		.loc 1 1382 5 view .LVU384
1383:nanopb/pb_decode.c ****         return false;
 1493              		.loc 1 1383 5 view .LVU385
1383:nanopb/pb_decode.c ****         return false;
 1494              		.loc 1 1383 10 is_stmt 0 view .LVU386
 1495 000a 01A9     		add	r1, sp, #4
 1496              	.LVL129:
1383:nanopb/pb_decode.c ****         return false;
 1497              		.loc 1 1383 10 view .LVU387
 1498 000c FFF7FEFF 		bl	pb_decode_varint32
 1499              	.LVL130:
1383:nanopb/pb_decode.c ****         return false;
 1500              		.loc 1 1383 8 view .LVU388
 1501 0010 0346     		mov	r3, r0
 1502 0012 98B1     		cbz	r0, .L143
1387:nanopb/pb_decode.c ****     
 1503              		.loc 1 1387 5 is_stmt 1 view .LVU389
1387:nanopb/pb_decode.c ****     
 1504              		.loc 1 1387 23 is_stmt 0 view .LVU390
 1505 0014 019A     		ldr	r2, [sp, #4]
 1506              	.LVL131:
1389:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1507              		.loc 1 1389 5 is_stmt 1 view .LVU391
1389:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1508              		.loc 1 1389 8 is_stmt 0 view .LVU392
 1509 0016 511C     		adds	r1, r2, #1
 1510              	.LVL132:
1389:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1511              		.loc 1 1389 8 view .LVU393
 1512 0018 0CD2     		bcs	.L151
1392:nanopb/pb_decode.c ****     {
 1513              		.loc 1 1392 5 is_stmt 1 view .LVU394
1392:nanopb/pb_decode.c ****     {
 1514              		.loc 1 1392 9 is_stmt 0 view .LVU395
 1515 001a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
1392:nanopb/pb_decode.c ****     {
 1516              		.loc 1 1392 8 view .LVU396
 1517 001c 03F0C003 		and	r3, r3, #192
 1518 0020 802B     		cmp	r3, #128
 1519 0022 10D0     		beq	.L152
1404:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 57


 1520              		.loc 1 1404 9 is_stmt 1 view .LVU397
1404:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
 1521              		.loc 1 1404 31 is_stmt 0 view .LVU398
 1522 0024 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
1404:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
 1523              		.loc 1 1404 12 view .LVU399
 1524 0026 8B42     		cmp	r3, r1
 1525 0028 16D2     		bcs	.L148
1405:nanopb/pb_decode.c ****     }
 1526              		.loc 1 1405 13 is_stmt 1 view .LVU400
 1527 002a E368     		ldr	r3, [r4, #12]
 1528 002c 93B1     		cbz	r3, .L153
 1529              	.L149:
1405:nanopb/pb_decode.c ****     }
 1530              		.loc 1 1405 13 is_stmt 0 discriminator 4 view .LVU401
 1531 002e E360     		str	r3, [r4, #12]
 1532 0030 0023     		movs	r3, #0
 1533 0032 03E0     		b	.L143
 1534              	.L151:
1390:nanopb/pb_decode.c ****     
 1535              		.loc 1 1390 9 is_stmt 1 view .LVU402
 1536 0034 E368     		ldr	r3, [r4, #12]
 1537 0036 23B1     		cbz	r3, .L154
 1538              	.L145:
1390:nanopb/pb_decode.c ****     
 1539              		.loc 1 1390 9 is_stmt 0 discriminator 4 view .LVU403
 1540 0038 E360     		str	r3, [r4, #12]
 1541 003a 0023     		movs	r3, #0
 1542              	.LVL133:
 1543              	.L143:
1411:nanopb/pb_decode.c **** 
 1544              		.loc 1 1411 1 view .LVU404
 1545 003c 1846     		mov	r0, r3
 1546 003e 02B0     		add	sp, sp, #8
 1547              	.LCFI39:
 1548              		.cfi_remember_state
 1549              		.cfi_def_cfa_offset 16
 1550              		@ sp needed
 1551 0040 70BD     		pop	{r4, r5, r6, pc}
 1552              	.LVL134:
 1553              	.L154:
 1554              	.LCFI40:
 1555              		.cfi_restore_state
1390:nanopb/pb_decode.c ****     
 1556              		.loc 1 1390 9 view .LVU405
 1557 0042 0A4B     		ldr	r3, .L156
 1558 0044 F8E7     		b	.L145
 1559              	.L152:
1395:nanopb/pb_decode.c **** #else
 1560              		.loc 1 1395 9 is_stmt 1 view .LVU406
 1561 0046 E368     		ldr	r3, [r4, #12]
 1562 0048 13B1     		cbz	r3, .L155
 1563              	.L147:
1395:nanopb/pb_decode.c **** #else
 1564              		.loc 1 1395 9 is_stmt 0 discriminator 4 view .LVU407
 1565 004a E360     		str	r3, [r4, #12]
 1566 004c 0023     		movs	r3, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 58


 1567 004e F5E7     		b	.L143
 1568              	.L155:
1395:nanopb/pb_decode.c **** #else
 1569              		.loc 1 1395 9 view .LVU408
 1570 0050 074B     		ldr	r3, .L156+4
 1571 0052 FAE7     		b	.L147
 1572              	.L153:
1405:nanopb/pb_decode.c ****     }
 1573              		.loc 1 1405 13 view .LVU409
 1574 0054 074B     		ldr	r3, .L156+8
 1575 0056 EAE7     		b	.L149
 1576              	.L148:
1408:nanopb/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1577              		.loc 1 1408 5 is_stmt 1 view .LVU410
1408:nanopb/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1578              		.loc 1 1408 14 is_stmt 0 view .LVU411
 1579 0058 3146     		mov	r1, r6
 1580              	.LVL135:
1408:nanopb/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1581              		.loc 1 1408 14 view .LVU412
 1582 005a 2046     		mov	r0, r4
 1583 005c FFF7FEFF 		bl	pb_read
 1584              	.LVL136:
1408:nanopb/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1585              		.loc 1 1408 14 view .LVU413
 1586 0060 0346     		mov	r3, r0
 1587              	.LVL137:
1409:nanopb/pb_decode.c ****     return status;
 1588              		.loc 1 1409 5 is_stmt 1 view .LVU414
1409:nanopb/pb_decode.c ****     return status;
 1589              		.loc 1 1409 32 is_stmt 0 view .LVU415
 1590 0062 019A     		ldr	r2, [sp, #4]
 1591 0064 0021     		movs	r1, #0
 1592 0066 B154     		strb	r1, [r6, r2]
1410:nanopb/pb_decode.c **** }
 1593              		.loc 1 1410 5 is_stmt 1 view .LVU416
1410:nanopb/pb_decode.c **** }
 1594              		.loc 1 1410 12 is_stmt 0 view .LVU417
 1595 0068 E8E7     		b	.L143
 1596              	.L157:
 1597 006a 00BF     		.align	2
 1598              	.L156:
 1599 006c 00000000 		.word	.LC7
 1600 0070 00000000 		.word	.LC3
 1601 0074 10000000 		.word	.LC8
 1602              		.cfi_endproc
 1603              	.LFE38:
 1605              		.section	.text.pb_dec_bytes,"ax",%progbits
 1606              		.align	1
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu softvfp
 1612              	pb_dec_bytes:
 1613              	.LVL138:
 1614              	.LFB37:
1342:nanopb/pb_decode.c ****     uint32_t size;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 59


 1615              		.loc 1 1342 1 is_stmt 1 view -0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 8
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
1342:nanopb/pb_decode.c ****     uint32_t size;
 1619              		.loc 1 1342 1 is_stmt 0 view .LVU419
 1620 0000 70B5     		push	{r4, r5, r6, lr}
 1621              	.LCFI41:
 1622              		.cfi_def_cfa_offset 16
 1623              		.cfi_offset 4, -16
 1624              		.cfi_offset 5, -12
 1625              		.cfi_offset 6, -8
 1626              		.cfi_offset 14, -4
 1627 0002 82B0     		sub	sp, sp, #8
 1628              	.LCFI42:
 1629              		.cfi_def_cfa_offset 24
 1630 0004 0446     		mov	r4, r0
 1631 0006 0E46     		mov	r6, r1
 1632 0008 1546     		mov	r5, r2
1343:nanopb/pb_decode.c ****     size_t alloc_size;
 1633              		.loc 1 1343 5 is_stmt 1 view .LVU420
1344:nanopb/pb_decode.c ****     pb_bytes_array_t *bdest;
 1634              		.loc 1 1344 5 view .LVU421
1345:nanopb/pb_decode.c ****     
 1635              		.loc 1 1345 5 view .LVU422
1347:nanopb/pb_decode.c ****         return false;
 1636              		.loc 1 1347 5 view .LVU423
1347:nanopb/pb_decode.c ****         return false;
 1637              		.loc 1 1347 10 is_stmt 0 view .LVU424
 1638 000a 01A9     		add	r1, sp, #4
 1639              	.LVL139:
1347:nanopb/pb_decode.c ****         return false;
 1640              		.loc 1 1347 10 view .LVU425
 1641 000c FFF7FEFF 		bl	pb_decode_varint32
 1642              	.LVL140:
1347:nanopb/pb_decode.c ****         return false;
 1643              		.loc 1 1347 8 view .LVU426
 1644 0010 0346     		mov	r3, r0
 1645 0012 A8B1     		cbz	r0, .L159
1350:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1646              		.loc 1 1350 5 is_stmt 1 view .LVU427
1350:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1647              		.loc 1 1350 14 is_stmt 0 view .LVU428
 1648 0014 019B     		ldr	r3, [sp, #4]
1350:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1649              		.loc 1 1350 8 view .LVU429
 1650 0016 FF2B     		cmp	r3, #255
 1651 0018 0ED8     		bhi	.L169
1353:nanopb/pb_decode.c ****     if (size > alloc_size)
 1652              		.loc 1 1353 5 is_stmt 1 view .LVU430
 1653              	.LVL141:
1354:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1654              		.loc 1 1354 5 view .LVU431
1354:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1655              		.loc 1 1354 8 is_stmt 0 view .LVU432
 1656 001a 591C     		adds	r1, r3, #1
 1657              	.LVL142:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 60


1354:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1658              		.loc 1 1354 8 view .LVU433
 1659 001c 15D2     		bcs	.L170
1357:nanopb/pb_decode.c ****     {
 1660              		.loc 1 1357 5 is_stmt 1 view .LVU434
1357:nanopb/pb_decode.c ****     {
 1661              		.loc 1 1357 9 is_stmt 0 view .LVU435
 1662 001e 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
1357:nanopb/pb_decode.c ****     {
 1663              		.loc 1 1357 8 view .LVU436
 1664 0020 02F0C002 		and	r2, r2, #192
 1665 0024 802A     		cmp	r2, #128
 1666 0026 17D0     		beq	.L171
1369:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1667              		.loc 1 1369 9 is_stmt 1 view .LVU437
1369:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1668              		.loc 1 1369 31 is_stmt 0 view .LVU438
 1669 0028 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
1369:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1670              		.loc 1 1369 12 view .LVU439
 1671 002a 8A42     		cmp	r2, r1
 1672 002c 1DD2     		bcs	.L166
1370:nanopb/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1673              		.loc 1 1370 13 is_stmt 1 view .LVU440
 1674 002e E368     		ldr	r3, [r4, #12]
 1675 0030 CBB1     		cbz	r3, .L172
 1676              	.L167:
1370:nanopb/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1677              		.loc 1 1370 13 is_stmt 0 discriminator 4 view .LVU441
 1678 0032 E360     		str	r3, [r4, #12]
 1679 0034 0023     		movs	r3, #0
 1680 0036 03E0     		b	.L159
 1681              	.LVL143:
 1682              	.L169:
1351:nanopb/pb_decode.c ****     
 1683              		.loc 1 1351 9 is_stmt 1 view .LVU442
 1684 0038 E368     		ldr	r3, [r4, #12]
 1685 003a 23B1     		cbz	r3, .L173
 1686              	.L161:
1351:nanopb/pb_decode.c ****     
 1687              		.loc 1 1351 9 is_stmt 0 discriminator 4 view .LVU443
 1688 003c E360     		str	r3, [r4, #12]
 1689 003e 0023     		movs	r3, #0
 1690              	.L159:
1376:nanopb/pb_decode.c **** 
 1691              		.loc 1 1376 1 view .LVU444
 1692 0040 1846     		mov	r0, r3
 1693 0042 02B0     		add	sp, sp, #8
 1694              	.LCFI43:
 1695              		.cfi_remember_state
 1696              		.cfi_def_cfa_offset 16
 1697              		@ sp needed
 1698 0044 70BD     		pop	{r4, r5, r6, pc}
 1699              	.LVL144:
 1700              	.L173:
 1701              	.LCFI44:
 1702              		.cfi_restore_state
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 61


1351:nanopb/pb_decode.c ****     
 1703              		.loc 1 1351 9 view .LVU445
 1704 0046 0D4B     		ldr	r3, .L176
 1705 0048 F8E7     		b	.L161
 1706              	.LVL145:
 1707              	.L170:
1355:nanopb/pb_decode.c ****     
 1708              		.loc 1 1355 9 is_stmt 1 view .LVU446
 1709 004a E368     		ldr	r3, [r4, #12]
 1710 004c 13B1     		cbz	r3, .L174
 1711              	.L163:
1355:nanopb/pb_decode.c ****     
 1712              		.loc 1 1355 9 is_stmt 0 discriminator 4 view .LVU447
 1713 004e E360     		str	r3, [r4, #12]
 1714 0050 0023     		movs	r3, #0
 1715 0052 F5E7     		b	.L159
 1716              	.L174:
1355:nanopb/pb_decode.c ****     
 1717              		.loc 1 1355 9 view .LVU448
 1718 0054 0A4B     		ldr	r3, .L176+4
 1719 0056 FAE7     		b	.L163
 1720              	.L171:
1360:nanopb/pb_decode.c **** #else
 1721              		.loc 1 1360 9 is_stmt 1 view .LVU449
 1722 0058 E368     		ldr	r3, [r4, #12]
 1723 005a 13B1     		cbz	r3, .L175
 1724              	.L165:
1360:nanopb/pb_decode.c **** #else
 1725              		.loc 1 1360 9 is_stmt 0 discriminator 4 view .LVU450
 1726 005c E360     		str	r3, [r4, #12]
 1727 005e 0023     		movs	r3, #0
 1728 0060 EEE7     		b	.L159
 1729              	.L175:
1360:nanopb/pb_decode.c **** #else
 1730              		.loc 1 1360 9 view .LVU451
 1731 0062 084B     		ldr	r3, .L176+8
 1732 0064 FAE7     		b	.L165
 1733              	.L172:
1370:nanopb/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1734              		.loc 1 1370 13 view .LVU452
 1735 0066 054B     		ldr	r3, .L176
 1736 0068 E3E7     		b	.L167
 1737              	.L166:
1371:nanopb/pb_decode.c ****     }
 1738              		.loc 1 1371 9 is_stmt 1 view .LVU453
 1739              	.LVL146:
1374:nanopb/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1740              		.loc 1 1374 5 view .LVU454
1374:nanopb/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1741              		.loc 1 1374 17 is_stmt 0 view .LVU455
 1742 006a 2946     		mov	r1, r5
 1743              	.LVL147:
1374:nanopb/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1744              		.loc 1 1374 17 view .LVU456
 1745 006c 01F8013B 		strb	r3, [r1], #1
1375:nanopb/pb_decode.c **** }
 1746              		.loc 1 1375 5 is_stmt 1 view .LVU457
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 62


1375:nanopb/pb_decode.c **** }
 1747              		.loc 1 1375 12 is_stmt 0 view .LVU458
 1748 0070 019A     		ldr	r2, [sp, #4]
 1749 0072 2046     		mov	r0, r4
 1750 0074 FFF7FEFF 		bl	pb_read
 1751              	.LVL148:
1375:nanopb/pb_decode.c **** }
 1752              		.loc 1 1375 12 view .LVU459
 1753 0078 0346     		mov	r3, r0
 1754 007a E1E7     		b	.L159
 1755              	.L177:
 1756              		.align	2
 1757              	.L176:
 1758 007c 00000000 		.word	.LC5
 1759 0080 00000000 		.word	.LC7
 1760 0084 00000000 		.word	.LC3
 1761              		.cfi_endproc
 1762              	.LFE37:
 1764              		.section	.text.pb_decode_varint,"ax",%progbits
 1765              		.align	1
 1766              		.global	pb_decode_varint
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
 1770              		.fpu softvfp
 1772              	pb_decode_varint:
 1773              	.LVL149:
 1774              	.LFB6:
 251:nanopb/pb_decode.c ****     pb_byte_t byte;
 1775              		.loc 1 251 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 8
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 251:nanopb/pb_decode.c ****     pb_byte_t byte;
 1779              		.loc 1 251 1 is_stmt 0 view .LVU461
 1780 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1781              	.LCFI45:
 1782              		.cfi_def_cfa_offset 32
 1783              		.cfi_offset 4, -32
 1784              		.cfi_offset 5, -28
 1785              		.cfi_offset 6, -24
 1786              		.cfi_offset 7, -20
 1787              		.cfi_offset 8, -16
 1788              		.cfi_offset 9, -12
 1789              		.cfi_offset 10, -8
 1790              		.cfi_offset 14, -4
 1791 0004 82B0     		sub	sp, sp, #8
 1792              	.LCFI46:
 1793              		.cfi_def_cfa_offset 40
 1794 0006 0746     		mov	r7, r0
 1795 0008 8846     		mov	r8, r1
 252:nanopb/pb_decode.c ****     uint_fast8_t bitpos = 0;
 1796              		.loc 1 252 5 is_stmt 1 view .LVU462
 253:nanopb/pb_decode.c ****     uint64_t result = 0;
 1797              		.loc 1 253 5 view .LVU463
 1798              	.LVL150:
 254:nanopb/pb_decode.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 63


 1799              		.loc 1 254 5 view .LVU464
 254:nanopb/pb_decode.c ****     
 1800              		.loc 1 254 14 is_stmt 0 view .LVU465
 1801 000a 0025     		movs	r5, #0
 1802 000c 2E46     		mov	r6, r5
 253:nanopb/pb_decode.c ****     uint64_t result = 0;
 1803              		.loc 1 253 18 view .LVU466
 1804 000e 2C46     		mov	r4, r5
 1805              	.LVL151:
 1806              	.L182:
 256:nanopb/pb_decode.c ****     {
 1807              		.loc 1 256 5 is_stmt 1 view .LVU467
 258:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 1808              		.loc 1 258 9 view .LVU468
 258:nanopb/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 1809              		.loc 1 258 12 is_stmt 0 view .LVU469
 1810 0010 3F2C     		cmp	r4, #63
 1811 0012 22D8     		bhi	.L184
 261:nanopb/pb_decode.c ****             return false;
 1812              		.loc 1 261 9 is_stmt 1 view .LVU470
 261:nanopb/pb_decode.c ****             return false;
 1813              		.loc 1 261 14 is_stmt 0 view .LVU471
 1814 0014 0DF10701 		add	r1, sp, #7
 1815 0018 3846     		mov	r0, r7
 1816 001a FFF7FEFF 		bl	pb_readbyte
 1817              	.LVL152:
 261:nanopb/pb_decode.c ****             return false;
 1818              		.loc 1 261 12 view .LVU472
 1819 001e 8646     		mov	lr, r0
 1820 0020 00B3     		cbz	r0, .L181
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1821              		.loc 1 264 9 is_stmt 1 view .LVU473
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1822              		.loc 1 264 35 is_stmt 0 view .LVU474
 1823 0022 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1824              		.loc 1 264 19 view .LVU475
 1825 0026 00F07F02 		and	r2, r0, #127
 1826 002a 5FFA82F9 		uxtb	r9, r2
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1827              		.loc 1 264 43 view .LVU476
 1828 002e A4F1200C 		sub	ip, r4, #32
 1829 0032 C4F12001 		rsb	r1, r4, #32
 1830 0036 09FA0CF3 		lsl	r3, r9, ip
 1831 003a 29FA01F1 		lsr	r1, r9, r1
 1832 003e 0B43     		orrs	r3, r3, r1
 1833 0040 09FA04F2 		lsl	r2, r9, r4
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1834              		.loc 1 264 16 view .LVU477
 1835 0044 1543     		orrs	r5, r5, r2
 1836              	.LVL153:
 264:nanopb/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1837              		.loc 1 264 16 view .LVU478
 1838 0046 1E43     		orrs	r6, r6, r3
 1839              	.LVL154:
 265:nanopb/pb_decode.c ****     } while (byte & 0x80);
 1840              		.loc 1 265 9 is_stmt 1 view .LVU479
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 64


 265:nanopb/pb_decode.c ****     } while (byte & 0x80);
 1841              		.loc 1 265 16 is_stmt 0 view .LVU480
 1842 0048 0734     		adds	r4, r4, #7
 1843              	.LVL155:
 266:nanopb/pb_decode.c ****     
 1844              		.loc 1 266 5 view .LVU481
 1845 004a 10F0800F 		tst	r0, #128
 1846 004e DFD1     		bne	.L182
 268:nanopb/pb_decode.c ****     return true;
 1847              		.loc 1 268 5 is_stmt 1 view .LVU482
 268:nanopb/pb_decode.c ****     return true;
 1848              		.loc 1 268 11 is_stmt 0 view .LVU483
 1849 0050 C8F80050 		str	r5, [r8]
 1850 0054 C8F80460 		str	r6, [r8, #4]
 269:nanopb/pb_decode.c **** }
 1851              		.loc 1 269 5 is_stmt 1 view .LVU484
 269:nanopb/pb_decode.c **** }
 1852              		.loc 1 269 12 is_stmt 0 view .LVU485
 1853 0058 04E0     		b	.L181
 1854              	.L184:
 259:nanopb/pb_decode.c ****         
 1855              		.loc 1 259 13 is_stmt 1 view .LVU486
 1856 005a FB68     		ldr	r3, [r7, #12]
 1857 005c 33B1     		cbz	r3, .L185
 1858              	.L180:
 259:nanopb/pb_decode.c ****         
 1859              		.loc 1 259 13 is_stmt 0 discriminator 4 view .LVU487
 1860 005e FB60     		str	r3, [r7, #12]
 1861 0060 4FF0000E 		mov	lr, #0
 1862              	.LVL156:
 1863              	.L181:
 270:nanopb/pb_decode.c **** #endif
 1864              		.loc 1 270 1 view .LVU488
 1865 0064 7046     		mov	r0, lr
 1866 0066 02B0     		add	sp, sp, #8
 1867              	.LCFI47:
 1868              		.cfi_remember_state
 1869              		.cfi_def_cfa_offset 32
 1870              		@ sp needed
 1871 0068 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1872              	.LVL157:
 1873              	.L185:
 1874              	.LCFI48:
 1875              		.cfi_restore_state
 259:nanopb/pb_decode.c ****         
 1876              		.loc 1 259 13 view .LVU489
 1877 006c 004B     		ldr	r3, .L186
 1878 006e F6E7     		b	.L180
 1879              	.L187:
 1880              		.align	2
 1881              	.L186:
 1882 0070 00000000 		.word	.LC2
 1883              		.cfi_endproc
 1884              	.LFE6:
 1886              		.section	.text.pb_dec_uvarint,"ax",%progbits
 1887              		.align	1
 1888              		.syntax unified
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 65


 1889              		.thumb
 1890              		.thumb_func
 1891              		.fpu softvfp
 1893              	pb_dec_uvarint:
 1894              	.LVL158:
 1895              	.LFB33:
1277:nanopb/pb_decode.c ****     pb_uint64_t value, clamped;
 1896              		.loc 1 1277 1 is_stmt 1 view -0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 8
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
1277:nanopb/pb_decode.c ****     pb_uint64_t value, clamped;
 1900              		.loc 1 1277 1 is_stmt 0 view .LVU491
 1901 0000 70B5     		push	{r4, r5, r6, lr}
 1902              	.LCFI49:
 1903              		.cfi_def_cfa_offset 16
 1904              		.cfi_offset 4, -16
 1905              		.cfi_offset 5, -12
 1906              		.cfi_offset 6, -8
 1907              		.cfi_offset 14, -4
 1908 0002 82B0     		sub	sp, sp, #8
 1909              	.LCFI50:
 1910              		.cfi_def_cfa_offset 24
 1911 0004 0646     		mov	r6, r0
 1912 0006 0D46     		mov	r5, r1
 1913 0008 1446     		mov	r4, r2
1278:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 1914              		.loc 1 1278 5 is_stmt 1 view .LVU492
1279:nanopb/pb_decode.c ****         return false;
 1915              		.loc 1 1279 5 view .LVU493
1279:nanopb/pb_decode.c ****         return false;
 1916              		.loc 1 1279 10 is_stmt 0 view .LVU494
 1917 000a 6946     		mov	r1, sp
 1918              	.LVL159:
1279:nanopb/pb_decode.c ****         return false;
 1919              		.loc 1 1279 10 view .LVU495
 1920 000c FFF7FEFF 		bl	pb_decode_varint
 1921              	.LVL160:
1279:nanopb/pb_decode.c ****         return false;
 1922              		.loc 1 1279 8 view .LVU496
 1923 0010 0346     		mov	r3, r0
 1924 0012 E0B1     		cbz	r0, .L189
1283:nanopb/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1925              		.loc 1 1283 5 is_stmt 1 view .LVU497
1283:nanopb/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1926              		.loc 1 1283 14 is_stmt 0 view .LVU498
 1927 0014 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
1283:nanopb/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1928              		.loc 1 1283 8 view .LVU499
 1929 0016 082A     		cmp	r2, #8
 1930 0018 0BD0     		beq	.L198
1285:nanopb/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
 1931              		.loc 1 1285 10 is_stmt 1 view .LVU500
1285:nanopb/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
 1932              		.loc 1 1285 13 is_stmt 0 view .LVU501
 1933 001a 042A     		cmp	r2, #4
 1934 001c 1AD0     		beq	.L199
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 66


1287:nanopb/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
 1935              		.loc 1 1287 10 is_stmt 1 view .LVU502
1287:nanopb/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
 1936              		.loc 1 1287 13 is_stmt 0 view .LVU503
 1937 001e 022A     		cmp	r2, #2
 1938 0020 1CD0     		beq	.L200
1289:nanopb/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
 1939              		.loc 1 1289 10 is_stmt 1 view .LVU504
1289:nanopb/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
 1940              		.loc 1 1289 13 is_stmt 0 view .LVU505
 1941 0022 012A     		cmp	r2, #1
 1942 0024 20D1     		bne	.L194
1290:nanopb/pb_decode.c ****     else
 1943              		.loc 1 1290 9 is_stmt 1 view .LVU506
1290:nanopb/pb_decode.c ****     else
 1944              		.loc 1 1290 43 is_stmt 0 view .LVU507
 1945 0026 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
1290:nanopb/pb_decode.c ****     else
 1946              		.loc 1 1290 41 view .LVU508
 1947 002a 2070     		strb	r0, [r4]
1290:nanopb/pb_decode.c ****     else
 1948              		.loc 1 1290 17 view .LVU509
 1949 002c C0B2     		uxtb	r0, r0
 1950 002e 0021     		movs	r1, #0
 1951              	.LVL161:
1290:nanopb/pb_decode.c ****     else
 1952              		.loc 1 1290 17 view .LVU510
 1953 0030 03E0     		b	.L191
 1954              	.LVL162:
 1955              	.L198:
1284:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
 1956              		.loc 1 1284 9 is_stmt 1 view .LVU511
1284:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
 1957              		.loc 1 1284 39 is_stmt 0 view .LVU512
 1958 0032 DDE90001 		ldrd	r0, [sp]
 1959 0036 C4E90001 		strd	r0, [r4]
 1960              	.LVL163:
 1961              	.L191:
1294:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1962              		.loc 1 1294 5 is_stmt 1 view .LVU513
1294:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1963              		.loc 1 1294 17 is_stmt 0 view .LVU514
 1964 003a DDE90045 		ldrd	r4, [sp]
 1965              	.LVL164:
1294:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1966              		.loc 1 1294 8 view .LVU515
 1967 003e 8D42     		cmp	r5, r1
 1968 0040 08BF     		it	eq
 1969 0042 8442     		cmpeq	r4, r0
 1970 0044 03D0     		beq	.L189
1295:nanopb/pb_decode.c **** 
 1971              		.loc 1 1295 9 is_stmt 1 view .LVU516
 1972 0046 F368     		ldr	r3, [r6, #12]
 1973 0048 ABB1     		cbz	r3, .L201
 1974              	.L196:
1295:nanopb/pb_decode.c **** 
 1975              		.loc 1 1295 9 is_stmt 0 discriminator 4 view .LVU517
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 67


 1976 004a F360     		str	r3, [r6, #12]
 1977 004c 0023     		movs	r3, #0
 1978              	.LVL165:
 1979              	.L189:
1298:nanopb/pb_decode.c **** 
 1980              		.loc 1 1298 1 view .LVU518
 1981 004e 1846     		mov	r0, r3
 1982 0050 02B0     		add	sp, sp, #8
 1983              	.LCFI51:
 1984              		.cfi_remember_state
 1985              		.cfi_def_cfa_offset 16
 1986              		@ sp needed
 1987 0052 70BD     		pop	{r4, r5, r6, pc}
 1988              	.LVL166:
 1989              	.L199:
 1990              	.LCFI52:
 1991              		.cfi_restore_state
1286:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1992              		.loc 1 1286 9 is_stmt 1 view .LVU519
1286:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1993              		.loc 1 1286 38 is_stmt 0 view .LVU520
 1994 0054 0098     		ldr	r0, [sp]
1286:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1995              		.loc 1 1286 36 view .LVU521
 1996 0056 2060     		str	r0, [r4]
1286:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1997              		.loc 1 1286 17 view .LVU522
 1998 0058 0021     		movs	r1, #0
 1999              	.LVL167:
1286:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 2000              		.loc 1 1286 17 view .LVU523
 2001 005a EEE7     		b	.L191
 2002              	.LVL168:
 2003              	.L200:
1288:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2004              		.loc 1 1288 9 is_stmt 1 view .LVU524
1288:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2005              		.loc 1 1288 44 is_stmt 0 view .LVU525
 2006 005c BDF80000 		ldrh	r0, [sp]
1288:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2007              		.loc 1 1288 42 view .LVU526
 2008 0060 2080     		strh	r0, [r4]	@ movhi
1288:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2009              		.loc 1 1288 17 view .LVU527
 2010 0062 80B2     		uxth	r0, r0
 2011 0064 0021     		movs	r1, #0
 2012              	.LVL169:
1288:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2013              		.loc 1 1288 17 view .LVU528
 2014 0066 E8E7     		b	.L191
 2015              	.LVL170:
 2016              	.L194:
1292:nanopb/pb_decode.c ****     
 2017              		.loc 1 1292 9 is_stmt 1 view .LVU529
 2018 0068 F368     		ldr	r3, [r6, #12]
 2019 006a 13B1     		cbz	r3, .L202
 2020              	.L195:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 68


1292:nanopb/pb_decode.c ****     
 2021              		.loc 1 1292 9 is_stmt 0 discriminator 4 view .LVU530
 2022 006c F360     		str	r3, [r6, #12]
 2023 006e 0023     		movs	r3, #0
 2024 0070 EDE7     		b	.L189
 2025              	.L202:
1292:nanopb/pb_decode.c ****     
 2026              		.loc 1 1292 9 view .LVU531
 2027 0072 024B     		ldr	r3, .L203
 2028 0074 FAE7     		b	.L195
 2029              	.LVL171:
 2030              	.L201:
1295:nanopb/pb_decode.c **** 
 2031              		.loc 1 1295 9 view .LVU532
 2032 0076 024B     		ldr	r3, .L203+4
 2033 0078 E7E7     		b	.L196
 2034              	.L204:
 2035 007a 00BF     		.align	2
 2036              	.L203:
 2037 007c 00000000 		.word	.LC9
 2038 0080 14000000 		.word	.LC10
 2039              		.cfi_endproc
 2040              	.LFE33:
 2042              		.section	.text.pb_dec_varint,"ax",%progbits
 2043              		.align	1
 2044              		.syntax unified
 2045              		.thumb
 2046              		.thumb_func
 2047              		.fpu softvfp
 2049              	pb_dec_varint:
 2050              	.LVL172:
 2051              	.LFB32:
1240:nanopb/pb_decode.c ****     pb_uint64_t value;
 2052              		.loc 1 1240 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 8
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
1240:nanopb/pb_decode.c ****     pb_uint64_t value;
 2056              		.loc 1 1240 1 is_stmt 0 view .LVU534
 2057 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2058              	.LCFI53:
 2059              		.cfi_def_cfa_offset 20
 2060              		.cfi_offset 4, -20
 2061              		.cfi_offset 5, -16
 2062              		.cfi_offset 6, -12
 2063              		.cfi_offset 7, -8
 2064              		.cfi_offset 14, -4
 2065 0002 83B0     		sub	sp, sp, #12
 2066              	.LCFI54:
 2067              		.cfi_def_cfa_offset 32
 2068 0004 0546     		mov	r5, r0
 2069 0006 0F46     		mov	r7, r1
 2070 0008 1646     		mov	r6, r2
1241:nanopb/pb_decode.c ****     pb_int64_t svalue;
 2071              		.loc 1 1241 5 is_stmt 1 view .LVU535
1242:nanopb/pb_decode.c ****     pb_int64_t clamped;
 2072              		.loc 1 1242 5 view .LVU536
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 69


1243:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 2073              		.loc 1 1243 5 view .LVU537
1244:nanopb/pb_decode.c ****         return false;
 2074              		.loc 1 1244 5 view .LVU538
1244:nanopb/pb_decode.c ****         return false;
 2075              		.loc 1 1244 10 is_stmt 0 view .LVU539
 2076 000a 6946     		mov	r1, sp
 2077              	.LVL173:
1244:nanopb/pb_decode.c ****         return false;
 2078              		.loc 1 1244 10 view .LVU540
 2079 000c FFF7FEFF 		bl	pb_decode_varint
 2080              	.LVL174:
1244:nanopb/pb_decode.c ****         return false;
 2081              		.loc 1 1244 8 view .LVU541
 2082 0010 0446     		mov	r4, r0
 2083 0012 00B3     		cbz	r0, .L206
1253:nanopb/pb_decode.c ****         svalue = (pb_int64_t)value;
 2084              		.loc 1 1253 5 is_stmt 1 view .LVU542
1253:nanopb/pb_decode.c ****         svalue = (pb_int64_t)value;
 2085              		.loc 1 1253 14 is_stmt 0 view .LVU543
 2086 0014 3979     		ldrb	r1, [r7, #4]	@ zero_extendqisi2
1253:nanopb/pb_decode.c ****         svalue = (pb_int64_t)value;
 2087              		.loc 1 1253 8 view .LVU544
 2088 0016 0829     		cmp	r1, #8
 2089 0018 0ED0     		beq	.L217
1256:nanopb/pb_decode.c **** 
 2090              		.loc 1 1256 9 is_stmt 1 view .LVU545
1256:nanopb/pb_decode.c **** 
 2091              		.loc 1 1256 18 is_stmt 0 view .LVU546
 2092 001a 009A     		ldr	r2, [sp]
1256:nanopb/pb_decode.c **** 
 2093              		.loc 1 1256 16 view .LVU547
 2094 001c D317     		asrs	r3, r2, #31
 2095              	.LVL175:
 2096              	.L208:
1259:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
 2097              		.loc 1 1259 5 is_stmt 1 view .LVU548
1259:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
 2098              		.loc 1 1259 8 is_stmt 0 view .LVU549
 2099 001e 0829     		cmp	r1, #8
 2100 0020 0DD0     		beq	.L218
1261:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
 2101              		.loc 1 1261 10 is_stmt 1 view .LVU550
1261:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
 2102              		.loc 1 1261 13 is_stmt 0 view .LVU551
 2103 0022 0429     		cmp	r1, #4
 2104 0024 1AD0     		beq	.L219
1263:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
 2105              		.loc 1 1263 10 is_stmt 1 view .LVU552
1263:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
 2106              		.loc 1 1263 13 is_stmt 0 view .LVU553
 2107 0026 0229     		cmp	r1, #2
 2108 0028 1CD0     		beq	.L220
1265:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
 2109              		.loc 1 1265 10 is_stmt 1 view .LVU554
1265:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
 2110              		.loc 1 1265 13 is_stmt 0 view .LVU555
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 70


 2111 002a 0129     		cmp	r1, #1
 2112 002c 1FD1     		bne	.L213
1266:nanopb/pb_decode.c ****     else
 2113              		.loc 1 1266 9 is_stmt 1 view .LVU556
1266:nanopb/pb_decode.c ****     else
 2114              		.loc 1 1266 42 is_stmt 0 view .LVU557
 2115 002e 50B2     		sxtb	r0, r2
1266:nanopb/pb_decode.c ****     else
 2116              		.loc 1 1266 40 view .LVU558
 2117 0030 3070     		strb	r0, [r6]
1266:nanopb/pb_decode.c ****     else
 2118              		.loc 1 1266 17 view .LVU559
 2119 0032 40B2     		sxtb	r0, r0
 2120 0034 C117     		asrs	r1, r0, #31
 2121              	.LVL176:
1266:nanopb/pb_decode.c ****     else
 2122              		.loc 1 1266 17 view .LVU560
 2123 0036 06E0     		b	.L210
 2124              	.LVL177:
 2125              	.L217:
1254:nanopb/pb_decode.c ****     else
 2126              		.loc 1 1254 9 is_stmt 1 view .LVU561
1254:nanopb/pb_decode.c ****     else
 2127              		.loc 1 1254 18 is_stmt 0 view .LVU562
 2128 0038 DDE90023 		ldrd	r2, [sp]
 2129              	.LVL178:
1254:nanopb/pb_decode.c ****     else
 2130              		.loc 1 1254 18 view .LVU563
 2131 003c EFE7     		b	.L208
 2132              	.L218:
1260:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2133              		.loc 1 1260 9 is_stmt 1 view .LVU564
1260:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2134              		.loc 1 1260 38 is_stmt 0 view .LVU565
 2135 003e C6E90023 		strd	r2, [r6]
 2136              	.LVL179:
1260:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2137              		.loc 1 1260 17 view .LVU566
 2138 0042 1046     		mov	r0, r2
 2139 0044 1946     		mov	r1, r3
 2140              	.LVL180:
 2141              	.L210:
1270:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 2142              		.loc 1 1270 5 is_stmt 1 view .LVU567
1270:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 2143              		.loc 1 1270 8 is_stmt 0 view .LVU568
 2144 0046 8B42     		cmp	r3, r1
 2145 0048 08BF     		it	eq
 2146 004a 8242     		cmpeq	r2, r0
 2147 004c 03D0     		beq	.L206
1271:nanopb/pb_decode.c ****     
 2148              		.loc 1 1271 9 is_stmt 1 view .LVU569
 2149 004e EB68     		ldr	r3, [r5, #12]
 2150 0050 A3B1     		cbz	r3, .L221
 2151              	.L215:
1271:nanopb/pb_decode.c ****     
 2152              		.loc 1 1271 9 is_stmt 0 discriminator 4 view .LVU570
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 71


 2153 0052 EB60     		str	r3, [r5, #12]
 2154 0054 0024     		movs	r4, #0
 2155              	.LVL181:
 2156              	.L206:
1274:nanopb/pb_decode.c **** 
 2157              		.loc 1 1274 1 view .LVU571
 2158 0056 2046     		mov	r0, r4
 2159 0058 03B0     		add	sp, sp, #12
 2160              	.LCFI55:
 2161              		.cfi_remember_state
 2162              		.cfi_def_cfa_offset 20
 2163              		@ sp needed
 2164 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 2165              	.LVL182:
 2166              	.L219:
 2167              	.LCFI56:
 2168              		.cfi_restore_state
1262:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2169              		.loc 1 1262 9 is_stmt 1 view .LVU572
1262:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2170              		.loc 1 1262 35 is_stmt 0 view .LVU573
 2171 005c 3260     		str	r2, [r6]
1262:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2172              		.loc 1 1262 17 view .LVU574
 2173 005e 1046     		mov	r0, r2
 2174 0060 D117     		asrs	r1, r2, #31
 2175              	.LVL183:
1262:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2176              		.loc 1 1262 17 view .LVU575
 2177 0062 F0E7     		b	.L210
 2178              	.LVL184:
 2179              	.L220:
1264:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2180              		.loc 1 1264 9 is_stmt 1 view .LVU576
1264:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2181              		.loc 1 1264 43 is_stmt 0 view .LVU577
 2182 0064 10B2     		sxth	r0, r2
1264:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2183              		.loc 1 1264 41 view .LVU578
 2184 0066 3080     		strh	r0, [r6]	@ movhi
1264:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2185              		.loc 1 1264 17 view .LVU579
 2186 0068 00B2     		sxth	r0, r0
 2187 006a C117     		asrs	r1, r0, #31
 2188              	.LVL185:
1264:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2189              		.loc 1 1264 17 view .LVU580
 2190 006c EBE7     		b	.L210
 2191              	.LVL186:
 2192              	.L213:
1268:nanopb/pb_decode.c **** 
 2193              		.loc 1 1268 9 is_stmt 1 view .LVU581
 2194 006e EB68     		ldr	r3, [r5, #12]
 2195 0070 13B1     		cbz	r3, .L222
 2196              	.L214:
1268:nanopb/pb_decode.c **** 
 2197              		.loc 1 1268 9 is_stmt 0 discriminator 4 view .LVU582
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 72


 2198 0072 EB60     		str	r3, [r5, #12]
 2199 0074 0024     		movs	r4, #0
 2200 0076 EEE7     		b	.L206
 2201              	.L222:
1268:nanopb/pb_decode.c **** 
 2202              		.loc 1 1268 9 view .LVU583
 2203 0078 014B     		ldr	r3, .L223
 2204 007a FAE7     		b	.L214
 2205              	.LVL187:
 2206              	.L221:
1271:nanopb/pb_decode.c ****     
 2207              		.loc 1 1271 9 view .LVU584
 2208 007c 014B     		ldr	r3, .L223+4
 2209 007e E8E7     		b	.L215
 2210              	.L224:
 2211              		.align	2
 2212              	.L223:
 2213 0080 00000000 		.word	.LC9
 2214 0084 14000000 		.word	.LC10
 2215              		.cfi_endproc
 2216              	.LFE32:
 2218              		.section	.text.pb_decode_tag,"ax",%progbits
 2219              		.align	1
 2220              		.global	pb_decode_tag
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2224              		.fpu softvfp
 2226              	pb_decode_tag:
 2227              	.LVL188:
 2228              	.LFB9:
 294:nanopb/pb_decode.c ****     uint32_t temp;
 2229              		.loc 1 294 1 is_stmt 1 view -0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 8
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 294:nanopb/pb_decode.c ****     uint32_t temp;
 2233              		.loc 1 294 1 is_stmt 0 view .LVU586
 2234 0000 70B5     		push	{r4, r5, r6, lr}
 2235              	.LCFI57:
 2236              		.cfi_def_cfa_offset 16
 2237              		.cfi_offset 4, -16
 2238              		.cfi_offset 5, -12
 2239              		.cfi_offset 6, -8
 2240              		.cfi_offset 14, -4
 2241 0002 82B0     		sub	sp, sp, #8
 2242              	.LCFI58:
 2243              		.cfi_def_cfa_offset 24
 2244 0004 0D46     		mov	r5, r1
 2245 0006 1646     		mov	r6, r2
 2246 0008 1C46     		mov	r4, r3
 295:nanopb/pb_decode.c ****     *eof = false;
 2247              		.loc 1 295 5 is_stmt 1 view .LVU587
 296:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2248              		.loc 1 296 5 view .LVU588
 296:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2249              		.loc 1 296 10 is_stmt 0 view .LVU589
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 73


 2250 000a 0023     		movs	r3, #0
 2251              	.LVL189:
 296:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2252              		.loc 1 296 10 view .LVU590
 2253 000c 2370     		strb	r3, [r4]
 297:nanopb/pb_decode.c ****     *tag = 0;
 2254              		.loc 1 297 5 is_stmt 1 view .LVU591
 297:nanopb/pb_decode.c ****     *tag = 0;
 2255              		.loc 1 297 16 is_stmt 0 view .LVU592
 2256 000e 0B70     		strb	r3, [r1]
 298:nanopb/pb_decode.c ****     
 2257              		.loc 1 298 5 is_stmt 1 view .LVU593
 298:nanopb/pb_decode.c ****     
 2258              		.loc 1 298 10 is_stmt 0 view .LVU594
 2259 0010 1360     		str	r3, [r2]
 300:nanopb/pb_decode.c ****     {
 2260              		.loc 1 300 5 is_stmt 1 view .LVU595
 300:nanopb/pb_decode.c ****     {
 2261              		.loc 1 300 10 is_stmt 0 view .LVU596
 2262 0012 2246     		mov	r2, r4
 2263              	.LVL190:
 300:nanopb/pb_decode.c ****     {
 2264              		.loc 1 300 10 view .LVU597
 2265 0014 01A9     		add	r1, sp, #4
 2266              	.LVL191:
 300:nanopb/pb_decode.c ****     {
 2267              		.loc 1 300 10 view .LVU598
 2268 0016 FFF7FEFF 		bl	pb_decode_varint32_eof
 2269              	.LVL192:
 300:nanopb/pb_decode.c ****     {
 2270              		.loc 1 300 8 view .LVU599
 2271 001a 0246     		mov	r2, r0
 2272 001c 40B1     		cbz	r0, .L226
 305:nanopb/pb_decode.c ****     {
 2273              		.loc 1 305 5 is_stmt 1 view .LVU600
 305:nanopb/pb_decode.c ****     {
 2274              		.loc 1 305 14 is_stmt 0 view .LVU601
 2275 001e 019B     		ldr	r3, [sp, #4]
 305:nanopb/pb_decode.c ****     {
 2276              		.loc 1 305 8 view .LVU602
 2277 0020 4BB1     		cbz	r3, .L229
 311:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2278              		.loc 1 311 5 is_stmt 1 view .LVU603
 311:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2279              		.loc 1 311 17 is_stmt 0 view .LVU604
 2280 0022 DB08     		lsrs	r3, r3, #3
 311:nanopb/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2281              		.loc 1 311 10 view .LVU605
 2282 0024 3360     		str	r3, [r6]
 312:nanopb/pb_decode.c ****     return true;
 2283              		.loc 1 312 5 is_stmt 1 view .LVU606
 312:nanopb/pb_decode.c ****     return true;
 2284              		.loc 1 312 18 is_stmt 0 view .LVU607
 2285 0026 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 312:nanopb/pb_decode.c ****     return true;
 2286              		.loc 1 312 40 view .LVU608
 2287 002a 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 74


 312:nanopb/pb_decode.c ****     return true;
 2288              		.loc 1 312 16 view .LVU609
 2289 002e 2B70     		strb	r3, [r5]
 313:nanopb/pb_decode.c **** }
 2290              		.loc 1 313 5 is_stmt 1 view .LVU610
 2291              	.L226:
 314:nanopb/pb_decode.c **** 
 2292              		.loc 1 314 1 is_stmt 0 view .LVU611
 2293 0030 1046     		mov	r0, r2
 2294 0032 02B0     		add	sp, sp, #8
 2295              	.LCFI59:
 2296              		.cfi_remember_state
 2297              		.cfi_def_cfa_offset 16
 2298              		@ sp needed
 2299 0034 70BD     		pop	{r4, r5, r6, pc}
 2300              	.LVL193:
 2301              	.L229:
 2302              	.LCFI60:
 2303              		.cfi_restore_state
 307:nanopb/pb_decode.c ****         return false;
 2304              		.loc 1 307 9 is_stmt 1 view .LVU612
 307:nanopb/pb_decode.c ****         return false;
 2305              		.loc 1 307 14 is_stmt 0 view .LVU613
 2306 0036 0123     		movs	r3, #1
 2307 0038 2370     		strb	r3, [r4]
 308:nanopb/pb_decode.c ****     }
 2308              		.loc 1 308 9 is_stmt 1 view .LVU614
 308:nanopb/pb_decode.c ****     }
 2309              		.loc 1 308 16 is_stmt 0 view .LVU615
 2310 003a 0022     		movs	r2, #0
 2311 003c F8E7     		b	.L226
 2312              		.cfi_endproc
 2313              	.LFE9:
 2315              		.section	.text.pb_skip_field,"ax",%progbits
 2316              		.align	1
 2317              		.global	pb_skip_field
 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2321              		.fpu softvfp
 2323              	pb_skip_field:
 2324              	.LVL194:
 2325              	.LFB10:
 317:nanopb/pb_decode.c ****     switch (wire_type)
 2326              		.loc 1 317 1 is_stmt 1 view -0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 317:nanopb/pb_decode.c ****     switch (wire_type)
 2330              		.loc 1 317 1 is_stmt 0 view .LVU617
 2331 0000 08B5     		push	{r3, lr}
 2332              	.LCFI61:
 2333              		.cfi_def_cfa_offset 8
 2334              		.cfi_offset 3, -8
 2335              		.cfi_offset 14, -4
 318:nanopb/pb_decode.c ****     {
 2336              		.loc 1 318 5 is_stmt 1 view .LVU618
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 75


 2337 0002 0529     		cmp	r1, #5
 2338 0004 14D8     		bhi	.L231
 2339 0006 DFE801F0 		tbb	[pc, r1]
 2340              	.L233:
 2341 000a 03       		.byte	(.L236-.L233)/2
 2342 000b 06       		.byte	(.L235-.L233)/2
 2343 000c 0B       		.byte	(.L234-.L233)/2
 2344 000d 13       		.byte	(.L231-.L233)/2
 2345 000e 13       		.byte	(.L231-.L233)/2
 2346 000f 0E       		.byte	(.L232-.L233)/2
 2347              		.p2align 1
 2348              	.L236:
 320:nanopb/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 2349              		.loc 1 320 28 view .LVU619
 320:nanopb/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 2350              		.loc 1 320 35 is_stmt 0 view .LVU620
 2351 0010 FFF7FEFF 		bl	pb_skip_varint
 2352              	.LVL195:
 2353              	.L237:
 326:nanopb/pb_decode.c **** 
 2354              		.loc 1 326 1 view .LVU621
 2355 0014 08BD     		pop	{r3, pc}
 2356              	.LVL196:
 2357              	.L235:
 321:nanopb/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2358              		.loc 1 321 27 is_stmt 1 view .LVU622
 321:nanopb/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2359              		.loc 1 321 34 is_stmt 0 view .LVU623
 2360 0016 0822     		movs	r2, #8
 2361 0018 0021     		movs	r1, #0
 2362              	.LVL197:
 321:nanopb/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2363              		.loc 1 321 34 view .LVU624
 2364 001a FFF7FEFF 		bl	pb_read
 2365              	.LVL198:
 321:nanopb/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2366              		.loc 1 321 34 view .LVU625
 2367 001e F9E7     		b	.L237
 2368              	.LVL199:
 2369              	.L234:
 322:nanopb/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2370              		.loc 1 322 28 is_stmt 1 view .LVU626
 322:nanopb/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2371              		.loc 1 322 35 is_stmt 0 view .LVU627
 2372 0020 FFF7FEFF 		bl	pb_skip_string
 2373              	.LVL200:
 322:nanopb/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2374              		.loc 1 322 35 view .LVU628
 2375 0024 F6E7     		b	.L237
 2376              	.LVL201:
 2377              	.L232:
 323:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2378              		.loc 1 323 27 is_stmt 1 view .LVU629
 323:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2379              		.loc 1 323 34 is_stmt 0 view .LVU630
 2380 0026 0422     		movs	r2, #4
 2381 0028 0021     		movs	r1, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 76


 2382              	.LVL202:
 323:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2383              		.loc 1 323 34 view .LVU631
 2384 002a FFF7FEFF 		bl	pb_read
 2385              	.LVL203:
 323:nanopb/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2386              		.loc 1 323 34 view .LVU632
 2387 002e F1E7     		b	.L237
 2388              	.LVL204:
 2389              	.L231:
 324:nanopb/pb_decode.c ****     }
 2390              		.loc 1 324 18 is_stmt 1 view .LVU633
 2391 0030 C368     		ldr	r3, [r0, #12]
 2392 0032 13B1     		cbz	r3, .L240
 2393              	.L238:
 324:nanopb/pb_decode.c ****     }
 2394              		.loc 1 324 18 is_stmt 0 discriminator 4 view .LVU634
 2395 0034 C360     		str	r3, [r0, #12]
 2396 0036 0020     		movs	r0, #0
 2397              	.LVL205:
 324:nanopb/pb_decode.c ****     }
 2398              		.loc 1 324 18 discriminator 4 view .LVU635
 2399 0038 ECE7     		b	.L237
 2400              	.LVL206:
 2401              	.L240:
 324:nanopb/pb_decode.c ****     }
 2402              		.loc 1 324 18 view .LVU636
 2403 003a 014B     		ldr	r3, .L241
 2404 003c FAE7     		b	.L238
 2405              	.L242:
 2406 003e 00BF     		.align	2
 2407              	.L241:
 2408 0040 00000000 		.word	.LC4
 2409              		.cfi_endproc
 2410              	.LFE10:
 2412              		.section	.text.pb_make_string_substream,"ax",%progbits
 2413              		.align	1
 2414              		.global	pb_make_string_substream
 2415              		.syntax unified
 2416              		.thumb
 2417              		.thumb_func
 2418              		.fpu softvfp
 2420              	pb_make_string_substream:
 2421              	.LVL207:
 2422              	.LFB12:
 362:nanopb/pb_decode.c ****     uint32_t size;
 2423              		.loc 1 362 1 is_stmt 1 view -0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 8
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 362:nanopb/pb_decode.c ****     uint32_t size;
 2427              		.loc 1 362 1 is_stmt 0 view .LVU638
 2428 0000 70B5     		push	{r4, r5, r6, lr}
 2429              	.LCFI62:
 2430              		.cfi_def_cfa_offset 16
 2431              		.cfi_offset 4, -16
 2432              		.cfi_offset 5, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 77


 2433              		.cfi_offset 6, -8
 2434              		.cfi_offset 14, -4
 2435 0002 82B0     		sub	sp, sp, #8
 2436              	.LCFI63:
 2437              		.cfi_def_cfa_offset 24
 2438 0004 0446     		mov	r4, r0
 2439 0006 0D46     		mov	r5, r1
 363:nanopb/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 2440              		.loc 1 363 5 is_stmt 1 view .LVU639
 364:nanopb/pb_decode.c ****         return false;
 2441              		.loc 1 364 5 view .LVU640
 364:nanopb/pb_decode.c ****         return false;
 2442              		.loc 1 364 10 is_stmt 0 view .LVU641
 2443 0008 01A9     		add	r1, sp, #4
 2444              	.LVL208:
 364:nanopb/pb_decode.c ****         return false;
 2445              		.loc 1 364 10 view .LVU642
 2446 000a FFF7FEFF 		bl	pb_decode_varint32
 2447              	.LVL209:
 364:nanopb/pb_decode.c ****         return false;
 2448              		.loc 1 364 8 view .LVU643
 2449 000e 0646     		mov	r6, r0
 2450 0010 50B1     		cbz	r0, .L244
 367:nanopb/pb_decode.c ****     if (substream->bytes_left < size)
 2451              		.loc 1 367 5 is_stmt 1 view .LVU644
 367:nanopb/pb_decode.c ****     if (substream->bytes_left < size)
 2452              		.loc 1 367 16 is_stmt 0 view .LVU645
 2453 0012 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 2454 0016 85E80F00 		stm	r5, {r0, r1, r2, r3}
 368:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2455              		.loc 1 368 5 is_stmt 1 view .LVU646
 368:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2456              		.loc 1 368 31 is_stmt 0 view .LVU647
 2457 001a 019B     		ldr	r3, [sp, #4]
 368:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2458              		.loc 1 368 8 view .LVU648
 2459 001c 9A42     		cmp	r2, r3
 2460 001e 06D3     		bcc	.L248
 371:nanopb/pb_decode.c ****     stream->bytes_left -= size;
 2461              		.loc 1 371 5 is_stmt 1 view .LVU649
 371:nanopb/pb_decode.c ****     stream->bytes_left -= size;
 2462              		.loc 1 371 27 is_stmt 0 view .LVU650
 2463 0020 AB60     		str	r3, [r5, #8]
 372:nanopb/pb_decode.c ****     return true;
 2464              		.loc 1 372 5 is_stmt 1 view .LVU651
 372:nanopb/pb_decode.c ****     return true;
 2465              		.loc 1 372 24 is_stmt 0 view .LVU652
 2466 0022 A268     		ldr	r2, [r4, #8]
 2467 0024 D31A     		subs	r3, r2, r3
 2468 0026 A360     		str	r3, [r4, #8]
 373:nanopb/pb_decode.c **** }
 2469              		.loc 1 373 5 is_stmt 1 view .LVU653
 2470              	.L244:
 374:nanopb/pb_decode.c **** 
 2471              		.loc 1 374 1 is_stmt 0 view .LVU654
 2472 0028 3046     		mov	r0, r6
 2473 002a 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 78


 2474              	.LCFI64:
 2475              		.cfi_remember_state
 2476              		.cfi_def_cfa_offset 16
 2477              		@ sp needed
 2478 002c 70BD     		pop	{r4, r5, r6, pc}
 2479              	.LVL210:
 2480              	.L248:
 2481              	.LCFI65:
 2482              		.cfi_restore_state
 369:nanopb/pb_decode.c ****     
 2483              		.loc 1 369 9 is_stmt 1 view .LVU655
 2484 002e E368     		ldr	r3, [r4, #12]
 2485 0030 13B1     		cbz	r3, .L249
 2486              	.L246:
 369:nanopb/pb_decode.c ****     
 2487              		.loc 1 369 9 is_stmt 0 discriminator 4 view .LVU656
 2488 0032 E360     		str	r3, [r4, #12]
 2489 0034 0026     		movs	r6, #0
 2490 0036 F7E7     		b	.L244
 2491              	.L249:
 369:nanopb/pb_decode.c ****     
 2492              		.loc 1 369 9 view .LVU657
 2493 0038 004B     		ldr	r3, .L250
 2494 003a FAE7     		b	.L246
 2495              	.L251:
 2496              		.align	2
 2497              	.L250:
 2498 003c 00000000 		.word	.LC11
 2499              		.cfi_endproc
 2500              	.LFE12:
 2502              		.section	.text.pb_close_string_substream,"ax",%progbits
 2503              		.align	1
 2504              		.global	pb_close_string_substream
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu softvfp
 2510              	pb_close_string_substream:
 2511              	.LVL211:
 2512              	.LFB13:
 377:nanopb/pb_decode.c ****     if (substream->bytes_left) {
 2513              		.loc 1 377 1 is_stmt 1 view -0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 377:nanopb/pb_decode.c ****     if (substream->bytes_left) {
 2517              		.loc 1 377 1 is_stmt 0 view .LVU659
 2518 0000 38B5     		push	{r3, r4, r5, lr}
 2519              	.LCFI66:
 2520              		.cfi_def_cfa_offset 16
 2521              		.cfi_offset 3, -16
 2522              		.cfi_offset 4, -12
 2523              		.cfi_offset 5, -8
 2524              		.cfi_offset 14, -4
 2525 0002 0546     		mov	r5, r0
 2526 0004 0C46     		mov	r4, r1
 378:nanopb/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 79


 2527              		.loc 1 378 5 is_stmt 1 view .LVU660
 378:nanopb/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 2528              		.loc 1 378 18 is_stmt 0 view .LVU661
 2529 0006 8A68     		ldr	r2, [r1, #8]
 378:nanopb/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 2530              		.loc 1 378 8 view .LVU662
 2531 0008 32B9     		cbnz	r2, .L256
 2532              	.LVL212:
 2533              	.L253:
 383:nanopb/pb_decode.c **** 
 2534              		.loc 1 383 5 is_stmt 1 view .LVU663
 383:nanopb/pb_decode.c **** 
 2535              		.loc 1 383 30 is_stmt 0 view .LVU664
 2536 000a 6368     		ldr	r3, [r4, #4]
 383:nanopb/pb_decode.c **** 
 2537              		.loc 1 383 19 view .LVU665
 2538 000c 6B60     		str	r3, [r5, #4]
 386:nanopb/pb_decode.c **** #endif
 2539              		.loc 1 386 5 is_stmt 1 view .LVU666
 386:nanopb/pb_decode.c **** #endif
 2540              		.loc 1 386 31 is_stmt 0 view .LVU667
 2541 000e E368     		ldr	r3, [r4, #12]
 386:nanopb/pb_decode.c **** #endif
 2542              		.loc 1 386 20 view .LVU668
 2543 0010 EB60     		str	r3, [r5, #12]
 388:nanopb/pb_decode.c **** }
 2544              		.loc 1 388 5 is_stmt 1 view .LVU669
 388:nanopb/pb_decode.c **** }
 2545              		.loc 1 388 12 is_stmt 0 view .LVU670
 2546 0012 0123     		movs	r3, #1
 2547              	.L254:
 389:nanopb/pb_decode.c **** 
 2548              		.loc 1 389 1 view .LVU671
 2549 0014 1846     		mov	r0, r3
 2550 0016 38BD     		pop	{r3, r4, r5, pc}
 2551              	.LVL213:
 2552              	.L256:
 379:nanopb/pb_decode.c ****             return false;
 2553              		.loc 1 379 9 is_stmt 1 view .LVU672
 379:nanopb/pb_decode.c ****             return false;
 2554              		.loc 1 379 14 is_stmt 0 view .LVU673
 2555 0018 0021     		movs	r1, #0
 2556              	.LVL214:
 379:nanopb/pb_decode.c ****             return false;
 2557              		.loc 1 379 14 view .LVU674
 2558 001a 2046     		mov	r0, r4
 2559              	.LVL215:
 379:nanopb/pb_decode.c ****             return false;
 2560              		.loc 1 379 14 view .LVU675
 2561 001c FFF7FEFF 		bl	pb_read
 2562              	.LVL216:
 379:nanopb/pb_decode.c ****             return false;
 2563              		.loc 1 379 12 view .LVU676
 2564 0020 0346     		mov	r3, r0
 2565 0022 0028     		cmp	r0, #0
 2566 0024 F1D1     		bne	.L253
 2567 0026 F5E7     		b	.L254
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 80


 2568              		.cfi_endproc
 2569              	.LFE13:
 2571              		.section	.text.decode_static_field,"ax",%progbits
 2572              		.align	1
 2573              		.syntax unified
 2574              		.thumb
 2575              		.thumb_func
 2576              		.fpu softvfp
 2578              	decode_static_field:
 2579              	.LVL217:
 2580              	.LFB14:
 396:nanopb/pb_decode.c ****     pb_type_t type;
 2581              		.loc 1 396 1 is_stmt 1 view -0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 16
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 396:nanopb/pb_decode.c ****     pb_type_t type;
 2585              		.loc 1 396 1 is_stmt 0 view .LVU678
 2586 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2587              	.LCFI67:
 2588              		.cfi_def_cfa_offset 24
 2589              		.cfi_offset 4, -24
 2590              		.cfi_offset 5, -20
 2591              		.cfi_offset 6, -16
 2592              		.cfi_offset 7, -12
 2593              		.cfi_offset 8, -8
 2594              		.cfi_offset 14, -4
 2595 0004 84B0     		sub	sp, sp, #16
 2596              	.LCFI68:
 2597              		.cfi_def_cfa_offset 40
 2598 0006 0546     		mov	r5, r0
 2599 0008 1446     		mov	r4, r2
 397:nanopb/pb_decode.c ****     pb_decoder_t func;
 2600              		.loc 1 397 5 is_stmt 1 view .LVU679
 398:nanopb/pb_decode.c ****     
 2601              		.loc 1 398 5 view .LVU680
 400:nanopb/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2602              		.loc 1 400 5 view .LVU681
 400:nanopb/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2603              		.loc 1 400 16 is_stmt 0 view .LVU682
 2604 000a 5068     		ldr	r0, [r2, #4]
 2605              	.LVL218:
 400:nanopb/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2606              		.loc 1 400 10 view .LVU683
 2607 000c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2608              	.LVL219:
 401:nanopb/pb_decode.c **** 
 2609              		.loc 1 401 5 is_stmt 1 view .LVU684
 2610 000e 03F00F02 		and	r2, r3, #15
 2611              	.LVL220:
 401:nanopb/pb_decode.c **** 
 2612              		.loc 1 401 10 is_stmt 0 view .LVU685
 2613 0012 474E     		ldr	r6, .L285
 2614 0014 56F82270 		ldr	r7, [r6, r2, lsl #2]
 2615              	.LVL221:
 403:nanopb/pb_decode.c ****     {
 2616              		.loc 1 403 5 is_stmt 1 view .LVU686
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 81


 2617 0018 03F03003 		and	r3, r3, #48
 2618              	.LVL222:
 403:nanopb/pb_decode.c ****     {
 2619              		.loc 1 403 5 is_stmt 0 view .LVU687
 2620 001c 102B     		cmp	r3, #16
 2621 001e 1AD0     		beq	.L258
 2622 0020 0ED9     		bls	.L279
 2623 0022 202B     		cmp	r3, #32
 2624 0024 23D0     		beq	.L262
 2625 0026 302B     		cmp	r3, #48
 2626 0028 7AD1     		bne	.L261
 455:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2627              		.loc 1 455 13 is_stmt 1 view .LVU688
 455:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2628              		.loc 1 455 30 is_stmt 0 view .LVU689
 2629 002a 6369     		ldr	r3, [r4, #20]
 455:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2630              		.loc 1 455 49 view .LVU690
 2631 002c 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 2632              	.LVL223:
 455:nanopb/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2633              		.loc 1 455 38 view .LVU691
 2634 002e 1970     		strb	r1, [r3]
 2635              	.LVL224:
 456:nanopb/pb_decode.c ****             {
 2636              		.loc 1 456 13 is_stmt 1 view .LVU692
 456:nanopb/pb_decode.c ****             {
 2637              		.loc 1 456 16 is_stmt 0 view .LVU693
 2638 0030 072A     		cmp	r2, #7
 2639 0032 68D0     		beq	.L280
 2640              	.L275:
 463:nanopb/pb_decode.c **** 
 2641              		.loc 1 463 13 is_stmt 1 view .LVU694
 463:nanopb/pb_decode.c **** 
 2642              		.loc 1 463 20 is_stmt 0 view .LVU695
 2643 0034 2269     		ldr	r2, [r4, #16]
 2644 0036 6168     		ldr	r1, [r4, #4]
 2645 0038 2846     		mov	r0, r5
 2646 003a B847     		blx	r7
 2647              	.LVL225:
 2648 003c 0646     		mov	r6, r0
 2649 003e 06E0     		b	.L264
 2650              	.LVL226:
 2651              	.L279:
 403:nanopb/pb_decode.c ****     {
 2652              		.loc 1 403 5 view .LVU696
 2653 0040 002B     		cmp	r3, #0
 2654 0042 6DD1     		bne	.L261
 406:nanopb/pb_decode.c ****             
 2655              		.loc 1 406 13 is_stmt 1 view .LVU697
 406:nanopb/pb_decode.c ****             
 2656              		.loc 1 406 20 is_stmt 0 view .LVU698
 2657 0044 2269     		ldr	r2, [r4, #16]
 2658 0046 0146     		mov	r1, r0
 2659              	.LVL227:
 406:nanopb/pb_decode.c ****             
 2660              		.loc 1 406 20 view .LVU699
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 82


 2661 0048 2846     		mov	r0, r5
 2662              	.LVL228:
 406:nanopb/pb_decode.c ****             
 2663              		.loc 1 406 20 view .LVU700
 2664 004a B847     		blx	r7
 2665              	.LVL229:
 406:nanopb/pb_decode.c ****             
 2666              		.loc 1 406 20 view .LVU701
 2667 004c 0646     		mov	r6, r0
 2668              	.L264:
 468:nanopb/pb_decode.c **** 
 2669              		.loc 1 468 1 discriminator 1 view .LVU702
 2670 004e 3046     		mov	r0, r6
 2671 0050 04B0     		add	sp, sp, #16
 2672              	.LCFI69:
 2673              		.cfi_remember_state
 2674              		.cfi_def_cfa_offset 24
 2675              		@ sp needed
 2676 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2677              	.LVL230:
 2678              	.L258:
 2679              	.LCFI70:
 2680              		.cfi_restore_state
 409:nanopb/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2681              		.loc 1 409 13 is_stmt 1 view .LVU703
 409:nanopb/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2682              		.loc 1 409 21 is_stmt 0 view .LVU704
 2683 0056 6369     		ldr	r3, [r4, #20]
 409:nanopb/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2684              		.loc 1 409 36 view .LVU705
 2685 0058 2269     		ldr	r2, [r4, #16]
 409:nanopb/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2686              		.loc 1 409 16 view .LVU706
 2687 005a 9342     		cmp	r3, r2
 2688 005c 01D0     		beq	.L265
 410:nanopb/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 2689              		.loc 1 410 17 is_stmt 1 view .LVU707
 410:nanopb/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 2690              		.loc 1 410 37 is_stmt 0 view .LVU708
 2691 005e 0122     		movs	r2, #1
 2692 0060 1A70     		strb	r2, [r3]
 2693              	.LVL231:
 2694              	.L265:
 411:nanopb/pb_decode.c ****     
 2695              		.loc 1 411 13 is_stmt 1 view .LVU709
 411:nanopb/pb_decode.c ****     
 2696              		.loc 1 411 20 is_stmt 0 view .LVU710
 2697 0062 2269     		ldr	r2, [r4, #16]
 2698 0064 6168     		ldr	r1, [r4, #4]
 2699              	.LVL232:
 411:nanopb/pb_decode.c ****     
 2700              		.loc 1 411 20 view .LVU711
 2701 0066 2846     		mov	r0, r5
 2702 0068 B847     		blx	r7
 2703              	.LVL233:
 2704 006a 0646     		mov	r6, r0
 2705 006c EFE7     		b	.L264
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 83


 2706              	.LVL234:
 2707              	.L262:
 414:nanopb/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 2708              		.loc 1 414 13 is_stmt 1 view .LVU712
 414:nanopb/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 2709              		.loc 1 414 16 is_stmt 0 view .LVU713
 2710 006e 0229     		cmp	r1, #2
 2711 0070 0ED0     		beq	.L281
 2712              	.L266:
 2713              	.LBB10:
 445:nanopb/pb_decode.c ****                 void *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 2714              		.loc 1 445 17 is_stmt 1 view .LVU714
 445:nanopb/pb_decode.c ****                 void *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 2715              		.loc 1 445 28 is_stmt 0 view .LVU715
 2716 0072 6169     		ldr	r1, [r4, #20]
 2717              	.LVL235:
 446:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 2718              		.loc 1 446 17 is_stmt 1 view .LVU716
 446:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 2719              		.loc 1 446 42 is_stmt 0 view .LVU717
 2720 0074 2669     		ldr	r6, [r4, #16]
 446:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 2721              		.loc 1 446 61 view .LVU718
 2722 0076 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 446:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 2723              		.loc 1 446 76 view .LVU719
 2724 0078 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 446:nanopb/pb_decode.c ****                 if (*size >= iter->pos->array_size)
 2725              		.loc 1 446 23 view .LVU720
 2726 007a 03FB0262 		mla	r2, r3, r2, r6
 2727              	.LVL236:
 447:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2728              		.loc 1 447 17 is_stmt 1 view .LVU721
 447:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2729              		.loc 1 447 39 is_stmt 0 view .LVU722
 2730 007e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 2731              	.LVL237:
 447:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2732              		.loc 1 447 20 view .LVU723
 2733 0080 8342     		cmp	r3, r0
 2734 0082 39D3     		bcc	.L273
 448:nanopb/pb_decode.c ****                 
 2735              		.loc 1 448 21 is_stmt 1 view .LVU724
 2736 0084 EB68     		ldr	r3, [r5, #12]
 2737 0086 002B     		cmp	r3, #0
 2738 0088 34D0     		beq	.L282
 2739              	.L274:
 448:nanopb/pb_decode.c ****                 
 2740              		.loc 1 448 21 is_stmt 0 discriminator 4 view .LVU725
 2741 008a EB60     		str	r3, [r5, #12]
 2742              	.LVL238:
 448:nanopb/pb_decode.c ****                 
 2743              		.loc 1 448 21 discriminator 4 view .LVU726
 2744 008c 0026     		movs	r6, #0
 2745 008e DEE7     		b	.L264
 2746              	.LVL239:
 2747              	.L281:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 84


 448:nanopb/pb_decode.c ****                 
 2748              		.loc 1 448 21 discriminator 4 view .LVU727
 2749              	.LBE10:
 415:nanopb/pb_decode.c ****             {
 2750              		.loc 1 415 17 view .LVU728
 2751 0090 042A     		cmp	r2, #4
 2752 0092 EED8     		bhi	.L266
 2753              	.LBB11:
 418:nanopb/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 2754              		.loc 1 418 17 is_stmt 1 view .LVU729
 2755              	.LVL240:
 419:nanopb/pb_decode.c ****                 pb_istream_t substream;
 2756              		.loc 1 419 17 view .LVU730
 419:nanopb/pb_decode.c ****                 pb_istream_t substream;
 2757              		.loc 1 419 28 is_stmt 0 view .LVU731
 2758 0094 D4F81480 		ldr	r8, [r4, #20]
 2759              	.LVL241:
 420:nanopb/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 2760              		.loc 1 420 17 is_stmt 1 view .LVU732
 421:nanopb/pb_decode.c ****                     return false;
 2761              		.loc 1 421 17 view .LVU733
 421:nanopb/pb_decode.c ****                     return false;
 2762              		.loc 1 421 22 is_stmt 0 view .LVU734
 2763 0098 6946     		mov	r1, sp
 2764              	.LVL242:
 421:nanopb/pb_decode.c ****                     return false;
 2765              		.loc 1 421 22 view .LVU735
 2766 009a 2846     		mov	r0, r5
 2767              	.LVL243:
 421:nanopb/pb_decode.c ****                     return false;
 2768              		.loc 1 421 22 view .LVU736
 2769 009c FFF7FEFF 		bl	pb_make_string_substream
 2770              	.LVL244:
 421:nanopb/pb_decode.c ****                     return false;
 2771              		.loc 1 421 20 view .LVU737
 2772 00a0 0646     		mov	r6, r0
 2773 00a2 0028     		cmp	r0, #0
 2774 00a4 D3D0     		beq	.L264
 2775              	.L267:
 424:nanopb/pb_decode.c ****                 {
 2776              		.loc 1 424 33 view .LVU738
 2777 00a6 029B     		ldr	r3, [sp, #8]
 424:nanopb/pb_decode.c ****                 {
 2778              		.loc 1 424 23 view .LVU739
 2779 00a8 9BB1     		cbz	r3, .L269
 424:nanopb/pb_decode.c ****                 {
 2780              		.loc 1 424 52 discriminator 1 view .LVU740
 2781 00aa 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 424:nanopb/pb_decode.c ****                 {
 2782              		.loc 1 424 64 discriminator 1 view .LVU741
 2783 00ae 6168     		ldr	r1, [r4, #4]
 424:nanopb/pb_decode.c ****                 {
 2784              		.loc 1 424 69 discriminator 1 view .LVU742
 2785 00b0 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 424:nanopb/pb_decode.c ****                 {
 2786              		.loc 1 424 49 discriminator 1 view .LVU743
 2787 00b2 9342     		cmp	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 85


 2788 00b4 0DD2     		bcs	.L269
 2789              	.LBB12:
 426:nanopb/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2790              		.loc 1 426 21 is_stmt 1 view .LVU744
 426:nanopb/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2791              		.loc 1 426 46 is_stmt 0 view .LVU745
 2792 00b6 2269     		ldr	r2, [r4, #16]
 426:nanopb/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2793              		.loc 1 426 65 view .LVU746
 2794 00b8 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 2795              	.LVL245:
 427:nanopb/pb_decode.c ****                     {
 2796              		.loc 1 427 21 is_stmt 1 view .LVU747
 427:nanopb/pb_decode.c ****                     {
 2797              		.loc 1 427 26 is_stmt 0 view .LVU748
 2798 00ba 03FB0022 		mla	r2, r3, r0, r2
 2799              	.LVL246:
 427:nanopb/pb_decode.c ****                     {
 2800              		.loc 1 427 26 view .LVU749
 2801 00be 6846     		mov	r0, sp
 2802 00c0 B847     		blx	r7
 2803              	.LVL247:
 427:nanopb/pb_decode.c ****                     {
 2804              		.loc 1 427 24 view .LVU750
 2805 00c2 28B1     		cbz	r0, .L277
 432:nanopb/pb_decode.c ****                 }
 2806              		.loc 1 432 21 is_stmt 1 view .LVU751
 432:nanopb/pb_decode.c ****                 }
 2807              		.loc 1 432 22 is_stmt 0 view .LVU752
 2808 00c4 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 432:nanopb/pb_decode.c ****                 }
 2809              		.loc 1 432 28 view .LVU753
 2810 00c8 0133     		adds	r3, r3, #1
 2811 00ca 88F80030 		strb	r3, [r8]
 2812 00ce EAE7     		b	.L267
 2813              	.L277:
 429:nanopb/pb_decode.c ****                         break;
 2814              		.loc 1 429 32 view .LVU754
 2815 00d0 0646     		mov	r6, r0
 2816              	.L269:
 2817              	.LVL248:
 429:nanopb/pb_decode.c ****                         break;
 2818              		.loc 1 429 32 view .LVU755
 2819              	.LBE12:
 435:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2820              		.loc 1 435 17 is_stmt 1 view .LVU756
 435:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2821              		.loc 1 435 30 is_stmt 0 view .LVU757
 2822 00d2 029B     		ldr	r3, [sp, #8]
 435:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2823              		.loc 1 435 20 view .LVU758
 2824 00d4 33B1     		cbz	r3, .L271
 436:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2825              		.loc 1 436 21 is_stmt 1 view .LVU759
 2826 00d6 EB68     		ldr	r3, [r5, #12]
 2827 00d8 13B1     		cbz	r3, .L283
 2828              	.L272:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 86


 436:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2829              		.loc 1 436 21 is_stmt 0 discriminator 4 view .LVU760
 2830 00da EB60     		str	r3, [r5, #12]
 2831 00dc 0026     		movs	r6, #0
 2832              	.LVL249:
 436:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2833              		.loc 1 436 21 discriminator 4 view .LVU761
 2834 00de B6E7     		b	.L264
 2835              	.LVL250:
 2836              	.L283:
 436:nanopb/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2837              		.loc 1 436 21 view .LVU762
 2838 00e0 144B     		ldr	r3, .L285+4
 2839 00e2 FAE7     		b	.L272
 2840              	.L271:
 437:nanopb/pb_decode.c ****                     return false;
 2841              		.loc 1 437 17 is_stmt 1 view .LVU763
 437:nanopb/pb_decode.c ****                     return false;
 2842              		.loc 1 437 22 is_stmt 0 view .LVU764
 2843 00e4 6946     		mov	r1, sp
 2844 00e6 2846     		mov	r0, r5
 2845 00e8 FFF7FEFF 		bl	pb_close_string_substream
 2846              	.LVL251:
 437:nanopb/pb_decode.c ****                     return false;
 2847              		.loc 1 437 20 view .LVU765
 2848 00ec 0028     		cmp	r0, #0
 2849 00ee AED1     		bne	.L264
 438:nanopb/pb_decode.c **** 
 2850              		.loc 1 438 28 view .LVU766
 2851 00f0 0646     		mov	r6, r0
 2852              	.LVL252:
 438:nanopb/pb_decode.c **** 
 2853              		.loc 1 438 28 view .LVU767
 2854 00f2 ACE7     		b	.L264
 2855              	.LVL253:
 2856              	.L282:
 438:nanopb/pb_decode.c **** 
 2857              		.loc 1 438 28 view .LVU768
 2858              	.LBE11:
 2859              	.LBB13:
 448:nanopb/pb_decode.c ****                 
 2860              		.loc 1 448 21 view .LVU769
 2861 00f4 0F4B     		ldr	r3, .L285+4
 2862 00f6 C8E7     		b	.L274
 2863              	.L273:
 450:nanopb/pb_decode.c ****                 return func(stream, iter->pos, pItem);
 2864              		.loc 1 450 17 is_stmt 1 view .LVU770
 450:nanopb/pb_decode.c ****                 return func(stream, iter->pos, pItem);
 2865              		.loc 1 450 24 is_stmt 0 view .LVU771
 2866 00f8 0133     		adds	r3, r3, #1
 2867 00fa 0B70     		strb	r3, [r1]
 2868              	.LVL254:
 451:nanopb/pb_decode.c ****             }
 2869              		.loc 1 451 17 is_stmt 1 view .LVU772
 451:nanopb/pb_decode.c ****             }
 2870              		.loc 1 451 24 is_stmt 0 view .LVU773
 2871 00fc 6168     		ldr	r1, [r4, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 87


 2872              	.LVL255:
 451:nanopb/pb_decode.c ****             }
 2873              		.loc 1 451 24 view .LVU774
 2874 00fe 2846     		mov	r0, r5
 2875 0100 B847     		blx	r7
 2876              	.LVL256:
 451:nanopb/pb_decode.c ****             }
 2877              		.loc 1 451 24 view .LVU775
 2878 0102 0646     		mov	r6, r0
 2879 0104 A3E7     		b	.L264
 2880              	.L280:
 451:nanopb/pb_decode.c ****             }
 2881              		.loc 1 451 24 view .LVU776
 2882              	.LBE13:
 460:nanopb/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2883              		.loc 1 460 17 is_stmt 1 view .LVU777
 460:nanopb/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2884              		.loc 1 460 44 is_stmt 0 view .LVU778
 2885 0106 6368     		ldr	r3, [r4, #4]
 460:nanopb/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2886              		.loc 1 460 17 view .LVU779
 2887 0108 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 2888 010a 0021     		movs	r1, #0
 2889 010c 2069     		ldr	r0, [r4, #16]
 2890 010e FFF7FEFF 		bl	memset
 2891              	.LVL257:
 461:nanopb/pb_decode.c ****             }
 2892              		.loc 1 461 17 is_stmt 1 view .LVU780
 461:nanopb/pb_decode.c ****             }
 2893              		.loc 1 461 67 is_stmt 0 view .LVU781
 2894 0112 6368     		ldr	r3, [r4, #4]
 461:nanopb/pb_decode.c ****             }
 2895              		.loc 1 461 17 view .LVU782
 2896 0114 2169     		ldr	r1, [r4, #16]
 2897 0116 D3F80600 		ldr	r0, [r3, #6]	@ unaligned
 2898 011a FFF7FEFF 		bl	pb_message_set_to_defaults
 2899              	.LVL258:
 2900 011e 89E7     		b	.L275
 2901              	.LVL259:
 2902              	.L261:
 466:nanopb/pb_decode.c ****     }
 2903              		.loc 1 466 13 is_stmt 1 view .LVU783
 2904 0120 EB68     		ldr	r3, [r5, #12]
 2905 0122 13B1     		cbz	r3, .L284
 2906              	.L276:
 466:nanopb/pb_decode.c ****     }
 2907              		.loc 1 466 13 is_stmt 0 discriminator 4 view .LVU784
 2908 0124 EB60     		str	r3, [r5, #12]
 2909              	.LVL260:
 466:nanopb/pb_decode.c ****     }
 2910              		.loc 1 466 13 discriminator 4 view .LVU785
 2911 0126 0026     		movs	r6, #0
 2912 0128 91E7     		b	.L264
 2913              	.LVL261:
 2914              	.L284:
 466:nanopb/pb_decode.c ****     }
 2915              		.loc 1 466 13 view .LVU786
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 88


 2916 012a 034B     		ldr	r3, .L285+8
 2917 012c FAE7     		b	.L276
 2918              	.L286:
 2919 012e 00BF     		.align	2
 2920              	.L285:
 2921 0130 00000000 		.word	.LANCHOR0
 2922 0134 00000000 		.word	.LC12
 2923 0138 10000000 		.word	.LC13
 2924              		.cfi_endproc
 2925              	.LFE14:
 2927              		.section	.text.decode_callback_field,"ax",%progbits
 2928              		.align	1
 2929              		.syntax unified
 2930              		.thumb
 2931              		.thumb_func
 2932              		.fpu softvfp
 2934              	decode_callback_field:
 2935              	.LVL262:
 2936              	.LFB16:
 652:nanopb/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 2937              		.loc 1 652 1 is_stmt 1 view -0
 2938              		.cfi_startproc
 2939              		@ args = 0, pretend = 0, frame = 48
 2940              		@ frame_needed = 0, uses_anonymous_args = 0
 652:nanopb/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 2941              		.loc 1 652 1 is_stmt 0 view .LVU788
 2942 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2943              	.LCFI71:
 2944              		.cfi_def_cfa_offset 24
 2945              		.cfi_offset 4, -24
 2946              		.cfi_offset 5, -20
 2947              		.cfi_offset 6, -16
 2948              		.cfi_offset 7, -12
 2949              		.cfi_offset 8, -8
 2950              		.cfi_offset 14, -4
 2951 0004 8CB0     		sub	sp, sp, #48
 2952              	.LCFI72:
 2953              		.cfi_def_cfa_offset 72
 2954 0006 0746     		mov	r7, r0
 653:nanopb/pb_decode.c ****     
 2955              		.loc 1 653 5 is_stmt 1 view .LVU789
 653:nanopb/pb_decode.c ****     
 2956              		.loc 1 653 20 is_stmt 0 view .LVU790
 2957 0008 1469     		ldr	r4, [r2, #16]
 2958              	.LVL263:
 658:nanopb/pb_decode.c **** #endif
 2959              		.loc 1 658 5 is_stmt 1 view .LVU791
 661:nanopb/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2960              		.loc 1 661 5 view .LVU792
 661:nanopb/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2961              		.loc 1 661 8 is_stmt 0 view .LVU793
 2962 000a FCB1     		cbz	r4, .L288
 2963 000c 1546     		mov	r5, r2
 2964 000e 261D     		adds	r6, r4, #4
 2965              	.LVL264:
 661:nanopb/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2966              		.loc 1 661 46 discriminator 1 view .LVU794
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 89


 2967 0010 2368     		ldr	r3, [r4]
 661:nanopb/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2968              		.loc 1 661 27 discriminator 1 view .LVU795
 2969 0012 DBB1     		cbz	r3, .L288
 664:nanopb/pb_decode.c ****     {
 2970              		.loc 1 664 5 is_stmt 1 view .LVU796
 664:nanopb/pb_decode.c ****     {
 2971              		.loc 1 664 8 is_stmt 0 view .LVU797
 2972 0014 0229     		cmp	r1, #2
 2973 0016 21D0     		beq	.L298
 2974              	.LBB14:
 688:nanopb/pb_decode.c ****         pb_byte_t buffer[10];
 2975              		.loc 1 688 9 is_stmt 1 view .LVU798
 689:nanopb/pb_decode.c ****         size_t size = sizeof(buffer);
 2976              		.loc 1 689 9 view .LVU799
 690:nanopb/pb_decode.c ****         
 2977              		.loc 1 690 9 view .LVU800
 690:nanopb/pb_decode.c ****         
 2978              		.loc 1 690 16 is_stmt 0 view .LVU801
 2979 0018 0A23     		movs	r3, #10
 2980 001a 0493     		str	r3, [sp, #16]
 692:nanopb/pb_decode.c ****             return false;
 2981              		.loc 1 692 9 is_stmt 1 view .LVU802
 692:nanopb/pb_decode.c ****             return false;
 2982              		.loc 1 692 14 is_stmt 0 view .LVU803
 2983 001c 04AB     		add	r3, sp, #16
 2984 001e 05AA     		add	r2, sp, #20
 2985              	.LVL265:
 692:nanopb/pb_decode.c ****             return false;
 2986              		.loc 1 692 14 view .LVU804
 2987 0020 FFF7FEFF 		bl	read_raw_value
 2988              	.LVL266:
 692:nanopb/pb_decode.c ****             return false;
 2989              		.loc 1 692 12 view .LVU805
 2990 0024 0346     		mov	r3, r0
 2991 0026 A8B1     		cbz	r0, .L290
 694:nanopb/pb_decode.c ****         
 2992              		.loc 1 694 9 is_stmt 1 view .LVU806
 694:nanopb/pb_decode.c ****         
 2993              		.loc 1 694 21 is_stmt 0 view .LVU807
 2994 0028 E846     		mov	r8, sp
 2995 002a 049A     		ldr	r2, [sp, #16]
 2996 002c 05A9     		add	r1, sp, #20
 2997 002e 4046     		mov	r0, r8
 2998 0030 FFF7FEFF 		bl	pb_istream_from_buffer
 2999              	.LVL267:
 3000 0034 08AF     		add	r7, sp, #32
 3001              	.LVL268:
 694:nanopb/pb_decode.c ****         
 3002              		.loc 1 694 21 view .LVU808
 3003 0036 98E80F00 		ldm	r8, {r0, r1, r2, r3}
 3004 003a 87E80F00 		stm	r7, {r0, r1, r2, r3}
 696:nanopb/pb_decode.c ****     }
 3005              		.loc 1 696 9 is_stmt 1 view .LVU809
 696:nanopb/pb_decode.c ****     }
 3006              		.loc 1 696 32 is_stmt 0 view .LVU810
 3007 003e 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 90


 696:nanopb/pb_decode.c ****     }
 3008              		.loc 1 696 16 view .LVU811
 3009 0040 3246     		mov	r2, r6
 3010 0042 6968     		ldr	r1, [r5, #4]
 3011 0044 3846     		mov	r0, r7
 3012 0046 9847     		blx	r3
 3013              	.LVL269:
 3014 0048 0346     		mov	r3, r0
 3015 004a 03E0     		b	.L290
 3016              	.LVL270:
 3017              	.L288:
 696:nanopb/pb_decode.c ****     }
 3018              		.loc 1 696 16 view .LVU812
 3019              	.LBE14:
 662:nanopb/pb_decode.c ****     
 3020              		.loc 1 662 9 is_stmt 1 view .LVU813
 662:nanopb/pb_decode.c ****     
 3021              		.loc 1 662 16 is_stmt 0 view .LVU814
 3022 004c 3846     		mov	r0, r7
 3023              	.LVL271:
 662:nanopb/pb_decode.c ****     
 3024              		.loc 1 662 16 view .LVU815
 3025 004e FFF7FEFF 		bl	pb_skip_field
 3026              	.LVL272:
 662:nanopb/pb_decode.c ****     
 3027              		.loc 1 662 16 view .LVU816
 3028 0052 0346     		mov	r3, r0
 3029              	.LVL273:
 3030              	.L290:
 698:nanopb/pb_decode.c **** 
 3031              		.loc 1 698 1 discriminator 1 view .LVU817
 3032 0054 1846     		mov	r0, r3
 3033 0056 0CB0     		add	sp, sp, #48
 3034              	.LCFI73:
 3035              		.cfi_remember_state
 3036              		.cfi_def_cfa_offset 24
 3037              		@ sp needed
 3038 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3039              	.LVL274:
 3040              	.L298:
 3041              	.LCFI74:
 3042              		.cfi_restore_state
 3043              	.LBB15:
 666:nanopb/pb_decode.c ****         
 3044              		.loc 1 666 9 is_stmt 1 view .LVU818
 668:nanopb/pb_decode.c ****             return false;
 3045              		.loc 1 668 9 view .LVU819
 668:nanopb/pb_decode.c ****             return false;
 3046              		.loc 1 668 14 is_stmt 0 view .LVU820
 3047 005c 08A9     		add	r1, sp, #32
 3048              	.LVL275:
 668:nanopb/pb_decode.c ****             return false;
 3049              		.loc 1 668 14 view .LVU821
 3050 005e FFF7FEFF 		bl	pb_make_string_substream
 3051              	.LVL276:
 668:nanopb/pb_decode.c ****             return false;
 3052              		.loc 1 668 12 view .LVU822
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 91


 3053 0062 0346     		mov	r3, r0
 3054 0064 0028     		cmp	r0, #0
 3055 0066 F5D0     		beq	.L290
 3056              	.L295:
 671:nanopb/pb_decode.c ****         {
 3057              		.loc 1 671 9 is_stmt 1 view .LVU823
 673:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3058              		.loc 1 673 13 view .LVU824
 673:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3059              		.loc 1 673 34 is_stmt 0 view .LVU825
 3060 0068 2368     		ldr	r3, [r4]
 673:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3061              		.loc 1 673 18 view .LVU826
 3062 006a 3246     		mov	r2, r6
 3063 006c 6968     		ldr	r1, [r5, #4]
 3064 006e 08A8     		add	r0, sp, #32
 3065 0070 9847     		blx	r3
 3066              	.LVL277:
 673:nanopb/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3067              		.loc 1 673 16 view .LVU827
 3068 0072 0346     		mov	r3, r0
 3069 0074 40B1     		cbz	r0, .L299
 675:nanopb/pb_decode.c ****         
 3070              		.loc 1 675 27 view .LVU828
 3071 0076 0A9B     		ldr	r3, [sp, #40]
 675:nanopb/pb_decode.c ****         
 3072              		.loc 1 675 9 view .LVU829
 3073 0078 002B     		cmp	r3, #0
 3074 007a F5D1     		bne	.L295
 677:nanopb/pb_decode.c ****             return false;
 3075              		.loc 1 677 9 is_stmt 1 view .LVU830
 677:nanopb/pb_decode.c ****             return false;
 3076              		.loc 1 677 14 is_stmt 0 view .LVU831
 3077 007c 08A9     		add	r1, sp, #32
 3078 007e 3846     		mov	r0, r7
 3079 0080 FFF7FEFF 		bl	pb_close_string_substream
 3080              	.LVL278:
 3081 0084 0346     		mov	r3, r0
 3082 0086 E5E7     		b	.L290
 3083              	.L299:
 674:nanopb/pb_decode.c ****         } while (substream.bytes_left);
 3084              		.loc 1 674 17 is_stmt 1 view .LVU832
 3085 0088 FA68     		ldr	r2, [r7, #12]
 3086 008a 0AB1     		cbz	r2, .L300
 3087              	.L294:
 674:nanopb/pb_decode.c ****         } while (substream.bytes_left);
 3088              		.loc 1 674 17 is_stmt 0 discriminator 4 view .LVU833
 3089 008c FA60     		str	r2, [r7, #12]
 3090 008e E1E7     		b	.L290
 3091              	.L300:
 674:nanopb/pb_decode.c ****         } while (substream.bytes_left);
 3092              		.loc 1 674 17 view .LVU834
 3093 0090 004A     		ldr	r2, .L301
 3094 0092 FBE7     		b	.L294
 3095              	.L302:
 3096              		.align	2
 3097              	.L301:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 92


 3098 0094 00000000 		.word	.LC14
 3099              	.LBE15:
 3100              		.cfi_endproc
 3101              	.LFE16:
 3103              		.section	.text.decode_field,"ax",%progbits
 3104              		.align	1
 3105              		.syntax unified
 3106              		.thumb
 3107              		.thumb_func
 3108              		.fpu softvfp
 3110              	decode_field:
 3111              	.LVL279:
 3112              	.LFB17:
 701:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 3113              		.loc 1 701 1 is_stmt 1 view -0
 3114              		.cfi_startproc
 3115              		@ args = 0, pretend = 0, frame = 0
 3116              		@ frame_needed = 0, uses_anonymous_args = 0
 701:nanopb/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 3117              		.loc 1 701 1 is_stmt 0 view .LVU836
 3118 0000 08B5     		push	{r3, lr}
 3119              	.LCFI75:
 3120              		.cfi_def_cfa_offset 8
 3121              		.cfi_offset 3, -8
 3122              		.cfi_offset 14, -4
 712:nanopb/pb_decode.c ****     {
 3123              		.loc 1 712 5 is_stmt 1 view .LVU837
 712:nanopb/pb_decode.c ****     {
 3124              		.loc 1 712 13 is_stmt 0 view .LVU838
 3125 0002 5368     		ldr	r3, [r2, #4]
 3126 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3127 0006 03F0C003 		and	r3, r3, #192
 712:nanopb/pb_decode.c ****     {
 3128              		.loc 1 712 5 view .LVU839
 3129 000a 402B     		cmp	r3, #64
 3130 000c 0DD0     		beq	.L304
 3131 000e 802B     		cmp	r3, #128
 3132 0010 08D0     		beq	.L305
 3133 0012 23B1     		cbz	r3, .L310
 724:nanopb/pb_decode.c ****     }
 3134              		.loc 1 724 13 is_stmt 1 view .LVU840
 3135 0014 C368     		ldr	r3, [r0, #12]
 3136 0016 5BB1     		cbz	r3, .L311
 3137              	.L308:
 724:nanopb/pb_decode.c ****     }
 3138              		.loc 1 724 13 is_stmt 0 discriminator 4 view .LVU841
 3139 0018 C360     		str	r3, [r0, #12]
 3140 001a 0020     		movs	r0, #0
 3141              	.LVL280:
 724:nanopb/pb_decode.c ****     }
 3142              		.loc 1 724 13 discriminator 4 view .LVU842
 3143 001c 01E0     		b	.L307
 3144              	.LVL281:
 3145              	.L310:
 715:nanopb/pb_decode.c ****         
 3146              		.loc 1 715 13 is_stmt 1 view .LVU843
 715:nanopb/pb_decode.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 93


 3147              		.loc 1 715 20 is_stmt 0 view .LVU844
 3148 001e FFF7FEFF 		bl	decode_static_field
 3149              	.LVL282:
 3150              	.L307:
 726:nanopb/pb_decode.c **** 
 3151              		.loc 1 726 1 view .LVU845
 3152 0022 08BD     		pop	{r3, pc}
 3153              	.LVL283:
 3154              	.L305:
 718:nanopb/pb_decode.c ****         
 3155              		.loc 1 718 13 is_stmt 1 view .LVU846
 718:nanopb/pb_decode.c ****         
 3156              		.loc 1 718 20 is_stmt 0 view .LVU847
 3157 0024 FFF7FEFF 		bl	decode_pointer_field
 3158              	.LVL284:
 718:nanopb/pb_decode.c ****         
 3159              		.loc 1 718 20 view .LVU848
 3160 0028 FBE7     		b	.L307
 3161              	.LVL285:
 3162              	.L304:
 721:nanopb/pb_decode.c ****         
 3163              		.loc 1 721 13 is_stmt 1 view .LVU849
 721:nanopb/pb_decode.c ****         
 3164              		.loc 1 721 20 is_stmt 0 view .LVU850
 3165 002a FFF7FEFF 		bl	decode_callback_field
 3166              	.LVL286:
 721:nanopb/pb_decode.c ****         
 3167              		.loc 1 721 20 view .LVU851
 3168 002e F8E7     		b	.L307
 3169              	.LVL287:
 3170              	.L311:
 724:nanopb/pb_decode.c ****     }
 3171              		.loc 1 724 13 view .LVU852
 3172 0030 004B     		ldr	r3, .L312
 3173 0032 F1E7     		b	.L308
 3174              	.L313:
 3175              		.align	2
 3176              	.L312:
 3177 0034 10000000 		.word	.LC13
 3178              		.cfi_endproc
 3179              	.LFE17:
 3181              		.section	.text.default_extension_decoder,"ax",%progbits
 3182              		.align	1
 3183              		.syntax unified
 3184              		.thumb
 3185              		.thumb_func
 3186              		.fpu softvfp
 3188              	default_extension_decoder:
 3189              	.LVL288:
 3190              	.LFB19:
 751:nanopb/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 3191              		.loc 1 751 1 is_stmt 1 view -0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 24
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
 751:nanopb/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 3195              		.loc 1 751 1 is_stmt 0 view .LVU854
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 94


 3196 0000 70B5     		push	{r4, r5, r6, lr}
 3197              	.LCFI76:
 3198              		.cfi_def_cfa_offset 16
 3199              		.cfi_offset 4, -16
 3200              		.cfi_offset 5, -12
 3201              		.cfi_offset 6, -8
 3202              		.cfi_offset 14, -4
 3203 0002 86B0     		sub	sp, sp, #24
 3204              	.LCFI77:
 3205              		.cfi_def_cfa_offset 40
 752:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 3206              		.loc 1 752 5 is_stmt 1 view .LVU855
 752:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 3207              		.loc 1 752 59 is_stmt 0 view .LVU856
 3208 0004 0C68     		ldr	r4, [r1]
 752:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 3209              		.loc 1 752 23 view .LVU857
 3210 0006 A468     		ldr	r4, [r4, #8]
 3211              	.LVL289:
 753:nanopb/pb_decode.c ****     
 3212              		.loc 1 753 5 is_stmt 1 view .LVU858
 755:nanopb/pb_decode.c ****         return true;
 3213              		.loc 1 755 5 view .LVU859
 755:nanopb/pb_decode.c ****         return true;
 3214              		.loc 1 755 14 is_stmt 0 view .LVU860
 3215 0008 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 3216              	.LVL290:
 755:nanopb/pb_decode.c ****         return true;
 3217              		.loc 1 755 8 view .LVU861
 3218 000a 9442     		cmp	r4, r2
 3219 000c 02D0     		beq	.L318
 756:nanopb/pb_decode.c ****     
 3220              		.loc 1 756 16 view .LVU862
 3221 000e 0120     		movs	r0, #1
 3222              	.LVL291:
 3223              	.L315:
 761:nanopb/pb_decode.c **** 
 3224              		.loc 1 761 1 view .LVU863
 3225 0010 06B0     		add	sp, sp, #24
 3226              	.LCFI78:
 3227              		.cfi_remember_state
 3228              		.cfi_def_cfa_offset 16
 3229              		@ sp needed
 3230 0012 70BD     		pop	{r4, r5, r6, pc}
 3231              	.LVL292:
 3232              	.L318:
 3233              	.LCFI79:
 3234              		.cfi_restore_state
 761:nanopb/pb_decode.c **** 
 3235              		.loc 1 761 1 view .LVU864
 3236 0014 1E46     		mov	r6, r3
 3237 0016 0C46     		mov	r4, r1
 3238 0018 0546     		mov	r5, r0
 758:nanopb/pb_decode.c ****     extension->found = true;
 3239              		.loc 1 758 5 is_stmt 1 view .LVU865
 3240 001a 6846     		mov	r0, sp
 3241              	.LVL293:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 95


 758:nanopb/pb_decode.c ****     extension->found = true;
 3242              		.loc 1 758 5 is_stmt 0 view .LVU866
 3243 001c FFF7FEFF 		bl	iter_from_extension
 3244              	.LVL294:
 759:nanopb/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 3245              		.loc 1 759 5 is_stmt 1 view .LVU867
 759:nanopb/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 3246              		.loc 1 759 22 is_stmt 0 view .LVU868
 3247 0020 0123     		movs	r3, #1
 3248 0022 2373     		strb	r3, [r4, #12]
 760:nanopb/pb_decode.c **** }
 3249              		.loc 1 760 5 is_stmt 1 view .LVU869
 760:nanopb/pb_decode.c **** }
 3250              		.loc 1 760 12 is_stmt 0 view .LVU870
 3251 0024 6A46     		mov	r2, sp
 3252 0026 3146     		mov	r1, r6
 3253 0028 2846     		mov	r0, r5
 3254 002a FFF7FEFF 		bl	decode_field
 3255              	.LVL295:
 3256 002e EFE7     		b	.L315
 3257              		.cfi_endproc
 3258              	.LFE19:
 3260              		.section	.text.decode_extension,"ax",%progbits
 3261              		.align	1
 3262              		.syntax unified
 3263              		.thumb
 3264              		.thumb_func
 3265              		.fpu softvfp
 3267              	decode_extension:
 3268              	.LVL296:
 3269              	.LFB20:
 767:nanopb/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 3270              		.loc 1 767 1 is_stmt 1 view -0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
 767:nanopb/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 3274              		.loc 1 767 1 is_stmt 0 view .LVU872
 3275 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3276              	.LCFI80:
 3277              		.cfi_def_cfa_offset 32
 3278              		.cfi_offset 3, -32
 3279              		.cfi_offset 4, -28
 3280              		.cfi_offset 5, -24
 3281              		.cfi_offset 6, -20
 3282              		.cfi_offset 7, -16
 3283              		.cfi_offset 8, -12
 3284              		.cfi_offset 9, -8
 3285              		.cfi_offset 14, -4
 3286 0004 0646     		mov	r6, r0
 3287 0006 8946     		mov	r9, r1
 3288 0008 9046     		mov	r8, r2
 768:nanopb/pb_decode.c ****     size_t pos = stream->bytes_left;
 3289              		.loc 1 768 5 is_stmt 1 view .LVU873
 768:nanopb/pb_decode.c ****     size_t pos = stream->bytes_left;
 3290              		.loc 1 768 63 is_stmt 0 view .LVU874
 3291 000a 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 96


 3292              	.LVL297:
 768:nanopb/pb_decode.c ****     size_t pos = stream->bytes_left;
 3293              		.loc 1 768 21 view .LVU875
 3294 000c 1C68     		ldr	r4, [r3]
 3295              	.LVL298:
 769:nanopb/pb_decode.c ****     
 3296              		.loc 1 769 5 is_stmt 1 view .LVU876
 769:nanopb/pb_decode.c ****     
 3297              		.loc 1 769 12 is_stmt 0 view .LVU877
 3298 000e 8768     		ldr	r7, [r0, #8]
 3299              	.LVL299:
 771:nanopb/pb_decode.c ****     {
 3300              		.loc 1 771 5 is_stmt 1 view .LVU878
 771:nanopb/pb_decode.c ****     {
 3301              		.loc 1 771 11 is_stmt 0 view .LVU879
 3302 0010 07E0     		b	.L320
 3303              	.LVL300:
 3304              	.L321:
 3305              	.LBB16:
 777:nanopb/pb_decode.c **** 
 3306              		.loc 1 777 13 is_stmt 1 view .LVU880
 777:nanopb/pb_decode.c **** 
 3307              		.loc 1 777 22 is_stmt 0 view .LVU881
 3308 0012 4346     		mov	r3, r8
 3309 0014 4A46     		mov	r2, r9
 3310 0016 2146     		mov	r1, r4
 3311 0018 3046     		mov	r0, r6
 3312 001a FFF7FEFF 		bl	default_extension_decoder
 3313              	.LVL301:
 3314              	.L322:
 779:nanopb/pb_decode.c ****             return false;
 3315              		.loc 1 779 9 is_stmt 1 view .LVU882
 779:nanopb/pb_decode.c ****             return false;
 3316              		.loc 1 779 12 is_stmt 0 view .LVU883
 3317 001e 88B1     		cbz	r0, .L323
 782:nanopb/pb_decode.c ****     }
 3318              		.loc 1 782 9 is_stmt 1 view .LVU884
 782:nanopb/pb_decode.c ****     }
 3319              		.loc 1 782 19 is_stmt 0 view .LVU885
 3320 0020 A468     		ldr	r4, [r4, #8]
 3321              	.LVL302:
 3322              	.L320:
 782:nanopb/pb_decode.c ****     }
 3323              		.loc 1 782 19 view .LVU886
 3324              	.LBE16:
 771:nanopb/pb_decode.c ****     {
 3325              		.loc 1 771 11 view .LVU887
 3326 0022 74B1     		cbz	r4, .L325
 771:nanopb/pb_decode.c ****     {
 3327              		.loc 1 771 46 discriminator 1 view .LVU888
 3328 0024 B368     		ldr	r3, [r6, #8]
 771:nanopb/pb_decode.c ****     {
 3329              		.loc 1 771 30 discriminator 1 view .LVU889
 3330 0026 BB42     		cmp	r3, r7
 3331 0028 09D1     		bne	.L327
 3332              	.LBB17:
 773:nanopb/pb_decode.c ****         if (extension->type->decode)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 97


 3333              		.loc 1 773 9 is_stmt 1 view .LVU890
 774:nanopb/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3334              		.loc 1 774 9 view .LVU891
 774:nanopb/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3335              		.loc 1 774 22 is_stmt 0 view .LVU892
 3336 002a 2368     		ldr	r3, [r4]
 774:nanopb/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3337              		.loc 1 774 28 view .LVU893
 3338 002c 1D68     		ldr	r5, [r3]
 774:nanopb/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3339              		.loc 1 774 12 view .LVU894
 3340 002e 002D     		cmp	r5, #0
 3341 0030 EFD0     		beq	.L321
 775:nanopb/pb_decode.c ****         else
 3342              		.loc 1 775 13 is_stmt 1 view .LVU895
 775:nanopb/pb_decode.c ****         else
 3343              		.loc 1 775 22 is_stmt 0 view .LVU896
 3344 0032 4346     		mov	r3, r8
 3345 0034 4A46     		mov	r2, r9
 3346 0036 2146     		mov	r1, r4
 3347 0038 3046     		mov	r0, r6
 3348 003a A847     		blx	r5
 3349              	.LVL303:
 775:nanopb/pb_decode.c ****         else
 3350              		.loc 1 775 22 view .LVU897
 3351 003c EFE7     		b	.L322
 3352              	.LVL304:
 3353              	.L327:
 775:nanopb/pb_decode.c ****         else
 3354              		.loc 1 775 22 view .LVU898
 3355              	.LBE17:
 785:nanopb/pb_decode.c **** }
 3356              		.loc 1 785 12 view .LVU899
 3357 003e 0120     		movs	r0, #1
 3358 0040 00E0     		b	.L323
 3359              	.L325:
 785:nanopb/pb_decode.c **** }
 3360              		.loc 1 785 12 view .LVU900
 3361 0042 0120     		movs	r0, #1
 3362              	.L323:
 786:nanopb/pb_decode.c **** 
 3363              		.loc 1 786 1 view .LVU901
 3364 0044 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 786:nanopb/pb_decode.c **** 
 3365              		.loc 1 786 1 view .LVU902
 3366              		.cfi_endproc
 3367              	.LFE20:
 3369              		.section	.text.pb_decode_noinit,"ax",%progbits
 3370              		.align	1
 3371              		.global	pb_decode_noinit
 3372              		.syntax unified
 3373              		.thumb
 3374              		.thumb_func
 3375              		.fpu softvfp
 3377              	pb_decode_noinit:
 3378              	.LVL305:
 3379              	.LFB24:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 98


 895:nanopb/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 3380              		.loc 1 895 1 is_stmt 1 view -0
 3381              		.cfi_startproc
 3382              		@ args = 0, pretend = 0, frame = 40
 3383              		@ frame_needed = 0, uses_anonymous_args = 0
 895:nanopb/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 3384              		.loc 1 895 1 is_stmt 0 view .LVU904
 3385 0000 70B5     		push	{r4, r5, r6, lr}
 3386              	.LCFI81:
 3387              		.cfi_def_cfa_offset 16
 3388              		.cfi_offset 4, -16
 3389              		.cfi_offset 5, -12
 3390              		.cfi_offset 6, -8
 3391              		.cfi_offset 14, -4
 3392 0002 8AB0     		sub	sp, sp, #40
 3393              	.LCFI82:
 3394              		.cfi_def_cfa_offset 56
 3395 0004 0446     		mov	r4, r0
 896:nanopb/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 3396              		.loc 1 896 5 is_stmt 1 view .LVU905
 896:nanopb/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 3397              		.loc 1 896 14 is_stmt 0 view .LVU906
 3398 0006 0025     		movs	r5, #0
 3399 0008 0895     		str	r5, [sp, #32]
 3400 000a 0995     		str	r5, [sp, #36]
 897:nanopb/pb_decode.c ****     uint32_t extension_range_start = 0;
 3401              		.loc 1 897 5 is_stmt 1 view .LVU907
 3402              	.LVL306:
 898:nanopb/pb_decode.c ****     pb_field_iter_t iter;
 3403              		.loc 1 898 5 view .LVU908
 899:nanopb/pb_decode.c ****     
 3404              		.loc 1 899 5 view .LVU909
 903:nanopb/pb_decode.c ****     
 3405              		.loc 1 903 5 view .LVU910
 903:nanopb/pb_decode.c ****     
 3406              		.loc 1 903 11 is_stmt 0 view .LVU911
 3407 000c 02A8     		add	r0, sp, #8
 3408              	.LVL307:
 903:nanopb/pb_decode.c ****     
 3409              		.loc 1 903 11 view .LVU912
 3410 000e FFF7FEFF 		bl	pb_field_iter_begin
 3411              	.LVL308:
 905:nanopb/pb_decode.c ****     {
 3412              		.loc 1 905 5 is_stmt 1 view .LVU913
 905:nanopb/pb_decode.c ****     {
 3413              		.loc 1 905 11 is_stmt 0 view .LVU914
 3414 0012 52E0     		b	.L329
 3415              	.LVL309:
 3416              	.L356:
 3417              	.LBB18:
 913:nanopb/pb_decode.c ****                 break;
 3418              		.loc 1 913 13 is_stmt 1 view .LVU915
 913:nanopb/pb_decode.c ****                 break;
 3419              		.loc 1 913 17 is_stmt 0 view .LVU916
 3420 0014 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 913:nanopb/pb_decode.c ****                 break;
 3421              		.loc 1 913 16 view .LVU917
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 99


 3422 0018 03B3     		cbz	r3, .L332
 3423              	.LVL310:
 3424              	.L342:
 913:nanopb/pb_decode.c ****                 break;
 3425              		.loc 1 913 16 view .LVU918
 3426              	.LBE18:
 3427              	.LBB21:
 967:nanopb/pb_decode.c ****         pb_type_t last_type;
 3428              		.loc 1 967 9 is_stmt 1 discriminator 1 view .LVU919
 968:nanopb/pb_decode.c ****         unsigned i;
 3429              		.loc 1 968 9 discriminator 1 view .LVU920
 969:nanopb/pb_decode.c ****         do {
 3430              		.loc 1 969 9 discriminator 1 view .LVU921
 970:nanopb/pb_decode.c ****             req_field_count = iter.required_field_index;
 3431              		.loc 1 970 9 discriminator 1 view .LVU922
 971:nanopb/pb_decode.c ****             last_type = iter.pos->type;
 3432              		.loc 1 971 13 discriminator 1 view .LVU923
 971:nanopb/pb_decode.c ****             last_type = iter.pos->type;
 3433              		.loc 1 971 29 is_stmt 0 discriminator 1 view .LVU924
 3434 001a 049D     		ldr	r5, [sp, #16]
 3435              	.LVL311:
 972:nanopb/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3436              		.loc 1 972 13 is_stmt 1 discriminator 1 view .LVU925
 972:nanopb/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3437              		.loc 1 972 29 is_stmt 0 discriminator 1 view .LVU926
 3438 001c 039B     		ldr	r3, [sp, #12]
 972:nanopb/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3439              		.loc 1 972 23 discriminator 1 view .LVU927
 3440 001e 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
 3441              	.LVL312:
 973:nanopb/pb_decode.c ****         
 3442              		.loc 1 973 18 discriminator 1 view .LVU928
 3443 0020 02A8     		add	r0, sp, #8
 3444 0022 FFF7FEFF 		bl	pb_field_iter_next
 3445              	.LVL313:
 973:nanopb/pb_decode.c ****         
 3446              		.loc 1 973 9 discriminator 1 view .LVU929
 3447 0026 0246     		mov	r2, r0
 3448 0028 0028     		cmp	r0, #0
 3449 002a F6D1     		bne	.L342
 976:nanopb/pb_decode.c ****             req_field_count++;
 3450              		.loc 1 976 9 is_stmt 1 view .LVU930
 976:nanopb/pb_decode.c ****             req_field_count++;
 3451              		.loc 1 976 12 is_stmt 0 view .LVU931
 3452 002c 16F0300F 		tst	r6, #48
 3453 0030 03D1     		bne	.L343
 976:nanopb/pb_decode.c ****             req_field_count++;
 3454              		.loc 1 976 61 discriminator 1 view .LVU932
 3455 0032 039B     		ldr	r3, [sp, #12]
 976:nanopb/pb_decode.c ****             req_field_count++;
 3456              		.loc 1 976 65 discriminator 1 view .LVU933
 3457 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976:nanopb/pb_decode.c ****             req_field_count++;
 3458              		.loc 1 976 54 discriminator 1 view .LVU934
 3459 0036 03B1     		cbz	r3, .L343
 977:nanopb/pb_decode.c ****         
 3460              		.loc 1 977 13 is_stmt 1 view .LVU935
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 100


 977:nanopb/pb_decode.c ****         
 3461              		.loc 1 977 28 is_stmt 0 view .LVU936
 3462 0038 0135     		adds	r5, r5, #1
 3463              	.LVL314:
 3464              	.L343:
 979:nanopb/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
 3465              		.loc 1 979 9 is_stmt 1 view .LVU937
 979:nanopb/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
 3466              		.loc 1 979 12 is_stmt 0 view .LVU938
 3467 003a 402D     		cmp	r5, #64
 3468 003c 61D8     		bhi	.L351
 982:nanopb/pb_decode.c ****         {
 3469              		.loc 1 982 9 is_stmt 1 view .LVU939
 982:nanopb/pb_decode.c ****         {
 3470              		.loc 1 982 12 is_stmt 0 view .LVU940
 3471 003e 002D     		cmp	r5, #0
 3472 0040 60D1     		bne	.L344
 3473              	.LBE21:
1003:nanopb/pb_decode.c **** }
 3474              		.loc 1 1003 12 view .LVU941
 3475 0042 0122     		movs	r2, #1
 3476 0044 0BE0     		b	.L340
 3477              	.LVL315:
 3478              	.L350:
 3479              	.LBB22:
 925:nanopb/pb_decode.c ****                 else
 3480              		.loc 1 925 43 view .LVU942
 3481 0046 4FF0FF35 		mov	r5, #-1
 3482              	.LVL316:
 3483              	.L335:
 929:nanopb/pb_decode.c ****                 {
 3484              		.loc 1 929 17 is_stmt 1 view .LVU943
 929:nanopb/pb_decode.c ****                 {
 3485              		.loc 1 929 25 is_stmt 0 view .LVU944
 3486 004a 0199     		ldr	r1, [sp, #4]
 929:nanopb/pb_decode.c ****                 {
 3487              		.loc 1 929 20 view .LVU945
 3488 004c A942     		cmp	r1, r5
 3489 004e 09D2     		bcs	.L355
 3490              	.L334:
 945:nanopb/pb_decode.c ****                 return false;
 3491              		.loc 1 945 13 is_stmt 1 view .LVU946
 945:nanopb/pb_decode.c ****                 return false;
 3492              		.loc 1 945 18 is_stmt 0 view .LVU947
 3493 0050 9DF80210 		ldrb	r1, [sp, #2]	@ zero_extendqisi2
 3494 0054 2046     		mov	r0, r4
 3495 0056 FFF7FEFF 		bl	pb_skip_field
 3496              	.LVL317:
 945:nanopb/pb_decode.c ****                 return false;
 3497              		.loc 1 945 16 view .LVU948
 3498 005a 70BB     		cbnz	r0, .L329
 3499              	.L332:
 916:nanopb/pb_decode.c ****         }
 3500              		.loc 1 916 24 discriminator 1 view .LVU949
 3501 005c 0022     		movs	r2, #0
 3502              	.LVL318:
 3503              	.L340:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 101


 916:nanopb/pb_decode.c ****         }
 3504              		.loc 1 916 24 discriminator 1 view .LVU950
 3505              	.LBE22:
1004:nanopb/pb_decode.c **** 
 3506              		.loc 1 1004 1 view .LVU951
 3507 005e 1046     		mov	r0, r2
 3508 0060 0AB0     		add	sp, sp, #40
 3509              	.LCFI83:
 3510              		.cfi_remember_state
 3511              		.cfi_def_cfa_offset 16
 3512              		@ sp needed
 3513 0062 70BD     		pop	{r4, r5, r6, pc}
 3514              	.LVL319:
 3515              	.L355:
 3516              	.LCFI84:
 3517              		.cfi_restore_state
 3518              	.LBB23:
 3519              	.LBB19:
 931:nanopb/pb_decode.c ****                 
 3520              		.loc 1 931 21 is_stmt 1 view .LVU952
 931:nanopb/pb_decode.c ****                 
 3521              		.loc 1 931 28 is_stmt 0 view .LVU953
 3522 0064 A668     		ldr	r6, [r4, #8]
 3523              	.LVL320:
 933:nanopb/pb_decode.c ****                         return false;
 3524              		.loc 1 933 21 is_stmt 1 view .LVU954
 933:nanopb/pb_decode.c ****                         return false;
 3525              		.loc 1 933 26 is_stmt 0 view .LVU955
 3526 0066 02AB     		add	r3, sp, #8
 3527 0068 9DF80220 		ldrb	r2, [sp, #2]	@ zero_extendqisi2
 3528 006c 2046     		mov	r0, r4
 3529 006e FFF7FEFF 		bl	decode_extension
 3530              	.LVL321:
 933:nanopb/pb_decode.c ****                         return false;
 3531              		.loc 1 933 24 view .LVU956
 3532 0072 0028     		cmp	r0, #0
 3533 0074 F2D0     		beq	.L332
 936:nanopb/pb_decode.c ****                     {
 3534              		.loc 1 936 21 is_stmt 1 view .LVU957
 936:nanopb/pb_decode.c ****                     {
 3535              		.loc 1 936 38 is_stmt 0 view .LVU958
 3536 0076 A368     		ldr	r3, [r4, #8]
 936:nanopb/pb_decode.c ****                     {
 3537              		.loc 1 936 24 view .LVU959
 3538 0078 B342     		cmp	r3, r6
 3539 007a E9D0     		beq	.L334
 3540 007c 1DE0     		b	.L329
 3541              	.LVL322:
 3542              	.L333:
 936:nanopb/pb_decode.c ****                     {
 3543              		.loc 1 936 24 view .LVU960
 3544              	.LBE19:
 950:nanopb/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3545              		.loc 1 950 9 is_stmt 1 view .LVU961
 950:nanopb/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3546              		.loc 1 950 13 is_stmt 0 view .LVU962
 3547 007e 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 102


 3548 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 950:nanopb/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3549              		.loc 1 950 12 view .LVU963
 3550 0082 13F0300F 		tst	r3, #48
 3551 0086 10D1     		bne	.L337
 951:nanopb/pb_decode.c ****         {
 3552              		.loc 1 951 20 view .LVU964
 3553 0088 049B     		ldr	r3, [sp, #16]
 951:nanopb/pb_decode.c ****         {
 3554              		.loc 1 951 13 view .LVU965
 3555 008a 3F2B     		cmp	r3, #63
 3556 008c 0DD8     		bhi	.L337
 3557              	.LBB20:
 953:nanopb/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3558              		.loc 1 953 13 is_stmt 1 view .LVU966
 953:nanopb/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3559              		.loc 1 953 71 is_stmt 0 view .LVU967
 3560 008e 03F01F01 		and	r1, r3, #31
 953:nanopb/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3561              		.loc 1 953 22 view .LVU968
 3562 0092 0122     		movs	r2, #1
 3563 0094 02FA01F1 		lsl	r1, r2, r1
 3564              	.LVL323:
 954:nanopb/pb_decode.c ****         }
 3565              		.loc 1 954 13 is_stmt 1 view .LVU969
 954:nanopb/pb_decode.c ****         }
 3566              		.loc 1 954 57 is_stmt 0 view .LVU970
 3567 0098 5B09     		lsrs	r3, r3, #5
 3568 009a 0AAA     		add	r2, sp, #40
 3569 009c 02EB8303 		add	r3, r2, r3, lsl #2
 3570 00a0 53F8082C 		ldr	r2, [r3, #-8]
 3571 00a4 0A43     		orrs	r2, r2, r1
 3572 00a6 43F8082C 		str	r2, [r3, #-8]
 3573              	.LVL324:
 3574              	.L337:
 954:nanopb/pb_decode.c ****         }
 3575              		.loc 1 954 57 view .LVU971
 3576              	.LBE20:
 957:nanopb/pb_decode.c ****             return false;
 3577              		.loc 1 957 9 is_stmt 1 view .LVU972
 957:nanopb/pb_decode.c ****             return false;
 3578              		.loc 1 957 14 is_stmt 0 view .LVU973
 3579 00aa 02AA     		add	r2, sp, #8
 3580 00ac 9DF80210 		ldrb	r1, [sp, #2]	@ zero_extendqisi2
 3581 00b0 2046     		mov	r0, r4
 3582 00b2 FFF7FEFF 		bl	decode_field
 3583              	.LVL325:
 957:nanopb/pb_decode.c ****             return false;
 3584              		.loc 1 957 12 view .LVU974
 3585 00b6 0028     		cmp	r0, #0
 3586 00b8 D0D0     		beq	.L332
 3587              	.LVL326:
 3588              	.L329:
 957:nanopb/pb_decode.c ****             return false;
 3589              		.loc 1 957 12 view .LVU975
 3590              	.LBE23:
 905:nanopb/pb_decode.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 103


 3591              		.loc 1 905 18 view .LVU976
 3592 00ba A368     		ldr	r3, [r4, #8]
 905:nanopb/pb_decode.c ****     {
 3593              		.loc 1 905 11 view .LVU977
 3594 00bc 002B     		cmp	r3, #0
 3595 00be ACD0     		beq	.L342
 3596              	.LBB24:
 907:nanopb/pb_decode.c ****         pb_wire_type_t wire_type;
 3597              		.loc 1 907 9 is_stmt 1 view .LVU978
 908:nanopb/pb_decode.c ****         bool eof;
 3598              		.loc 1 908 9 view .LVU979
 909:nanopb/pb_decode.c ****         
 3599              		.loc 1 909 9 view .LVU980
 911:nanopb/pb_decode.c ****         {
 3600              		.loc 1 911 9 view .LVU981
 911:nanopb/pb_decode.c ****         {
 3601              		.loc 1 911 14 is_stmt 0 view .LVU982
 3602 00c0 0DF10303 		add	r3, sp, #3
 3603 00c4 01AA     		add	r2, sp, #4
 3604 00c6 0DF10201 		add	r1, sp, #2
 3605 00ca 2046     		mov	r0, r4
 3606 00cc FFF7FEFF 		bl	pb_decode_tag
 3607              	.LVL327:
 911:nanopb/pb_decode.c ****         {
 3608              		.loc 1 911 12 view .LVU983
 3609 00d0 0028     		cmp	r0, #0
 3610 00d2 9FD0     		beq	.L356
 919:nanopb/pb_decode.c ****         {
 3611              		.loc 1 919 9 is_stmt 1 view .LVU984
 919:nanopb/pb_decode.c ****         {
 3612              		.loc 1 919 14 is_stmt 0 view .LVU985
 3613 00d4 0199     		ldr	r1, [sp, #4]
 3614 00d6 02A8     		add	r0, sp, #8
 3615 00d8 FFF7FEFF 		bl	pb_field_iter_find
 3616              	.LVL328:
 919:nanopb/pb_decode.c ****         {
 3617              		.loc 1 919 12 view .LVU986
 3618 00dc 0028     		cmp	r0, #0
 3619 00de CED1     		bne	.L333
 922:nanopb/pb_decode.c ****             {
 3620              		.loc 1 922 13 is_stmt 1 view .LVU987
 922:nanopb/pb_decode.c ****             {
 3621              		.loc 1 922 21 is_stmt 0 view .LVU988
 3622 00e0 019B     		ldr	r3, [sp, #4]
 922:nanopb/pb_decode.c ****             {
 3623              		.loc 1 922 16 view .LVU989
 3624 00e2 AB42     		cmp	r3, r5
 3625 00e4 B4D3     		bcc	.L334
 924:nanopb/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3626              		.loc 1 924 17 is_stmt 1 view .LVU990
 924:nanopb/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3627              		.loc 1 924 22 is_stmt 0 view .LVU991
 3628 00e6 02A8     		add	r0, sp, #8
 3629 00e8 FFF7FEFF 		bl	find_extension_field
 3630              	.LVL329:
 924:nanopb/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3631              		.loc 1 924 20 view .LVU992
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 104


 3632 00ec 0028     		cmp	r0, #0
 3633 00ee AAD0     		beq	.L350
 927:nanopb/pb_decode.c ****                 
 3634              		.loc 1 927 21 is_stmt 1 view .LVU993
 927:nanopb/pb_decode.c ****                 
 3635              		.loc 1 927 49 is_stmt 0 view .LVU994
 3636 00f0 039B     		ldr	r3, [sp, #12]
 927:nanopb/pb_decode.c ****                 
 3637              		.loc 1 927 53 view .LVU995
 3638 00f2 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 3639              	.LVL330:
 927:nanopb/pb_decode.c ****                 
 3640              		.loc 1 927 53 view .LVU996
 3641 00f4 A9E7     		b	.L335
 3642              	.LVL331:
 3643              	.L359:
 927:nanopb/pb_decode.c ****                 
 3644              		.loc 1 927 53 view .LVU997
 3645              	.LBE24:
 3646              	.LBB25:
 988:nanopb/pb_decode.c ****             }
 3647              		.loc 1 988 21 is_stmt 1 view .LVU998
 3648 00f6 E368     		ldr	r3, [r4, #12]
 3649              	.LVL332:
 988:nanopb/pb_decode.c ****             }
 3650              		.loc 1 988 21 is_stmt 0 view .LVU999
 3651 00f8 0BB1     		cbz	r3, .L357
 3652              	.L346:
 988:nanopb/pb_decode.c ****             }
 3653              		.loc 1 988 21 discriminator 4 view .LVU1000
 3654 00fa E360     		str	r3, [r4, #12]
 3655 00fc AFE7     		b	.L340
 3656              	.L357:
 988:nanopb/pb_decode.c ****             }
 3657              		.loc 1 988 21 view .LVU1001
 3658 00fe 154B     		ldr	r3, .L361
 3659 0100 FBE7     		b	.L346
 3660              	.LVL333:
 3661              	.L351:
 980:nanopb/pb_decode.c **** 
 3662              		.loc 1 980 29 view .LVU1002
 3663 0102 4025     		movs	r5, #64
 3664              	.LVL334:
 3665              	.L344:
 980:nanopb/pb_decode.c **** 
 3666              		.loc 1 980 29 discriminator 1 view .LVU1003
 3667 0104 0023     		movs	r3, #0
 3668              	.L347:
 3669              	.LVL335:
 985:nanopb/pb_decode.c ****             {
 3670              		.loc 1 985 46 discriminator 1 view .LVU1004
 3671 0106 6909     		lsrs	r1, r5, #5
 985:nanopb/pb_decode.c ****             {
 3672              		.loc 1 985 13 discriminator 1 view .LVU1005
 3673 0108 9942     		cmp	r1, r3
 3674 010a 09D9     		bls	.L358
 987:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 105


 3675              		.loc 1 987 17 is_stmt 1 view .LVU1006
 987:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 3676              		.loc 1 987 32 is_stmt 0 view .LVU1007
 3677 010c 0AA9     		add	r1, sp, #40
 3678 010e 01EB8301 		add	r1, r1, r3, lsl #2
 3679 0112 51F8081C 		ldr	r1, [r1, #-8]
 987:nanopb/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 3680              		.loc 1 987 20 view .LVU1008
 3681 0116 B1F1FF3F 		cmp	r1, #-1
 3682 011a ECD1     		bne	.L359
 985:nanopb/pb_decode.c ****             {
 3683              		.loc 1 985 54 discriminator 2 view .LVU1009
 3684 011c 0133     		adds	r3, r3, #1
 3685              	.LVL336:
 985:nanopb/pb_decode.c ****             {
 3686              		.loc 1 985 54 discriminator 2 view .LVU1010
 3687 011e F2E7     		b	.L347
 3688              	.L358:
 992:nanopb/pb_decode.c ****             {
 3689              		.loc 1 992 13 is_stmt 1 view .LVU1011
 992:nanopb/pb_decode.c ****             {
 3690              		.loc 1 992 16 is_stmt 0 view .LVU1012
 3691 0120 15F01F05 		ands	r5, r5, #31
 3692 0124 12D0     		beq	.L352
 994:nanopb/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3693              		.loc 1 994 17 is_stmt 1 view .LVU1013
 994:nanopb/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3694              		.loc 1 994 32 is_stmt 0 view .LVU1014
 3695 0126 0AAB     		add	r3, sp, #40
 3696              	.LVL337:
 994:nanopb/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3697              		.loc 1 994 32 view .LVU1015
 3698 0128 03EB8101 		add	r1, r3, r1, lsl #2
 3699 012c 51F8081C 		ldr	r1, [r1, #-8]
 995:nanopb/pb_decode.c ****                 {
 3700              		.loc 1 995 37 view .LVU1016
 3701 0130 C5F12005 		rsb	r5, r5, #32
 995:nanopb/pb_decode.c ****                 {
 3702              		.loc 1 995 30 view .LVU1017
 3703 0134 4FF0FF33 		mov	r3, #-1
 3704 0138 23FA05F5 		lsr	r5, r3, r5
 994:nanopb/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3705              		.loc 1 994 20 view .LVU1018
 3706 013c A942     		cmp	r1, r5
 3707 013e 07D0     		beq	.L353
 997:nanopb/pb_decode.c ****                 }
 3708              		.loc 1 997 21 is_stmt 1 view .LVU1019
 3709 0140 E368     		ldr	r3, [r4, #12]
 3710 0142 0BB1     		cbz	r3, .L360
 3711              	.L349:
 997:nanopb/pb_decode.c ****                 }
 3712              		.loc 1 997 21 is_stmt 0 discriminator 4 view .LVU1020
 3713 0144 E360     		str	r3, [r4, #12]
 3714 0146 8AE7     		b	.L340
 3715              	.L360:
 997:nanopb/pb_decode.c ****                 }
 3716              		.loc 1 997 21 view .LVU1021
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 106


 3717 0148 024B     		ldr	r3, .L361
 3718 014a FBE7     		b	.L349
 3719              	.LVL338:
 3720              	.L352:
 997:nanopb/pb_decode.c ****                 }
 3721              		.loc 1 997 21 view .LVU1022
 3722              	.LBE25:
1003:nanopb/pb_decode.c **** }
 3723              		.loc 1 1003 12 view .LVU1023
 3724 014c 0122     		movs	r2, #1
 3725 014e 86E7     		b	.L340
 3726              	.LVL339:
 3727              	.L353:
1003:nanopb/pb_decode.c **** }
 3728              		.loc 1 1003 12 view .LVU1024
 3729 0150 0122     		movs	r2, #1
 3730 0152 84E7     		b	.L340
 3731              	.L362:
 3732              		.align	2
 3733              	.L361:
 3734 0154 00000000 		.word	.LC15
 3735              		.cfi_endproc
 3736              	.LFE24:
 3738              		.section	.text.pb_decode,"ax",%progbits
 3739              		.align	1
 3740              		.global	pb_decode
 3741              		.syntax unified
 3742              		.thumb
 3743              		.thumb_func
 3744              		.fpu softvfp
 3746              	pb_decode:
 3747              	.LVL340:
 3748              	.LFB25:
1007:nanopb/pb_decode.c ****     bool status;
 3749              		.loc 1 1007 1 is_stmt 1 view -0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 0
 3752              		@ frame_needed = 0, uses_anonymous_args = 0
1007:nanopb/pb_decode.c ****     bool status;
 3753              		.loc 1 1007 1 is_stmt 0 view .LVU1026
 3754 0000 70B5     		push	{r4, r5, r6, lr}
 3755              	.LCFI85:
 3756              		.cfi_def_cfa_offset 16
 3757              		.cfi_offset 4, -16
 3758              		.cfi_offset 5, -12
 3759              		.cfi_offset 6, -8
 3760              		.cfi_offset 14, -4
 3761 0002 0646     		mov	r6, r0
 3762 0004 0C46     		mov	r4, r1
 3763 0006 1546     		mov	r5, r2
1008:nanopb/pb_decode.c ****     pb_message_set_to_defaults(fields, dest_struct);
 3764              		.loc 1 1008 5 is_stmt 1 view .LVU1027
1009:nanopb/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
 3765              		.loc 1 1009 5 view .LVU1028
 3766 0008 1146     		mov	r1, r2
 3767              	.LVL341:
1009:nanopb/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 107


 3768              		.loc 1 1009 5 is_stmt 0 view .LVU1029
 3769 000a 2046     		mov	r0, r4
 3770              	.LVL342:
1009:nanopb/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
 3771              		.loc 1 1009 5 view .LVU1030
 3772 000c FFF7FEFF 		bl	pb_message_set_to_defaults
 3773              	.LVL343:
1010:nanopb/pb_decode.c ****     
 3774              		.loc 1 1010 5 is_stmt 1 view .LVU1031
1010:nanopb/pb_decode.c ****     
 3775              		.loc 1 1010 14 is_stmt 0 view .LVU1032
 3776 0010 2A46     		mov	r2, r5
 3777 0012 2146     		mov	r1, r4
 3778 0014 3046     		mov	r0, r6
 3779 0016 FFF7FEFF 		bl	pb_decode_noinit
 3780              	.LVL344:
1017:nanopb/pb_decode.c **** }
 3781              		.loc 1 1017 5 is_stmt 1 view .LVU1033
1018:nanopb/pb_decode.c **** 
 3782              		.loc 1 1018 1 is_stmt 0 view .LVU1034
 3783 001a 70BD     		pop	{r4, r5, r6, pc}
1018:nanopb/pb_decode.c **** 
 3784              		.loc 1 1018 1 view .LVU1035
 3785              		.cfi_endproc
 3786              	.LFE25:
 3788              		.section	.text.pb_dec_submessage,"ax",%progbits
 3789              		.align	1
 3790              		.syntax unified
 3791              		.thumb
 3792              		.thumb_func
 3793              		.fpu softvfp
 3795              	pb_dec_submessage:
 3796              	.LVL345:
 3797              	.LFB39:
1414:nanopb/pb_decode.c ****     bool status;
 3798              		.loc 1 1414 1 is_stmt 1 view -0
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 16
 3801              		@ frame_needed = 0, uses_anonymous_args = 0
1414:nanopb/pb_decode.c ****     bool status;
 3802              		.loc 1 1414 1 is_stmt 0 view .LVU1037
 3803 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3804              	.LCFI86:
 3805              		.cfi_def_cfa_offset 20
 3806              		.cfi_offset 4, -20
 3807              		.cfi_offset 5, -16
 3808              		.cfi_offset 6, -12
 3809              		.cfi_offset 7, -8
 3810              		.cfi_offset 14, -4
 3811 0002 85B0     		sub	sp, sp, #20
 3812              	.LCFI87:
 3813              		.cfi_def_cfa_offset 40
 3814 0004 0546     		mov	r5, r0
 3815 0006 0C46     		mov	r4, r1
 3816 0008 1746     		mov	r7, r2
1415:nanopb/pb_decode.c ****     pb_istream_t substream;
 3817              		.loc 1 1415 5 is_stmt 1 view .LVU1038
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 108


1416:nanopb/pb_decode.c ****     const pb_field_t* submsg_fields = (const pb_field_t*)field->ptr;
 3818              		.loc 1 1416 5 view .LVU1039
1417:nanopb/pb_decode.c ****     
 3819              		.loc 1 1417 5 view .LVU1040
1417:nanopb/pb_decode.c ****     
 3820              		.loc 1 1417 23 is_stmt 0 view .LVU1041
 3821 000a D1F80660 		ldr	r6, [r1, #6]	@ unaligned
 3822              	.LVL346:
1419:nanopb/pb_decode.c ****         return false;
 3823              		.loc 1 1419 5 is_stmt 1 view .LVU1042
1419:nanopb/pb_decode.c ****         return false;
 3824              		.loc 1 1419 10 is_stmt 0 view .LVU1043
 3825 000e 6946     		mov	r1, sp
 3826              	.LVL347:
1419:nanopb/pb_decode.c ****         return false;
 3827              		.loc 1 1419 10 view .LVU1044
 3828 0010 FFF7FEFF 		bl	pb_make_string_substream
 3829              	.LVL348:
1419:nanopb/pb_decode.c ****         return false;
 3830              		.loc 1 1419 8 view .LVU1045
 3831 0014 0346     		mov	r3, r0
 3832 0016 A0B1     		cbz	r0, .L366
1422:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3833              		.loc 1 1422 5 is_stmt 1 view .LVU1046
1422:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3834              		.loc 1 1422 14 is_stmt 0 view .LVU1047
 3835 0018 D4F80630 		ldr	r3, [r4, #6]	@ unaligned
1422:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3836              		.loc 1 1422 8 view .LVU1048
 3837 001c A3B1     		cbz	r3, .L372
1427:nanopb/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3838              		.loc 1 1427 5 is_stmt 1 view .LVU1049
1427:nanopb/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3839              		.loc 1 1427 9 is_stmt 0 view .LVU1050
 3840 001e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1427:nanopb/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3841              		.loc 1 1427 8 view .LVU1051
 3842 0020 03F03003 		and	r3, r3, #48
 3843 0024 202B     		cmp	r3, #32
 3844 0026 16D0     		beq	.L373
1430:nanopb/pb_decode.c ****     
 3845              		.loc 1 1430 9 is_stmt 1 view .LVU1052
1430:nanopb/pb_decode.c ****     
 3846              		.loc 1 1430 18 is_stmt 0 view .LVU1053
 3847 0028 3A46     		mov	r2, r7
 3848 002a 3146     		mov	r1, r6
 3849 002c 6846     		mov	r0, sp
 3850 002e FFF7FEFF 		bl	pb_decode_noinit
 3851              	.LVL349:
 3852 0032 0446     		mov	r4, r0
 3853              	.LVL350:
 3854              	.L370:
1432:nanopb/pb_decode.c ****         return false;
 3855              		.loc 1 1432 5 is_stmt 1 view .LVU1054
1432:nanopb/pb_decode.c ****         return false;
 3856              		.loc 1 1432 10 is_stmt 0 view .LVU1055
 3857 0034 6946     		mov	r1, sp
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 109


 3858 0036 2846     		mov	r0, r5
 3859 0038 FFF7FEFF 		bl	pb_close_string_substream
 3860              	.LVL351:
1432:nanopb/pb_decode.c ****         return false;
 3861              		.loc 1 1432 8 view .LVU1056
 3862 003c 0346     		mov	r3, r0
 3863 003e 00B1     		cbz	r0, .L366
1434:nanopb/pb_decode.c **** }
 3864              		.loc 1 1434 12 view .LVU1057
 3865 0040 2346     		mov	r3, r4
 3866              	.LVL352:
 3867              	.L366:
1435:nanopb/pb_decode.c **** 
 3868              		.loc 1 1435 1 view .LVU1058
 3869 0042 1846     		mov	r0, r3
 3870 0044 05B0     		add	sp, sp, #20
 3871              	.LCFI88:
 3872              		.cfi_remember_state
 3873              		.cfi_def_cfa_offset 20
 3874              		@ sp needed
 3875 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 3876              	.LVL353:
 3877              	.L372:
 3878              	.LCFI89:
 3879              		.cfi_restore_state
1423:nanopb/pb_decode.c ****     
 3880              		.loc 1 1423 9 is_stmt 1 view .LVU1059
 3881 0048 EB68     		ldr	r3, [r5, #12]
 3882 004a 13B1     		cbz	r3, .L374
 3883              	.L368:
1423:nanopb/pb_decode.c ****     
 3884              		.loc 1 1423 9 is_stmt 0 discriminator 4 view .LVU1060
 3885 004c EB60     		str	r3, [r5, #12]
 3886 004e 0023     		movs	r3, #0
 3887 0050 F7E7     		b	.L366
 3888              	.L374:
1423:nanopb/pb_decode.c ****     
 3889              		.loc 1 1423 9 view .LVU1061
 3890 0052 044B     		ldr	r3, .L375
 3891 0054 FAE7     		b	.L368
 3892              	.L373:
1428:nanopb/pb_decode.c ****     else
 3893              		.loc 1 1428 9 is_stmt 1 view .LVU1062
1428:nanopb/pb_decode.c ****     else
 3894              		.loc 1 1428 18 is_stmt 0 view .LVU1063
 3895 0056 3A46     		mov	r2, r7
 3896 0058 3146     		mov	r1, r6
 3897 005a 6846     		mov	r0, sp
 3898 005c FFF7FEFF 		bl	pb_decode
 3899              	.LVL354:
 3900 0060 0446     		mov	r4, r0
 3901              	.LVL355:
1428:nanopb/pb_decode.c ****     else
 3902              		.loc 1 1428 18 view .LVU1064
 3903 0062 E7E7     		b	.L370
 3904              	.L376:
 3905              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 110


 3906              	.L375:
 3907 0064 00000000 		.word	.LC16
 3908              		.cfi_endproc
 3909              	.LFE39:
 3911              		.section	.text.pb_decode_delimited_noinit,"ax",%progbits
 3912              		.align	1
 3913              		.global	pb_decode_delimited_noinit
 3914              		.syntax unified
 3915              		.thumb
 3916              		.thumb_func
 3917              		.fpu softvfp
 3919              	pb_decode_delimited_noinit:
 3920              	.LVL356:
 3921              	.LFB26:
1021:nanopb/pb_decode.c ****     pb_istream_t substream;
 3922              		.loc 1 1021 1 is_stmt 1 view -0
 3923              		.cfi_startproc
 3924              		@ args = 0, pretend = 0, frame = 16
 3925              		@ frame_needed = 0, uses_anonymous_args = 0
1021:nanopb/pb_decode.c ****     pb_istream_t substream;
 3926              		.loc 1 1021 1 is_stmt 0 view .LVU1066
 3927 0000 70B5     		push	{r4, r5, r6, lr}
 3928              	.LCFI90:
 3929              		.cfi_def_cfa_offset 16
 3930              		.cfi_offset 4, -16
 3931              		.cfi_offset 5, -12
 3932              		.cfi_offset 6, -8
 3933              		.cfi_offset 14, -4
 3934 0002 84B0     		sub	sp, sp, #16
 3935              	.LCFI91:
 3936              		.cfi_def_cfa_offset 32
 3937 0004 0446     		mov	r4, r0
 3938 0006 0D46     		mov	r5, r1
 3939 0008 1646     		mov	r6, r2
1022:nanopb/pb_decode.c ****     bool status;
 3940              		.loc 1 1022 5 is_stmt 1 view .LVU1067
1023:nanopb/pb_decode.c **** 
 3941              		.loc 1 1023 5 view .LVU1068
1025:nanopb/pb_decode.c ****         return false;
 3942              		.loc 1 1025 5 view .LVU1069
1025:nanopb/pb_decode.c ****         return false;
 3943              		.loc 1 1025 10 is_stmt 0 view .LVU1070
 3944 000a 6946     		mov	r1, sp
 3945              	.LVL357:
1025:nanopb/pb_decode.c ****         return false;
 3946              		.loc 1 1025 10 view .LVU1071
 3947 000c FFF7FEFF 		bl	pb_make_string_substream
 3948              	.LVL358:
1025:nanopb/pb_decode.c ****         return false;
 3949              		.loc 1 1025 8 view .LVU1072
 3950 0010 0346     		mov	r3, r0
 3951 0012 10B9     		cbnz	r0, .L380
 3952              	.LVL359:
 3953              	.L378:
1033:nanopb/pb_decode.c **** 
 3954              		.loc 1 1033 1 view .LVU1073
 3955 0014 1846     		mov	r0, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 111


 3956 0016 04B0     		add	sp, sp, #16
 3957              	.LCFI92:
 3958              		.cfi_remember_state
 3959              		.cfi_def_cfa_offset 16
 3960              		@ sp needed
 3961 0018 70BD     		pop	{r4, r5, r6, pc}
 3962              	.LVL360:
 3963              	.L380:
 3964              	.LCFI93:
 3965              		.cfi_restore_state
1028:nanopb/pb_decode.c **** 
 3966              		.loc 1 1028 5 is_stmt 1 view .LVU1074
1028:nanopb/pb_decode.c **** 
 3967              		.loc 1 1028 14 is_stmt 0 view .LVU1075
 3968 001a 3246     		mov	r2, r6
 3969 001c 2946     		mov	r1, r5
 3970 001e 6846     		mov	r0, sp
 3971 0020 FFF7FEFF 		bl	pb_decode_noinit
 3972              	.LVL361:
 3973 0024 0546     		mov	r5, r0
 3974              	.LVL362:
1030:nanopb/pb_decode.c ****         return false;
 3975              		.loc 1 1030 5 is_stmt 1 view .LVU1076
1030:nanopb/pb_decode.c ****         return false;
 3976              		.loc 1 1030 10 is_stmt 0 view .LVU1077
 3977 0026 6946     		mov	r1, sp
 3978 0028 2046     		mov	r0, r4
 3979 002a FFF7FEFF 		bl	pb_close_string_substream
 3980              	.LVL363:
1030:nanopb/pb_decode.c ****         return false;
 3981              		.loc 1 1030 8 view .LVU1078
 3982 002e 0346     		mov	r3, r0
 3983 0030 0028     		cmp	r0, #0
 3984 0032 EFD0     		beq	.L378
1032:nanopb/pb_decode.c **** }
 3985              		.loc 1 1032 12 view .LVU1079
 3986 0034 2B46     		mov	r3, r5
 3987 0036 EDE7     		b	.L378
 3988              		.cfi_endproc
 3989              	.LFE26:
 3991              		.section	.text.pb_decode_delimited,"ax",%progbits
 3992              		.align	1
 3993              		.global	pb_decode_delimited
 3994              		.syntax unified
 3995              		.thumb
 3996              		.thumb_func
 3997              		.fpu softvfp
 3999              	pb_decode_delimited:
 4000              	.LVL364:
 4001              	.LFB27:
1036:nanopb/pb_decode.c ****     pb_istream_t substream;
 4002              		.loc 1 1036 1 is_stmt 1 view -0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 16
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
1036:nanopb/pb_decode.c ****     pb_istream_t substream;
 4006              		.loc 1 1036 1 is_stmt 0 view .LVU1081
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 112


 4007 0000 70B5     		push	{r4, r5, r6, lr}
 4008              	.LCFI94:
 4009              		.cfi_def_cfa_offset 16
 4010              		.cfi_offset 4, -16
 4011              		.cfi_offset 5, -12
 4012              		.cfi_offset 6, -8
 4013              		.cfi_offset 14, -4
 4014 0002 84B0     		sub	sp, sp, #16
 4015              	.LCFI95:
 4016              		.cfi_def_cfa_offset 32
 4017 0004 0446     		mov	r4, r0
 4018 0006 0D46     		mov	r5, r1
 4019 0008 1646     		mov	r6, r2
1037:nanopb/pb_decode.c ****     bool status;
 4020              		.loc 1 1037 5 is_stmt 1 view .LVU1082
1038:nanopb/pb_decode.c ****     
 4021              		.loc 1 1038 5 view .LVU1083
1040:nanopb/pb_decode.c ****         return false;
 4022              		.loc 1 1040 5 view .LVU1084
1040:nanopb/pb_decode.c ****         return false;
 4023              		.loc 1 1040 10 is_stmt 0 view .LVU1085
 4024 000a 6946     		mov	r1, sp
 4025              	.LVL365:
1040:nanopb/pb_decode.c ****         return false;
 4026              		.loc 1 1040 10 view .LVU1086
 4027 000c FFF7FEFF 		bl	pb_make_string_substream
 4028              	.LVL366:
1040:nanopb/pb_decode.c ****         return false;
 4029              		.loc 1 1040 8 view .LVU1087
 4030 0010 0346     		mov	r3, r0
 4031 0012 10B9     		cbnz	r0, .L384
 4032              	.LVL367:
 4033              	.L382:
1048:nanopb/pb_decode.c **** 
 4034              		.loc 1 1048 1 view .LVU1088
 4035 0014 1846     		mov	r0, r3
 4036 0016 04B0     		add	sp, sp, #16
 4037              	.LCFI96:
 4038              		.cfi_remember_state
 4039              		.cfi_def_cfa_offset 16
 4040              		@ sp needed
 4041 0018 70BD     		pop	{r4, r5, r6, pc}
 4042              	.LVL368:
 4043              	.L384:
 4044              	.LCFI97:
 4045              		.cfi_restore_state
1043:nanopb/pb_decode.c **** 
 4046              		.loc 1 1043 5 is_stmt 1 view .LVU1089
1043:nanopb/pb_decode.c **** 
 4047              		.loc 1 1043 14 is_stmt 0 view .LVU1090
 4048 001a 3246     		mov	r2, r6
 4049 001c 2946     		mov	r1, r5
 4050 001e 6846     		mov	r0, sp
 4051 0020 FFF7FEFF 		bl	pb_decode
 4052              	.LVL369:
 4053 0024 0546     		mov	r5, r0
 4054              	.LVL370:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 113


1045:nanopb/pb_decode.c ****         return false;
 4055              		.loc 1 1045 5 is_stmt 1 view .LVU1091
1045:nanopb/pb_decode.c ****         return false;
 4056              		.loc 1 1045 10 is_stmt 0 view .LVU1092
 4057 0026 6946     		mov	r1, sp
 4058 0028 2046     		mov	r0, r4
 4059 002a FFF7FEFF 		bl	pb_close_string_substream
 4060              	.LVL371:
1045:nanopb/pb_decode.c ****         return false;
 4061              		.loc 1 1045 8 view .LVU1093
 4062 002e 0346     		mov	r3, r0
 4063 0030 0028     		cmp	r0, #0
 4064 0032 EFD0     		beq	.L382
1047:nanopb/pb_decode.c **** }
 4065              		.loc 1 1047 12 view .LVU1094
 4066 0034 2B46     		mov	r3, r5
 4067 0036 EDE7     		b	.L382
 4068              		.cfi_endproc
 4069              	.LFE27:
 4071              		.section	.text.pb_decode_nullterminated,"ax",%progbits
 4072              		.align	1
 4073              		.global	pb_decode_nullterminated
 4074              		.syntax unified
 4075              		.thumb
 4076              		.thumb_func
 4077              		.fpu softvfp
 4079              	pb_decode_nullterminated:
 4080              	.LVL372:
 4081              	.LFB28:
1051:nanopb/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
 4082              		.loc 1 1051 1 is_stmt 1 view -0
 4083              		.cfi_startproc
 4084              		@ args = 0, pretend = 0, frame = 0
 4085              		@ frame_needed = 0, uses_anonymous_args = 0
1051:nanopb/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
 4086              		.loc 1 1051 1 is_stmt 0 view .LVU1096
 4087 0000 08B5     		push	{r3, lr}
 4088              	.LCFI98:
 4089              		.cfi_def_cfa_offset 8
 4090              		.cfi_offset 3, -8
 4091              		.cfi_offset 14, -4
1053:nanopb/pb_decode.c **** }
 4092              		.loc 1 1053 5 is_stmt 1 view .LVU1097
1053:nanopb/pb_decode.c **** }
 4093              		.loc 1 1053 12 is_stmt 0 view .LVU1098
 4094 0002 FFF7FEFF 		bl	pb_decode
 4095              	.LVL373:
1054:nanopb/pb_decode.c **** 
 4096              		.loc 1 1054 1 view .LVU1099
 4097 0006 08BD     		pop	{r3, pc}
 4098              		.cfi_endproc
 4099              	.LFE28:
 4101              		.section	.text.pb_decode_svarint,"ax",%progbits
 4102              		.align	1
 4103              		.global	pb_decode_svarint
 4104              		.syntax unified
 4105              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 114


 4106              		.thumb_func
 4107              		.fpu softvfp
 4109              	pb_decode_svarint:
 4110              	.LVL374:
 4111              	.LFB29:
1191:nanopb/pb_decode.c ****     pb_uint64_t value;
 4112              		.loc 1 1191 1 is_stmt 1 view -0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 8
 4115              		@ frame_needed = 0, uses_anonymous_args = 0
1191:nanopb/pb_decode.c ****     pb_uint64_t value;
 4116              		.loc 1 1191 1 is_stmt 0 view .LVU1101
 4117 0000 30B5     		push	{r4, r5, lr}
 4118              	.LCFI99:
 4119              		.cfi_def_cfa_offset 12
 4120              		.cfi_offset 4, -12
 4121              		.cfi_offset 5, -8
 4122              		.cfi_offset 14, -4
 4123 0002 83B0     		sub	sp, sp, #12
 4124              	.LCFI100:
 4125              		.cfi_def_cfa_offset 24
 4126 0004 0C46     		mov	r4, r1
1192:nanopb/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 4127              		.loc 1 1192 5 is_stmt 1 view .LVU1102
1193:nanopb/pb_decode.c ****         return false;
 4128              		.loc 1 1193 5 view .LVU1103
1193:nanopb/pb_decode.c ****         return false;
 4129              		.loc 1 1193 10 is_stmt 0 view .LVU1104
 4130 0006 6946     		mov	r1, sp
 4131              	.LVL375:
1193:nanopb/pb_decode.c ****         return false;
 4132              		.loc 1 1193 10 view .LVU1105
 4133 0008 FFF7FEFF 		bl	pb_decode_varint
 4134              	.LVL376:
1193:nanopb/pb_decode.c ****         return false;
 4135              		.loc 1 1193 8 view .LVU1106
 4136 000c 0546     		mov	r5, r0
 4137 000e 70B1     		cbz	r0, .L388
1196:nanopb/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4138              		.loc 1 1196 5 is_stmt 1 view .LVU1107
1196:nanopb/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4139              		.loc 1 1196 15 is_stmt 0 view .LVU1108
 4140 0010 009B     		ldr	r3, [sp]
 4141 0012 019A     		ldr	r2, [sp, #4]
 4142 0014 03F00100 		and	r0, r3, #1
 4143 0018 0021     		movs	r1, #0
1196:nanopb/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4144              		.loc 1 1196 8 view .LVU1109
 4145 001a 0143     		orrs	r1, r0, r1
 4146 001c 0AD0     		beq	.L389
1197:nanopb/pb_decode.c ****     else
 4147              		.loc 1 1197 9 is_stmt 1 view .LVU1110
1197:nanopb/pb_decode.c ****     else
 4148              		.loc 1 1197 38 is_stmt 0 view .LVU1111
 4149 001e 5B08     		lsrs	r3, r3, #1
 4150 0020 43EAC273 		orr	r3, r3, r2, lsl #31
1197:nanopb/pb_decode.c ****     else
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 115


 4151              		.loc 1 1197 30 view .LVU1112
 4152 0024 DB43     		mvns	r3, r3
 4153 0026 6FEA5202 		mvn	r2, r2, lsr #1
1197:nanopb/pb_decode.c ****     else
 4154              		.loc 1 1197 15 view .LVU1113
 4155 002a 2360     		str	r3, [r4]
 4156 002c 6260     		str	r2, [r4, #4]
 4157              	.L388:
1202:nanopb/pb_decode.c **** 
 4158              		.loc 1 1202 1 view .LVU1114
 4159 002e 2846     		mov	r0, r5
 4160 0030 03B0     		add	sp, sp, #12
 4161              	.LCFI101:
 4162              		.cfi_remember_state
 4163              		.cfi_def_cfa_offset 12
 4164              		@ sp needed
 4165 0032 30BD     		pop	{r4, r5, pc}
 4166              	.LVL377:
 4167              	.L389:
 4168              	.LCFI102:
 4169              		.cfi_restore_state
1199:nanopb/pb_decode.c ****     
 4170              		.loc 1 1199 9 is_stmt 1 view .LVU1115
1199:nanopb/pb_decode.c ****     
 4171              		.loc 1 1199 36 is_stmt 0 view .LVU1116
 4172 0034 5B08     		lsrs	r3, r3, #1
 4173 0036 43EAC273 		orr	r3, r3, r2, lsl #31
 4174 003a 5208     		lsrs	r2, r2, #1
1199:nanopb/pb_decode.c ****     
 4175              		.loc 1 1199 15 view .LVU1117
 4176 003c 2360     		str	r3, [r4]
 4177 003e 6260     		str	r2, [r4, #4]
 4178 0040 F5E7     		b	.L388
 4179              		.cfi_endproc
 4180              	.LFE29:
 4182              		.section	.text.pb_dec_svarint,"ax",%progbits
 4183              		.align	1
 4184              		.syntax unified
 4185              		.thumb
 4186              		.thumb_func
 4187              		.fpu softvfp
 4189              	pb_dec_svarint:
 4190              	.LVL378:
 4191              	.LFB34:
1301:nanopb/pb_decode.c ****     pb_int64_t value, clamped;
 4192              		.loc 1 1301 1 is_stmt 1 view -0
 4193              		.cfi_startproc
 4194              		@ args = 0, pretend = 0, frame = 8
 4195              		@ frame_needed = 0, uses_anonymous_args = 0
1301:nanopb/pb_decode.c ****     pb_int64_t value, clamped;
 4196              		.loc 1 1301 1 is_stmt 0 view .LVU1119
 4197 0000 70B5     		push	{r4, r5, r6, lr}
 4198              	.LCFI103:
 4199              		.cfi_def_cfa_offset 16
 4200              		.cfi_offset 4, -16
 4201              		.cfi_offset 5, -12
 4202              		.cfi_offset 6, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 116


 4203              		.cfi_offset 14, -4
 4204 0002 82B0     		sub	sp, sp, #8
 4205              	.LCFI104:
 4206              		.cfi_def_cfa_offset 24
 4207 0004 0646     		mov	r6, r0
 4208 0006 0D46     		mov	r5, r1
 4209 0008 1446     		mov	r4, r2
1302:nanopb/pb_decode.c ****     if (!pb_decode_svarint(stream, &value))
 4210              		.loc 1 1302 5 is_stmt 1 view .LVU1120
1303:nanopb/pb_decode.c ****         return false;
 4211              		.loc 1 1303 5 view .LVU1121
1303:nanopb/pb_decode.c ****         return false;
 4212              		.loc 1 1303 10 is_stmt 0 view .LVU1122
 4213 000a 6946     		mov	r1, sp
 4214              	.LVL379:
1303:nanopb/pb_decode.c ****         return false;
 4215              		.loc 1 1303 10 view .LVU1123
 4216 000c FFF7FEFF 		bl	pb_decode_svarint
 4217              	.LVL380:
1303:nanopb/pb_decode.c ****         return false;
 4218              		.loc 1 1303 8 view .LVU1124
 4219 0010 0346     		mov	r3, r0
 4220 0012 E0B1     		cbz	r0, .L392
1307:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4221              		.loc 1 1307 5 is_stmt 1 view .LVU1125
1307:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4222              		.loc 1 1307 14 is_stmt 0 view .LVU1126
 4223 0014 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
1307:nanopb/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4224              		.loc 1 1307 8 view .LVU1127
 4225 0016 082A     		cmp	r2, #8
 4226 0018 0BD0     		beq	.L401
1309:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
 4227              		.loc 1 1309 10 is_stmt 1 view .LVU1128
1309:nanopb/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
 4228              		.loc 1 1309 13 is_stmt 0 view .LVU1129
 4229 001a 042A     		cmp	r2, #4
 4230 001c 1AD0     		beq	.L402
1311:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
 4231              		.loc 1 1311 10 is_stmt 1 view .LVU1130
1311:nanopb/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
 4232              		.loc 1 1311 13 is_stmt 0 view .LVU1131
 4233 001e 022A     		cmp	r2, #2
 4234 0020 1CD0     		beq	.L403
1313:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
 4235              		.loc 1 1313 10 is_stmt 1 view .LVU1132
1313:nanopb/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
 4236              		.loc 1 1313 13 is_stmt 0 view .LVU1133
 4237 0022 012A     		cmp	r2, #1
 4238 0024 20D1     		bne	.L397
1314:nanopb/pb_decode.c ****     else
 4239              		.loc 1 1314 9 is_stmt 1 view .LVU1134
1314:nanopb/pb_decode.c ****     else
 4240              		.loc 1 1314 42 is_stmt 0 view .LVU1135
 4241 0026 9DF90000 		ldrsb	r0, [sp]
1314:nanopb/pb_decode.c ****     else
 4242              		.loc 1 1314 40 view .LVU1136
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 117


 4243 002a 2070     		strb	r0, [r4]
1314:nanopb/pb_decode.c ****     else
 4244              		.loc 1 1314 17 view .LVU1137
 4245 002c 40B2     		sxtb	r0, r0
 4246 002e C117     		asrs	r1, r0, #31
 4247              	.LVL381:
1314:nanopb/pb_decode.c ****     else
 4248              		.loc 1 1314 17 view .LVU1138
 4249 0030 03E0     		b	.L394
 4250              	.LVL382:
 4251              	.L401:
1308:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 4252              		.loc 1 1308 9 is_stmt 1 view .LVU1139
1308:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 4253              		.loc 1 1308 38 is_stmt 0 view .LVU1140
 4254 0032 DDE90001 		ldrd	r0, [sp]
 4255 0036 C4E90001 		strd	r0, [r4]
 4256              	.LVL383:
 4257              	.L394:
1318:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4258              		.loc 1 1318 5 is_stmt 1 view .LVU1141
1318:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4259              		.loc 1 1318 17 is_stmt 0 view .LVU1142
 4260 003a DDE90045 		ldrd	r4, [sp]
 4261              	.LVL384:
1318:nanopb/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4262              		.loc 1 1318 8 view .LVU1143
 4263 003e 8D42     		cmp	r5, r1
 4264 0040 08BF     		it	eq
 4265 0042 8442     		cmpeq	r4, r0
 4266 0044 03D0     		beq	.L392
1319:nanopb/pb_decode.c ****     
 4267              		.loc 1 1319 9 is_stmt 1 view .LVU1144
 4268 0046 F368     		ldr	r3, [r6, #12]
 4269 0048 ABB1     		cbz	r3, .L404
 4270              	.L399:
1319:nanopb/pb_decode.c ****     
 4271              		.loc 1 1319 9 is_stmt 0 discriminator 4 view .LVU1145
 4272 004a F360     		str	r3, [r6, #12]
 4273 004c 0023     		movs	r3, #0
 4274              	.LVL385:
 4275              	.L392:
1322:nanopb/pb_decode.c **** 
 4276              		.loc 1 1322 1 view .LVU1146
 4277 004e 1846     		mov	r0, r3
 4278 0050 02B0     		add	sp, sp, #8
 4279              	.LCFI105:
 4280              		.cfi_remember_state
 4281              		.cfi_def_cfa_offset 16
 4282              		@ sp needed
 4283 0052 70BD     		pop	{r4, r5, r6, pc}
 4284              	.LVL386:
 4285              	.L402:
 4286              	.LCFI106:
 4287              		.cfi_restore_state
1310:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4288              		.loc 1 1310 9 is_stmt 1 view .LVU1147
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 118


1310:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4289              		.loc 1 1310 37 is_stmt 0 view .LVU1148
 4290 0054 0098     		ldr	r0, [sp]
1310:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4291              		.loc 1 1310 35 view .LVU1149
 4292 0056 2060     		str	r0, [r4]
1310:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4293              		.loc 1 1310 17 view .LVU1150
 4294 0058 C117     		asrs	r1, r0, #31
 4295              	.LVL387:
1310:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4296              		.loc 1 1310 17 view .LVU1151
 4297 005a EEE7     		b	.L394
 4298              	.LVL388:
 4299              	.L403:
1312:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4300              		.loc 1 1312 9 is_stmt 1 view .LVU1152
1312:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4301              		.loc 1 1312 43 is_stmt 0 view .LVU1153
 4302 005c BDF90000 		ldrsh	r0, [sp]
1312:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4303              		.loc 1 1312 41 view .LVU1154
 4304 0060 2080     		strh	r0, [r4]	@ movhi
1312:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4305              		.loc 1 1312 17 view .LVU1155
 4306 0062 00B2     		sxth	r0, r0
 4307 0064 C117     		asrs	r1, r0, #31
 4308              	.LVL389:
1312:nanopb/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4309              		.loc 1 1312 17 view .LVU1156
 4310 0066 E8E7     		b	.L394
 4311              	.LVL390:
 4312              	.L397:
1316:nanopb/pb_decode.c **** 
 4313              		.loc 1 1316 9 is_stmt 1 view .LVU1157
 4314 0068 F368     		ldr	r3, [r6, #12]
 4315 006a 13B1     		cbz	r3, .L405
 4316              	.L398:
1316:nanopb/pb_decode.c **** 
 4317              		.loc 1 1316 9 is_stmt 0 discriminator 4 view .LVU1158
 4318 006c F360     		str	r3, [r6, #12]
 4319 006e 0023     		movs	r3, #0
 4320 0070 EDE7     		b	.L392
 4321              	.L405:
1316:nanopb/pb_decode.c **** 
 4322              		.loc 1 1316 9 view .LVU1159
 4323 0072 024B     		ldr	r3, .L406
 4324 0074 FAE7     		b	.L398
 4325              	.LVL391:
 4326              	.L404:
1319:nanopb/pb_decode.c ****     
 4327              		.loc 1 1319 9 view .LVU1160
 4328 0076 024B     		ldr	r3, .L406+4
 4329 0078 E7E7     		b	.L399
 4330              	.L407:
 4331 007a 00BF     		.align	2
 4332              	.L406:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 119


 4333 007c 00000000 		.word	.LC9
 4334 0080 14000000 		.word	.LC10
 4335              		.cfi_endproc
 4336              	.LFE34:
 4338              		.section	.text.pb_decode_fixed32,"ax",%progbits
 4339              		.align	1
 4340              		.global	pb_decode_fixed32
 4341              		.syntax unified
 4342              		.thumb
 4343              		.thumb_func
 4344              		.fpu softvfp
 4346              	pb_decode_fixed32:
 4347              	.LVL392:
 4348              	.LFB30:
1205:nanopb/pb_decode.c ****     pb_byte_t bytes[4];
 4349              		.loc 1 1205 1 is_stmt 1 view -0
 4350              		.cfi_startproc
 4351              		@ args = 0, pretend = 0, frame = 8
 4352              		@ frame_needed = 0, uses_anonymous_args = 0
1205:nanopb/pb_decode.c ****     pb_byte_t bytes[4];
 4353              		.loc 1 1205 1 is_stmt 0 view .LVU1162
 4354 0000 10B5     		push	{r4, lr}
 4355              	.LCFI107:
 4356              		.cfi_def_cfa_offset 8
 4357              		.cfi_offset 4, -8
 4358              		.cfi_offset 14, -4
 4359 0002 82B0     		sub	sp, sp, #8
 4360              	.LCFI108:
 4361              		.cfi_def_cfa_offset 16
 4362 0004 0C46     		mov	r4, r1
1206:nanopb/pb_decode.c **** 
 4363              		.loc 1 1206 5 is_stmt 1 view .LVU1163
1208:nanopb/pb_decode.c ****         return false;
 4364              		.loc 1 1208 5 view .LVU1164
1208:nanopb/pb_decode.c ****         return false;
 4365              		.loc 1 1208 10 is_stmt 0 view .LVU1165
 4366 0006 0422     		movs	r2, #4
 4367 0008 0DEB0201 		add	r1, sp, r2
 4368              	.LVL393:
1208:nanopb/pb_decode.c ****         return false;
 4369              		.loc 1 1208 10 view .LVU1166
 4370 000c FFF7FEFF 		bl	pb_read
 4371              	.LVL394:
1208:nanopb/pb_decode.c ****         return false;
 4372              		.loc 1 1208 8 view .LVU1167
 4373 0010 0246     		mov	r2, r0
 4374 0012 70B1     		cbz	r0, .L409
1211:nanopb/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4375              		.loc 1 1211 5 is_stmt 1 view .LVU1168
1211:nanopb/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4376              		.loc 1 1211 40 is_stmt 0 view .LVU1169
 4377 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1212:nanopb/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
 4378              		.loc 1 1212 40 view .LVU1170
 4379 0018 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
1211:nanopb/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4380              		.loc 1 1211 50 view .LVU1171
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 120


 4381 001c 43EA0123 		orr	r3, r3, r1, lsl #8
1213:nanopb/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
 4382              		.loc 1 1213 40 view .LVU1172
 4383 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
1212:nanopb/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
 4384              		.loc 1 1212 50 view .LVU1173
 4385 0024 43EA0143 		orr	r3, r3, r1, lsl #16
1214:nanopb/pb_decode.c ****     return true;
 4386              		.loc 1 1214 40 view .LVU1174
 4387 0028 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
1213:nanopb/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
 4388              		.loc 1 1213 51 view .LVU1175
 4389 002c 43EA0163 		orr	r3, r3, r1, lsl #24
1211:nanopb/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4390              		.loc 1 1211 22 view .LVU1176
 4391 0030 2360     		str	r3, [r4]
1215:nanopb/pb_decode.c **** }
 4392              		.loc 1 1215 5 is_stmt 1 view .LVU1177
 4393              	.L409:
1216:nanopb/pb_decode.c **** 
 4394              		.loc 1 1216 1 is_stmt 0 view .LVU1178
 4395 0032 1046     		mov	r0, r2
 4396 0034 02B0     		add	sp, sp, #8
 4397              	.LCFI109:
 4398              		.cfi_def_cfa_offset 8
 4399              		@ sp needed
 4400 0036 10BD     		pop	{r4, pc}
1216:nanopb/pb_decode.c **** 
 4401              		.loc 1 1216 1 view .LVU1179
 4402              		.cfi_endproc
 4403              	.LFE30:
 4405              		.section	.text.pb_dec_fixed32,"ax",%progbits
 4406              		.align	1
 4407              		.syntax unified
 4408              		.thumb
 4409              		.thumb_func
 4410              		.fpu softvfp
 4412              	pb_dec_fixed32:
 4413              	.LVL395:
 4414              	.LFB35:
1325:nanopb/pb_decode.c ****     PB_UNUSED(field);
 4415              		.loc 1 1325 1 is_stmt 1 view -0
 4416              		.cfi_startproc
 4417              		@ args = 0, pretend = 0, frame = 0
 4418              		@ frame_needed = 0, uses_anonymous_args = 0
1325:nanopb/pb_decode.c ****     PB_UNUSED(field);
 4419              		.loc 1 1325 1 is_stmt 0 view .LVU1181
 4420 0000 08B5     		push	{r3, lr}
 4421              	.LCFI110:
 4422              		.cfi_def_cfa_offset 8
 4423              		.cfi_offset 3, -8
 4424              		.cfi_offset 14, -4
1326:nanopb/pb_decode.c ****     return pb_decode_fixed32(stream, dest);
 4425              		.loc 1 1326 5 is_stmt 1 view .LVU1182
1327:nanopb/pb_decode.c **** }
 4426              		.loc 1 1327 5 view .LVU1183
1327:nanopb/pb_decode.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 121


 4427              		.loc 1 1327 12 is_stmt 0 view .LVU1184
 4428 0002 1146     		mov	r1, r2
 4429              	.LVL396:
1327:nanopb/pb_decode.c **** }
 4430              		.loc 1 1327 12 view .LVU1185
 4431 0004 FFF7FEFF 		bl	pb_decode_fixed32
 4432              	.LVL397:
1328:nanopb/pb_decode.c **** 
 4433              		.loc 1 1328 1 view .LVU1186
 4434 0008 08BD     		pop	{r3, pc}
 4435              		.cfi_endproc
 4436              	.LFE35:
 4438              		.section	.text.pb_decode_fixed64,"ax",%progbits
 4439              		.align	1
 4440              		.global	pb_decode_fixed64
 4441              		.syntax unified
 4442              		.thumb
 4443              		.thumb_func
 4444              		.fpu softvfp
 4446              	pb_decode_fixed64:
 4447              	.LVL398:
 4448              	.LFB31:
1220:nanopb/pb_decode.c ****     pb_byte_t bytes[8];
 4449              		.loc 1 1220 1 is_stmt 1 view -0
 4450              		.cfi_startproc
 4451              		@ args = 0, pretend = 0, frame = 8
 4452              		@ frame_needed = 0, uses_anonymous_args = 0
1220:nanopb/pb_decode.c ****     pb_byte_t bytes[8];
 4453              		.loc 1 1220 1 is_stmt 0 view .LVU1188
 4454 0000 D0B5     		push	{r4, r6, r7, lr}
 4455              	.LCFI111:
 4456              		.cfi_def_cfa_offset 16
 4457              		.cfi_offset 4, -16
 4458              		.cfi_offset 6, -12
 4459              		.cfi_offset 7, -8
 4460              		.cfi_offset 14, -4
 4461 0002 82B0     		sub	sp, sp, #8
 4462              	.LCFI112:
 4463              		.cfi_def_cfa_offset 24
 4464 0004 0C46     		mov	r4, r1
1221:nanopb/pb_decode.c **** 
 4465              		.loc 1 1221 5 is_stmt 1 view .LVU1189
1223:nanopb/pb_decode.c ****         return false;
 4466              		.loc 1 1223 5 view .LVU1190
1223:nanopb/pb_decode.c ****         return false;
 4467              		.loc 1 1223 10 is_stmt 0 view .LVU1191
 4468 0006 0822     		movs	r2, #8
 4469 0008 6946     		mov	r1, sp
 4470              	.LVL399:
1223:nanopb/pb_decode.c ****         return false;
 4471              		.loc 1 1223 10 view .LVU1192
 4472 000a FFF7FEFF 		bl	pb_read
 4473              	.LVL400:
1223:nanopb/pb_decode.c ****         return false;
 4474              		.loc 1 1223 8 view .LVU1193
 4475 000e 0146     		mov	r1, r0
 4476 0010 E8B1     		cbz	r0, .L414
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 122


1226:nanopb/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4477              		.loc 1 1226 5 is_stmt 1 view .LVU1194
1226:nanopb/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4478              		.loc 1 1226 44 is_stmt 0 view .LVU1195
 4479 0012 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
1227:nanopb/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
 4480              		.loc 1 1227 25 view .LVU1196
 4481 0016 9DF80160 		ldrb	r6, [sp, #1]	@ zero_extendqisi2
1226:nanopb/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4482              		.loc 1 1226 50 view .LVU1197
 4483 001a 42EA0622 		orr	r2, r2, r6, lsl #8
1228:nanopb/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
 4484              		.loc 1 1228 25 view .LVU1198
 4485 001e 9DF80260 		ldrb	r6, [sp, #2]	@ zero_extendqisi2
1227:nanopb/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
 4486              		.loc 1 1227 50 view .LVU1199
 4487 0022 42EA0642 		orr	r2, r2, r6, lsl #16
1229:nanopb/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
 4488              		.loc 1 1229 25 view .LVU1200
 4489 0026 9DF80360 		ldrb	r6, [sp, #3]	@ zero_extendqisi2
1228:nanopb/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
 4490              		.loc 1 1228 51 view .LVU1201
 4491 002a 42EA0662 		orr	r2, r2, r6, lsl #24
1229:nanopb/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
 4492              		.loc 1 1229 51 view .LVU1202
 4493 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1231:nanopb/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
 4494              		.loc 1 1231 25 view .LVU1203
 4495 0032 9DF80560 		ldrb	r6, [sp, #5]	@ zero_extendqisi2
1230:nanopb/pb_decode.c ****                        ((uint64_t)bytes[5] << 40) |
 4496              		.loc 1 1230 51 view .LVU1204
 4497 0036 43EA0623 		orr	r3, r3, r6, lsl #8
1232:nanopb/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
 4498              		.loc 1 1232 25 view .LVU1205
 4499 003a 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
1231:nanopb/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
 4500              		.loc 1 1231 51 view .LVU1206
 4501 003e 43EA0643 		orr	r3, r3, r6, lsl #16
1233:nanopb/pb_decode.c ****     
 4502              		.loc 1 1233 25 view .LVU1207
 4503 0042 9DF80760 		ldrb	r6, [sp, #7]	@ zero_extendqisi2
1232:nanopb/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
 4504              		.loc 1 1232 51 view .LVU1208
 4505 0046 43EA0663 		orr	r3, r3, r6, lsl #24
1226:nanopb/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4506              		.loc 1 1226 22 view .LVU1209
 4507 004a 2260     		str	r2, [r4]
 4508 004c 6360     		str	r3, [r4, #4]
1235:nanopb/pb_decode.c **** }
 4509              		.loc 1 1235 5 is_stmt 1 view .LVU1210
 4510              	.L414:
1236:nanopb/pb_decode.c **** #endif
 4511              		.loc 1 1236 1 is_stmt 0 view .LVU1211
 4512 004e 0846     		mov	r0, r1
 4513 0050 02B0     		add	sp, sp, #8
 4514              	.LCFI113:
 4515              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 123


 4516              		@ sp needed
 4517 0052 D0BD     		pop	{r4, r6, r7, pc}
1236:nanopb/pb_decode.c **** #endif
 4518              		.loc 1 1236 1 view .LVU1212
 4519              		.cfi_endproc
 4520              	.LFE31:
 4522              		.section	.text.pb_dec_fixed64,"ax",%progbits
 4523              		.align	1
 4524              		.syntax unified
 4525              		.thumb
 4526              		.thumb_func
 4527              		.fpu softvfp
 4529              	pb_dec_fixed64:
 4530              	.LVL401:
 4531              	.LFB36:
1331:nanopb/pb_decode.c ****     PB_UNUSED(field);
 4532              		.loc 1 1331 1 is_stmt 1 view -0
 4533              		.cfi_startproc
 4534              		@ args = 0, pretend = 0, frame = 0
 4535              		@ frame_needed = 0, uses_anonymous_args = 0
1331:nanopb/pb_decode.c ****     PB_UNUSED(field);
 4536              		.loc 1 1331 1 is_stmt 0 view .LVU1214
 4537 0000 08B5     		push	{r3, lr}
 4538              	.LCFI114:
 4539              		.cfi_def_cfa_offset 8
 4540              		.cfi_offset 3, -8
 4541              		.cfi_offset 14, -4
1332:nanopb/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
 4542              		.loc 1 1332 5 is_stmt 1 view .LVU1215
1334:nanopb/pb_decode.c **** #else
 4543              		.loc 1 1334 5 view .LVU1216
1334:nanopb/pb_decode.c **** #else
 4544              		.loc 1 1334 12 is_stmt 0 view .LVU1217
 4545 0002 1146     		mov	r1, r2
 4546              	.LVL402:
1334:nanopb/pb_decode.c **** #else
 4547              		.loc 1 1334 12 view .LVU1218
 4548 0004 FFF7FEFF 		bl	pb_decode_fixed64
 4549              	.LVL403:
1339:nanopb/pb_decode.c **** 
 4550              		.loc 1 1339 1 view .LVU1219
 4551 0008 08BD     		pop	{r3, pc}
 4552              		.cfi_endproc
 4553              	.LFE36:
 4555              		.section	.rodata.PB_DECODERS,"a"
 4556              		.align	2
 4557              		.set	.LANCHOR0,. + 0
 4560              	PB_DECODERS:
 4561 0000 00000000 		.word	pb_dec_varint
 4562 0004 00000000 		.word	pb_dec_uvarint
 4563 0008 00000000 		.word	pb_dec_svarint
 4564 000c 00000000 		.word	pb_dec_fixed32
 4565 0010 00000000 		.word	pb_dec_fixed64
 4566 0014 00000000 		.word	pb_dec_bytes
 4567 0018 00000000 		.word	pb_dec_string
 4568 001c 00000000 		.word	pb_dec_submessage
 4569 0020 00000000 		.word	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 124


 4570 0024 00000000 		.word	pb_dec_fixed_length_bytes
 4571              		.section	.rodata.decode_callback_field.str1.4,"aMS",%progbits,1
 4572              		.align	2
 4573              	.LC14:
 4574 0000 63616C6C 		.ascii	"callback failed\000"
 4574      6261636B 
 4574      20666169 
 4574      6C656400 
 4575              		.section	.rodata.decode_pointer_field.str1.4,"aMS",%progbits,1
 4576              		.align	2
 4577              	.LC3:
 4578 0000 6E6F206D 		.ascii	"no malloc support\000"
 4578      616C6C6F 
 4578      63207375 
 4578      70706F72 
 4578      7400
 4579              		.section	.rodata.decode_static_field.str1.4,"aMS",%progbits,1
 4580              		.align	2
 4581              	.LC12:
 4582 0000 61727261 		.ascii	"array overflow\000"
 4582      79206F76 
 4582      6572666C 
 4582      6F7700
 4583 000f 00       		.space	1
 4584              	.LC13:
 4585 0010 696E7661 		.ascii	"invalid field type\000"
 4585      6C696420 
 4585      6669656C 
 4585      64207479 
 4585      706500
 4586              		.section	.rodata.pb_dec_fixed_length_bytes.str1.4,"aMS",%progbits,1
 4587              		.align	2
 4588              	.LC5:
 4589 0000 62797465 		.ascii	"bytes overflow\000"
 4589      73206F76 
 4589      6572666C 
 4589      6F7700
 4590 000f 00       		.space	1
 4591              	.LC6:
 4592 0010 696E636F 		.ascii	"incorrect fixed length bytes size\000"
 4592      72726563 
 4592      74206669 
 4592      78656420 
 4592      6C656E67 
 4593              		.section	.rodata.pb_dec_string.str1.4,"aMS",%progbits,1
 4594              		.align	2
 4595              	.LC7:
 4596 0000 73697A65 		.ascii	"size too large\000"
 4596      20746F6F 
 4596      206C6172 
 4596      676500
 4597 000f 00       		.space	1
 4598              	.LC8:
 4599 0010 73747269 		.ascii	"string overflow\000"
 4599      6E67206F 
 4599      76657266 
 4599      6C6F7700 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 125


 4600              		.section	.rodata.pb_dec_submessage.str1.4,"aMS",%progbits,1
 4601              		.align	2
 4602              	.LC16:
 4603 0000 696E7661 		.ascii	"invalid field descriptor\000"
 4603      6C696420 
 4603      6669656C 
 4603      64206465 
 4603      73637269 
 4604              		.section	.rodata.pb_dec_uvarint.str1.4,"aMS",%progbits,1
 4605              		.align	2
 4606              	.LC9:
 4607 0000 696E7661 		.ascii	"invalid data_size\000"
 4607      6C696420 
 4607      64617461 
 4607      5F73697A 
 4607      6500
 4608 0012 0000     		.space	2
 4609              	.LC10:
 4610 0014 696E7465 		.ascii	"integer too large\000"
 4610      67657220 
 4610      746F6F20 
 4610      6C617267 
 4610      6500
 4611              		.section	.rodata.pb_decode_noinit.str1.4,"aMS",%progbits,1
 4612              		.align	2
 4613              	.LC15:
 4614 0000 6D697373 		.ascii	"missing required field\000"
 4614      696E6720 
 4614      72657175 
 4614      69726564 
 4614      20666965 
 4615              		.section	.rodata.pb_decode_varint32_eof.str1.4,"aMS",%progbits,1
 4616              		.align	2
 4617              	.LC2:
 4618 0000 76617269 		.ascii	"varint overflow\000"
 4618      6E74206F 
 4618      76657266 
 4618      6C6F7700 
 4619              		.section	.rodata.pb_make_string_substream.str1.4,"aMS",%progbits,1
 4620              		.align	2
 4621              	.LC11:
 4622 0000 70617265 		.ascii	"parent stream too short\000"
 4622      6E742073 
 4622      74726561 
 4622      6D20746F 
 4622      6F207368 
 4623              		.section	.rodata.pb_readbyte.str1.4,"aMS",%progbits,1
 4624              		.align	2
 4625              	.LC0:
 4626 0000 656E642D 		.ascii	"end-of-stream\000"
 4626      6F662D73 
 4626      74726561 
 4626      6D00
 4627 000e 0000     		.space	2
 4628              	.LC1:
 4629 0010 696F2065 		.ascii	"io error\000"
 4629      72726F72 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 126


 4629      00
 4630              		.section	.rodata.read_raw_value.str1.4,"aMS",%progbits,1
 4631              		.align	2
 4632              	.LC4:
 4633 0000 696E7661 		.ascii	"invalid wire_type\000"
 4633      6C696420 
 4633      77697265 
 4633      5F747970 
 4633      6500
 4634              		.text
 4635              	.Letext0:
 4636              		.file 2 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4637              		.file 3 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4638              		.file 4 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4639              		.file 5 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\lib\\gcc\\arm-none-eabi
 4640              		.file 6 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4641              		.file 7 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4642              		.file 8 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 4643              		.file 9 "nanopb/pb.h"
 4644              		.file 10 "nanopb/pb_decode.h"
 4645              		.file 11 "nanopb/pb_common.h"
 4646              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 127


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pb_decode.c
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:16     .text.buf_read:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:23     .text.buf_read:0000000000000000 buf_read
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:85     .text.pb_readbyte:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:91     .text.pb_readbyte:0000000000000000 pb_readbyte
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:174    .text.pb_readbyte:0000000000000038 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:180    .text.pb_decode_varint32_eof:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:186    .text.pb_decode_varint32_eof:0000000000000000 pb_decode_varint32_eof
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:387    .text.pb_decode_varint32_eof:00000000000000b8 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:393    .text.decode_pointer_field:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:399    .text.decode_pointer_field:0000000000000000 decode_pointer_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:428    .text.decode_pointer_field:0000000000000010 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:433    .text.iter_from_extension:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:439    .text.iter_from_extension:0000000000000000 iter_from_extension
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:505    .text.find_extension_field:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:511    .text.find_extension_field:0000000000000000 find_extension_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:565    .text.pb_field_set_to_default:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:571    .text.pb_field_set_to_default:0000000000000000 pb_field_set_to_default
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:789    .text.pb_message_set_to_defaults:0000000000000000 pb_message_set_to_defaults
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:783    .text.pb_message_set_to_defaults:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:842    .text.pb_read:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:849    .text.pb_read:0000000000000000 pb_read
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:992    .text.pb_read:0000000000000074 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:999    .text.pb_skip_varint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1005   .text.pb_skip_varint:0000000000000000 pb_skip_varint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1054   .text.read_raw_value:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1060   .text.read_raw_value:0000000000000000 read_raw_value
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1197   .text.read_raw_value:0000000000000074 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1202   .text.pb_istream_from_buffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1209   .text.pb_istream_from_buffer:0000000000000000 pb_istream_from_buffer
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1251   .text.pb_istream_from_buffer:0000000000000014 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1256   .text.pb_decode_varint32:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1263   .text.pb_decode_varint32:0000000000000000 pb_decode_varint32
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1287   .text.pb_skip_string:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1293   .text.pb_skip_string:0000000000000000 pb_skip_string
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1345   .text.pb_dec_fixed_length_bytes:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1351   .text.pb_dec_fixed_length_bytes:0000000000000000 pb_dec_fixed_length_bytes
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1457   .text.pb_dec_fixed_length_bytes:000000000000005c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1463   .text.pb_dec_string:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1469   .text.pb_dec_string:0000000000000000 pb_dec_string
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1599   .text.pb_dec_string:000000000000006c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1606   .text.pb_dec_bytes:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1612   .text.pb_dec_bytes:0000000000000000 pb_dec_bytes
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1758   .text.pb_dec_bytes:000000000000007c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1765   .text.pb_decode_varint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1772   .text.pb_decode_varint:0000000000000000 pb_decode_varint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1882   .text.pb_decode_varint:0000000000000070 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1887   .text.pb_dec_uvarint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:1893   .text.pb_dec_uvarint:0000000000000000 pb_dec_uvarint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2037   .text.pb_dec_uvarint:000000000000007c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2043   .text.pb_dec_varint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2049   .text.pb_dec_varint:0000000000000000 pb_dec_varint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2213   .text.pb_dec_varint:0000000000000080 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2219   .text.pb_decode_tag:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2226   .text.pb_decode_tag:0000000000000000 pb_decode_tag
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2316   .text.pb_skip_field:0000000000000000 $t
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 128


C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2323   .text.pb_skip_field:0000000000000000 pb_skip_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2341   .text.pb_skip_field:000000000000000a $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2347   .text.pb_skip_field:0000000000000010 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2408   .text.pb_skip_field:0000000000000040 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2413   .text.pb_make_string_substream:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2420   .text.pb_make_string_substream:0000000000000000 pb_make_string_substream
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2498   .text.pb_make_string_substream:000000000000003c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2503   .text.pb_close_string_substream:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2510   .text.pb_close_string_substream:0000000000000000 pb_close_string_substream
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2572   .text.decode_static_field:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2578   .text.decode_static_field:0000000000000000 decode_static_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2921   .text.decode_static_field:0000000000000130 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2928   .text.decode_callback_field:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:2934   .text.decode_callback_field:0000000000000000 decode_callback_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3098   .text.decode_callback_field:0000000000000094 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3104   .text.decode_field:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3110   .text.decode_field:0000000000000000 decode_field
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3177   .text.decode_field:0000000000000034 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3182   .text.default_extension_decoder:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3188   .text.default_extension_decoder:0000000000000000 default_extension_decoder
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3261   .text.decode_extension:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3267   .text.decode_extension:0000000000000000 decode_extension
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3370   .text.pb_decode_noinit:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3377   .text.pb_decode_noinit:0000000000000000 pb_decode_noinit
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3734   .text.pb_decode_noinit:0000000000000154 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3739   .text.pb_decode:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3746   .text.pb_decode:0000000000000000 pb_decode
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3789   .text.pb_dec_submessage:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3795   .text.pb_dec_submessage:0000000000000000 pb_dec_submessage
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3907   .text.pb_dec_submessage:0000000000000064 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3912   .text.pb_decode_delimited_noinit:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3919   .text.pb_decode_delimited_noinit:0000000000000000 pb_decode_delimited_noinit
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3992   .text.pb_decode_delimited:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:3999   .text.pb_decode_delimited:0000000000000000 pb_decode_delimited
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4072   .text.pb_decode_nullterminated:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4079   .text.pb_decode_nullterminated:0000000000000000 pb_decode_nullterminated
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4102   .text.pb_decode_svarint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4109   .text.pb_decode_svarint:0000000000000000 pb_decode_svarint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4183   .text.pb_dec_svarint:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4189   .text.pb_dec_svarint:0000000000000000 pb_dec_svarint
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4333   .text.pb_dec_svarint:000000000000007c $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4339   .text.pb_decode_fixed32:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4346   .text.pb_decode_fixed32:0000000000000000 pb_decode_fixed32
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4406   .text.pb_dec_fixed32:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4412   .text.pb_dec_fixed32:0000000000000000 pb_dec_fixed32
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4439   .text.pb_decode_fixed64:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4446   .text.pb_decode_fixed64:0000000000000000 pb_decode_fixed64
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4523   .text.pb_dec_fixed64:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4529   .text.pb_dec_fixed64:0000000000000000 pb_dec_fixed64
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4556   .rodata.PB_DECODERS:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4560   .rodata.PB_DECODERS:0000000000000000 PB_DECODERS
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4572   .rodata.decode_callback_field.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4576   .rodata.decode_pointer_field.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4580   .rodata.decode_static_field.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4587   .rodata.pb_dec_fixed_length_bytes.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4594   .rodata.pb_dec_string.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4601   .rodata.pb_dec_submessage.str1.4:0000000000000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cc58kxw5.s 			page 129


C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4605   .rodata.pb_dec_uvarint.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4612   .rodata.pb_decode_noinit.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4616   .rodata.pb_decode_varint32_eof.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4620   .rodata.pb_make_string_substream.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4624   .rodata.pb_readbyte.str1.4:0000000000000000 $d
C:\Users\User\AppData\Local\Temp\cc58kxw5.s:4631   .rodata.read_raw_value.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
pb_field_iter_begin
pb_field_iter_next
memcpy
memset
pb_field_iter_find
