ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f2xx_hal_flash_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.FLASH_MassErase,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	FLASH_MassErase:
  24              	.LVL0:
  25              	.LFB78:
  26              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @file    stm32f2xx_hal_flash_ex.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          functionalities of the FLASH extension peripheral:
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           + Extended programming operations functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *  
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   @verbatim
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                    ##### Flash Extension features #####
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****        of all STM32F2xx devices. It includes
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       (#) FLASH Memory Erase functions: 
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Erase function: Erase sector, erase all sectors
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       (#) Option Bytes Programming functions: Use HAL_FLASHEx_OBProgram() to :
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set/Reset the write protection
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set the Read protection Level
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set the BOR level
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Program the user Option Bytes
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 2


  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   @endverbatim
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @attention
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * All rights reserved.</center></h2>
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * the "License"; You may not use this file except in compliance with the
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * License. You may obtain a copy of the License at:
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #include "stm32f2xx_hal.h"
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup STM32F2xx_HAL_Driver
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Constants
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #define FLASH_TIMEOUT_VALUE       50000U   /* 50 s */
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Variables
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */    
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Option bytes control */
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static void               FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks);
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks);
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 3


  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDP_LevelConfig(uint8_t Level);
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby);
  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOR_LevelConfig(uint8_t Level);
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint16_t           FLASH_OB_GetWRP(void);
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** extern HAL_StatusTypeDef         FLASH_WaitForLastOperation(uint32_t Timeout);
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Exported functions --------------------------------------------------------*/
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASH Exported Functions
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *  @brief   Extended IO operation functions 
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** @verbatim   
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****  ===============================================================================
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****  ===============================================================================  
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     [..]
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extension FLASH 
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     programming operations.
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** @endverbatim
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors 
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param[out]  SectorError pointer to variable  that
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information on faulty sector in case of error 
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the sectors have been correctly erased)
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t index = 0U;
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 4


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Initialization of SectorError variable*/
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *SectorError = 0xFFFFFFFFU;
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Mass erase to be done*/
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* if the erase operation is completed, disable the MER Bit */
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       FLASH->CR &= (~FLASH_MER_BIT);
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     else
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Check the parameters */
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Erase by sector by sector to be done*/
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       for(index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the SER and SNB Bits */
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         if(status != HAL_OK) 
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty sector*/
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           *SectorError = index;
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         }
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       }
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Flush the caches to be sure of the data consistency */
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_FlushCaches();    
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Unlocked */
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors  with interrupt enable
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 5


 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation interrupt */
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Enable Error source interrupt */
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Clear pending flags (if any) */  
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Erase by sector to be done*/
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Check the parameters */
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE;
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Erase 1st sector and wait for IT*/
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_Erase_Sector(pEraseInit->Sector, pEraseInit->VoltageRange);
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Program option bytes
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 6


 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Write protection configuration*/
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPSector, pOBInit->Banks);
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     else
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPSector, pOBInit->Banks);
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Read protection configuration*/
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*USER  configuration*/
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig&OB_IWDG_SW, 
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STDBY_NO_RST);
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*BOR Level  configuration*/
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_BOR_LevelConfig(pOBInit->BORLevel);
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Unlocked */
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 7


 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get WRP*/
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->WRPSector = (uint32_t)FLASH_OB_GetWRP();
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get RDP Level*/
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->RDPLevel = (uint32_t)FLASH_OB_GetRDP();
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get USER*/
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->USERConfig = (uint8_t)FLASH_OB_GetUser();
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get BOR Level*/
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->BORLevel = (uint32_t)FLASH_OB_GetBOR();
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Sector FLASH sector to erase
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.  
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(VoltageRange == FLASH_VOLTAGE_RANGE_1)
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_2)
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_3)
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 8


 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Flush the instruction and data caches
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void FLASH_FlushCaches(void)
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Disable instruction cache  */
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset instruction cache */
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush data cache */
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Disable data cache  */
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset data cache */
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_RESET();
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_ENABLE();
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.  
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 9


 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** { 
  27              		.loc 1 436 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
  32              		.loc 1 438 3 view .LVU1
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
  33              		.loc 1 441 3 view .LVU2
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
  34              		.loc 1 442 3 view .LVU3
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase all sectors */
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
  35              		.loc 1 445 3 view .LVU4
  36 0000 074B     		ldr	r3, .L2
  37 0002 1A69     		ldr	r2, [r3, #16]
  38 0004 22F44072 		bic	r2, r2, #768
  39 0008 1A61     		str	r2, [r3, #16]
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_MER;
  40              		.loc 1 446 3 view .LVU5
  41              		.loc 1 446 13 is_stmt 0 view .LVU6
  42 000a 1A69     		ldr	r2, [r3, #16]
  43 000c 42F00402 		orr	r2, r2, #4
  44 0010 1A61     		str	r2, [r3, #16]
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange <<8U);
  45              		.loc 1 447 3 is_stmt 1 view .LVU7
  46              		.loc 1 447 13 is_stmt 0 view .LVU8
  47 0012 1A69     		ldr	r2, [r3, #16]
  48 0014 42EA0020 		orr	r0, r2, r0, lsl #8
  49              	.LVL1:
  50              		.loc 1 447 13 view .LVU9
  51 0018 40F48030 		orr	r0, r0, #65536
  52 001c 1861     		str	r0, [r3, #16]
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
  53              		.loc 1 448 1 view .LVU10
  54 001e 7047     		bx	lr
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0020 003C0240 		.word	1073888256
  59              		.cfi_endproc
  60              	.LFE78:
  62              		.section	.text.FLASH_OB_BOR_LevelConfig,"ax",%progbits
  63              		.align	1
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 10


  69              	FLASH_OB_BOR_LevelConfig:
  70              	.LVL2:
  71              	.LFB83:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank 1 sectors
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM3  
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status 
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~WRPSector);  
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank 1 sectors
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector if CortexM3  
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 11


 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector; 
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Level specifies the read protection level.
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *   
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note WARNING: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *    
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t Level)
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(Level));
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = Level;
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Iwdg Selects the IWDG mode
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 12


 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Stop Reset event when entering STOP mode.
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STOP_NO_RST: No reset generated when entering in STOP
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Stdby Reset event when entering Standby mode.
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STDBY_NO_RST: No reset generated when entering in STANDBY
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby)
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(Iwdg));
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Update User Option Byte */
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = Iwdg | (uint8_t)(Stdby | (uint8_t)(Stop | ((uint8_t)opti
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status; 
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Set the BOR Level. 
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Level specifies the Option Bytes BOR Reset Level.
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BOR_LevelConfig(uint8_t Level)
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
  72              		.loc 1 608 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(Level));
  77              		.loc 1 610 3 view .LVU12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 13


 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Set the BOR Level */
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
  78              		.loc 1 613 3 view .LVU13
  79              		.loc 1 613 40 is_stmt 0 view .LVU14
  80 0000 044B     		ldr	r3, .L5
  81 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  82 0004 02F0F302 		and	r2, r2, #243
  83 0008 1A70     		strb	r2, [r3]
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= Level;
  84              		.loc 1 614 3 is_stmt 1 view .LVU15
  85              		.loc 1 614 40 is_stmt 0 view .LVU16
  86 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  87 000c 1043     		orrs	r0, r0, r2
  88              	.LVL3:
  89              		.loc 1 614 40 view .LVU17
  90 000e 1870     		strb	r0, [r3]
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return HAL_OK;
  91              		.loc 1 616 3 is_stmt 1 view .LVU18
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
  92              		.loc 1 618 1 is_stmt 0 view .LVU19
  93 0010 0020     		movs	r0, #0
  94 0012 7047     		bx	lr
  95              	.L6:
  96              		.align	2
  97              	.L5:
  98 0014 143C0240 		.word	1073888276
  99              		.cfi_endproc
 100              	.LFE83:
 102              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	FLASH_OB_GetUser:
 110              	.LFB84:
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint8_t FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         and RST_STDBY(Bit2).
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 111              		.loc 1 626 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the User Option Byte */
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return ((uint8_t)(FLASH->OPTCR & 0xE0));
 116              		.loc 1 628 3 view .LVU21
 117              		.loc 1 628 26 is_stmt 0 view .LVU22
 118 0000 024B     		ldr	r3, .L8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 14


 119 0002 5869     		ldr	r0, [r3, #20]
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 120              		.loc 1 629 1 view .LVU23
 121 0004 00F0E000 		and	r0, r0, #224
 122 0008 7047     		bx	lr
 123              	.L9:
 124 000a 00BF     		.align	2
 125              	.L8:
 126 000c 003C0240 		.word	1073888256
 127              		.cfi_endproc
 128              	.LFE84:
 130              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	FLASH_OB_GetWRP:
 138              	.LFB85:
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint16_t FLASH Write Protection Option Bytes value
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint16_t FLASH_OB_GetWRP(void)
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 139              		.loc 1 636 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 144              		.loc 1 638 3 view .LVU25
 145              		.loc 1 638 11 is_stmt 0 view .LVU26
 146 0000 014B     		ldr	r3, .L11
 147 0002 1888     		ldrh	r0, [r3]
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 148              		.loc 1 639 1 view .LVU27
 149 0004 7047     		bx	lr
 150              	.L12:
 151 0006 00BF     		.align	2
 152              	.L11:
 153 0008 163C0240 		.word	1073888278
 154              		.cfi_endproc
 155              	.LFE85:
 157              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	FLASH_OB_GetRDP:
 165              	.LFB86:
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 15


 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 166              		.loc 1 650 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t readstatus = OB_RDP_LEVEL_0;
 171              		.loc 1 651 3 view .LVU29
 172              	.LVL4:
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_2))
 173              		.loc 1 653 3 view .LVU30
 174              		.loc 1 653 7 is_stmt 0 view .LVU31
 175 0000 074B     		ldr	r3, .L18
 176 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 0004 DBB2     		uxtb	r3, r3
 178              		.loc 1 653 5 view .LVU32
 179 0006 CC2B     		cmp	r3, #204
 180 0008 08D0     		beq	.L15
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_2;
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_0))
 181              		.loc 1 657 8 is_stmt 1 view .LVU33
 182              		.loc 1 657 12 is_stmt 0 view .LVU34
 183 000a 054B     		ldr	r3, .L18
 184 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 185 000e DBB2     		uxtb	r3, r3
 186              		.loc 1 657 10 view .LVU35
 187 0010 AA2B     		cmp	r3, #170
 188 0012 01D0     		beq	.L17
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_0;
 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else 
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_1;
 189              		.loc 1 663 16 view .LVU36
 190 0014 5520     		movs	r0, #85
 191              	.LVL5:
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return readstatus;
 192              		.loc 1 666 3 is_stmt 1 view .LVU37
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 193              		.loc 1 667 1 is_stmt 0 view .LVU38
 194 0016 7047     		bx	lr
 195              	.LVL6:
 196              	.L17:
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 16


 197              		.loc 1 659 16 view .LVU39
 198 0018 AA20     		movs	r0, #170
 199 001a 7047     		bx	lr
 200              	.L15:
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 201              		.loc 1 655 16 view .LVU40
 202 001c CC20     		movs	r0, #204
 203 001e 7047     		bx	lr
 204              	.L19:
 205              		.align	2
 206              	.L18:
 207 0020 153C0240 		.word	1073888277
 208              		.cfi_endproc
 209              	.LFE86:
 211              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	FLASH_OB_GetBOR:
 219              	.LFB87:
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint8_t The FLASH BOR level:
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 220              		.loc 1 678 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the FLASH BOR level */
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 225              		.loc 1 680 3 view .LVU42
 226              		.loc 1 680 10 is_stmt 0 view .LVU43
 227 0000 024B     		ldr	r3, .L21
 228 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 229              		.loc 1 681 1 view .LVU44
 230 0004 00F00C00 		and	r0, r0, #12
 231 0008 7047     		bx	lr
 232              	.L22:
 233 000a 00BF     		.align	2
 234              	.L21:
 235 000c 143C0240 		.word	1073888276
 236              		.cfi_endproc
 237              	.LFE87:
 239              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 240              		.align	1
 241              		.syntax unified
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 17


 242              		.thumb
 243              		.thumb_func
 244              		.fpu softvfp
 246              	FLASH_OB_EnableWRP:
 247              	.LVL7:
 248              	.LFB79:
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 249              		.loc 1 467 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 253              		.loc 1 467 1 is_stmt 0 view .LVU46
 254 0000 10B5     		push	{r4, lr}
 255              	.LCFI0:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 4, -8
 258              		.cfi_offset 14, -4
 259 0002 0446     		mov	r4, r0
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 260              		.loc 1 468 3 is_stmt 1 view .LVU47
 261              	.LVL8:
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 262              		.loc 1 471 3 view .LVU48
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 263              		.loc 1 474 3 view .LVU49
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 264              		.loc 1 475 3 view .LVU50
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 265              		.loc 1 478 3 view .LVU51
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 266              		.loc 1 478 12 is_stmt 0 view .LVU52
 267 0004 4CF25030 		movw	r0, #50000
 268              	.LVL9:
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 269              		.loc 1 478 12 view .LVU53
 270 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 271              	.LVL10:
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 272              		.loc 1 480 3 is_stmt 1 view .LVU54
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 273              		.loc 1 480 5 is_stmt 0 view .LVU55
 274 000c 0346     		mov	r3, r0
 275 000e 20B9     		cbnz	r0, .L24
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 276              		.loc 1 482 5 is_stmt 1 view .LVU56
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 277              		.loc 1 482 42 is_stmt 0 view .LVU57
 278 0010 034A     		ldr	r2, .L26
 279 0012 1088     		ldrh	r0, [r2]
 280              	.LVL11:
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 281              		.loc 1 482 42 view .LVU58
 282 0014 20EA0400 		bic	r0, r0, r4
 283 0018 1080     		strh	r0, [r2]	@ movhi
 284              	.L24:
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 18


 285              		.loc 1 485 3 is_stmt 1 view .LVU59
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 286              		.loc 1 486 1 is_stmt 0 view .LVU60
 287 001a 1846     		mov	r0, r3
 288 001c 10BD     		pop	{r4, pc}
 289              	.LVL12:
 290              	.L27:
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 291              		.loc 1 486 1 view .LVU61
 292 001e 00BF     		.align	2
 293              	.L26:
 294 0020 163C0240 		.word	1073888278
 295              		.cfi_endproc
 296              	.LFE79:
 298              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 299              		.align	1
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	FLASH_OB_DisableWRP:
 306              	.LVL13:
 307              	.LFB80:
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 308              		.loc 1 505 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 312              		.loc 1 505 1 is_stmt 0 view .LVU63
 313 0000 10B5     		push	{r4, lr}
 314              	.LCFI1:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 4, -8
 317              		.cfi_offset 14, -4
 318 0002 0446     		mov	r4, r0
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 319              		.loc 1 506 3 is_stmt 1 view .LVU64
 320              	.LVL14:
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 321              		.loc 1 509 3 view .LVU65
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 322              		.loc 1 512 3 view .LVU66
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 323              		.loc 1 513 3 view .LVU67
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 324              		.loc 1 516 3 view .LVU68
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 325              		.loc 1 516 12 is_stmt 0 view .LVU69
 326 0004 4CF25030 		movw	r0, #50000
 327              	.LVL15:
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 328              		.loc 1 516 12 view .LVU70
 329 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 330              	.LVL16:
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 331              		.loc 1 518 3 is_stmt 1 view .LVU71
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 19


 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 332              		.loc 1 518 5 is_stmt 0 view .LVU72
 333 000c 0346     		mov	r3, r0
 334 000e 20B9     		cbnz	r0, .L29
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 335              		.loc 1 520 5 is_stmt 1 view .LVU73
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 336              		.loc 1 520 42 is_stmt 0 view .LVU74
 337 0010 034A     		ldr	r2, .L31
 338 0012 1188     		ldrh	r1, [r2]
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 339              		.loc 1 520 45 view .LVU75
 340 0014 A4B2     		uxth	r4, r4
 341              	.LVL17:
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 342              		.loc 1 520 42 view .LVU76
 343 0016 0C43     		orrs	r4, r4, r1
 344 0018 1480     		strh	r4, [r2]	@ movhi
 345              	.L29:
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 346              		.loc 1 523 3 is_stmt 1 view .LVU77
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 347              		.loc 1 524 1 is_stmt 0 view .LVU78
 348 001a 1846     		mov	r0, r3
 349              	.LVL18:
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 350              		.loc 1 524 1 view .LVU79
 351 001c 10BD     		pop	{r4, pc}
 352              	.L32:
 353 001e 00BF     		.align	2
 354              	.L31:
 355 0020 163C0240 		.word	1073888278
 356              		.cfi_endproc
 357              	.LFE80:
 359              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	FLASH_OB_RDP_LevelConfig:
 367              	.LVL19:
 368              	.LFB81:
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 369              		.loc 1 539 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 373              		.loc 1 539 1 is_stmt 0 view .LVU81
 374 0000 10B5     		push	{r4, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 379 0002 0446     		mov	r4, r0
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 20


 380              		.loc 1 540 3 is_stmt 1 view .LVU82
 381              	.LVL20:
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 382              		.loc 1 543 3 view .LVU83
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 383              		.loc 1 546 3 view .LVU84
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 384              		.loc 1 546 12 is_stmt 0 view .LVU85
 385 0004 4CF25030 		movw	r0, #50000
 386              	.LVL21:
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 387              		.loc 1 546 12 view .LVU86
 388 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 389              	.LVL22:
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 390              		.loc 1 548 3 is_stmt 1 view .LVU87
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 391              		.loc 1 548 5 is_stmt 0 view .LVU88
 392 000c 0346     		mov	r3, r0
 393 000e 08B9     		cbnz	r0, .L34
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 394              		.loc 1 550 5 is_stmt 1 view .LVU89
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 395              		.loc 1 550 41 is_stmt 0 view .LVU90
 396 0010 014A     		ldr	r2, .L36
 397 0012 1470     		strb	r4, [r2]
 398              	.L34:
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 399              		.loc 1 553 3 is_stmt 1 view .LVU91
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 400              		.loc 1 554 1 is_stmt 0 view .LVU92
 401 0014 1846     		mov	r0, r3
 402              	.LVL23:
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 403              		.loc 1 554 1 view .LVU93
 404 0016 10BD     		pop	{r4, pc}
 405              	.L37:
 406              		.align	2
 407              	.L36:
 408 0018 153C0240 		.word	1073888277
 409              		.cfi_endproc
 410              	.LFE81:
 412              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 413              		.align	1
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	FLASH_OB_UserConfig:
 420              	.LVL24:
 421              	.LFB82:
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 422              		.loc 1 573 1 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 21


 426              		.loc 1 573 1 is_stmt 0 view .LVU95
 427 0000 70B5     		push	{r4, r5, r6, lr}
 428              	.LCFI3:
 429              		.cfi_def_cfa_offset 16
 430              		.cfi_offset 4, -16
 431              		.cfi_offset 5, -12
 432              		.cfi_offset 6, -8
 433              		.cfi_offset 14, -4
 434 0002 0446     		mov	r4, r0
 435 0004 0E46     		mov	r6, r1
 436 0006 1546     		mov	r5, r2
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 437              		.loc 1 574 3 is_stmt 1 view .LVU96
 438              	.LVL25:
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 439              		.loc 1 575 3 view .LVU97
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 440              		.loc 1 578 3 view .LVU98
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 441              		.loc 1 579 3 view .LVU99
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 442              		.loc 1 580 3 view .LVU100
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 443              		.loc 1 583 3 view .LVU101
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 444              		.loc 1 583 12 is_stmt 0 view .LVU102
 445 0008 4CF25030 		movw	r0, #50000
 446              	.LVL26:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 447              		.loc 1 583 12 view .LVU103
 448 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 449              	.LVL27:
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 450              		.loc 1 585 3 is_stmt 1 view .LVU104
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 451              		.loc 1 585 5 is_stmt 0 view .LVU105
 452 0010 0346     		mov	r3, r0
 453 0012 38B9     		cbnz	r0, .L39
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 454              		.loc 1 588 5 is_stmt 1 view .LVU106
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 455              		.loc 1 588 67 is_stmt 0 view .LVU107
 456 0014 044A     		ldr	r2, .L41
 457 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 458              	.LVL28:
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 459              		.loc 1 588 15 view .LVU108
 460 0018 00F01F00 		and	r0, r0, #31
 461              	.LVL29:
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 462              		.loc 1 591 5 is_stmt 1 view .LVU109
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 463              		.loc 1 591 69 is_stmt 0 view .LVU110
 464 001c 3043     		orrs	r0, r0, r6
 465              	.LVL30:
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 466              		.loc 1 591 51 view .LVU111
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 22


 467 001e 2843     		orrs	r0, r0, r5
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 468              		.loc 1 591 42 view .LVU112
 469 0020 2043     		orrs	r0, r0, r4
 470 0022 1070     		strb	r0, [r2]
 471              	.L39:
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 472              		.loc 1 594 3 is_stmt 1 view .LVU113
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 473              		.loc 1 595 1 is_stmt 0 view .LVU114
 474 0024 1846     		mov	r0, r3
 475 0026 70BD     		pop	{r4, r5, r6, pc}
 476              	.L42:
 477              		.align	2
 478              	.L41:
 479 0028 143C0240 		.word	1073888276
 480              		.cfi_endproc
 481              	.LFE82:
 483              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 484              		.align	1
 485              		.global	HAL_FLASHEx_OBProgram
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	HAL_FLASHEx_OBProgram:
 492              	.LVL31:
 493              	.LFB74:
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 494              		.loc 1 258 1 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 498              		.loc 1 259 3 view .LVU116
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 499              		.loc 1 262 3 view .LVU117
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 500              		.loc 1 262 3 view .LVU118
 501 0000 1F4B     		ldr	r3, .L60
 502 0002 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 503 0004 012B     		cmp	r3, #1
 504 0006 38D0     		beq	.L50
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 505              		.loc 1 258 1 is_stmt 0 discriminator 2 view .LVU119
 506 0008 10B5     		push	{r4, lr}
 507              	.LCFI4:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
 511 000a 0446     		mov	r4, r0
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 512              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU120
 513 000c 1C4B     		ldr	r3, .L60
 514 000e 0122     		movs	r2, #1
 515 0010 1A76     		strb	r2, [r3, #24]
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 23


 516              		.loc 1 265 3 discriminator 2 view .LVU121
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 517              		.loc 1 268 3 discriminator 2 view .LVU122
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 518              		.loc 1 268 14 is_stmt 0 discriminator 2 view .LVU123
 519 0012 0368     		ldr	r3, [r0]
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 520              		.loc 1 268 5 discriminator 2 view .LVU124
 521 0014 13F0010F 		tst	r3, #1
 522 0018 0CD0     		beq	.L51
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 523              		.loc 1 270 5 is_stmt 1 view .LVU125
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 524              		.loc 1 271 5 view .LVU126
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 525              		.loc 1 271 15 is_stmt 0 view .LVU127
 526 001a 4368     		ldr	r3, [r0, #4]
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 527              		.loc 1 271 7 view .LVU128
 528 001c 9342     		cmp	r3, r2
 529 001e 04D0     		beq	.L56
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 530              		.loc 1 279 7 is_stmt 1 view .LVU129
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 531              		.loc 1 279 16 is_stmt 0 view .LVU130
 532 0020 C168     		ldr	r1, [r0, #12]
 533 0022 8068     		ldr	r0, [r0, #8]
 534              	.LVL32:
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 535              		.loc 1 279 16 view .LVU131
 536 0024 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 537              	.LVL33:
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 538              		.loc 1 279 16 view .LVU132
 539 0028 05E0     		b	.L45
 540              	.LVL34:
 541              	.L56:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 542              		.loc 1 274 7 is_stmt 1 view .LVU133
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 543              		.loc 1 274 16 is_stmt 0 view .LVU134
 544 002a C168     		ldr	r1, [r0, #12]
 545 002c 8068     		ldr	r0, [r0, #8]
 546              	.LVL35:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 547              		.loc 1 274 16 view .LVU135
 548 002e FFF7FEFF 		bl	FLASH_OB_EnableWRP
 549              	.LVL36:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 550              		.loc 1 274 16 view .LVU136
 551 0032 00E0     		b	.L45
 552              	.LVL37:
 553              	.L51:
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 554              		.loc 1 259 21 view .LVU137
 555 0034 0120     		movs	r0, #1
 556              	.LVL38:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 24


 557              	.L45:
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 558              		.loc 1 284 3 is_stmt 1 view .LVU138
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 559              		.loc 1 284 14 is_stmt 0 view .LVU139
 560 0036 2368     		ldr	r3, [r4]
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 561              		.loc 1 284 5 view .LVU140
 562 0038 13F0020F 		tst	r3, #2
 563 003c 0BD1     		bne	.L57
 564              	.L47:
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 565              		.loc 1 290 3 is_stmt 1 view .LVU141
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 566              		.loc 1 290 14 is_stmt 0 view .LVU142
 567 003e 2368     		ldr	r3, [r4]
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 568              		.loc 1 290 5 view .LVU143
 569 0040 13F0040F 		tst	r3, #4
 570 0044 0BD1     		bne	.L58
 571              	.L48:
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 572              		.loc 1 298 3 is_stmt 1 view .LVU144
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 573              		.loc 1 298 14 is_stmt 0 view .LVU145
 574 0046 2368     		ldr	r3, [r4]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 575              		.loc 1 298 5 view .LVU146
 576 0048 13F0080F 		tst	r3, #8
 577 004c 11D1     		bne	.L59
 578              	.L49:
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 579              		.loc 1 304 3 is_stmt 1 view .LVU147
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 580              		.loc 1 304 3 view .LVU148
 581 004e 0C4B     		ldr	r3, .L60
 582 0050 0022     		movs	r2, #0
 583 0052 1A76     		strb	r2, [r3, #24]
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 584              		.loc 1 306 3 view .LVU149
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 585              		.loc 1 307 1 is_stmt 0 view .LVU150
 586 0054 10BD     		pop	{r4, pc}
 587              	.LVL39:
 588              	.L57:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 589              		.loc 1 286 5 is_stmt 1 view .LVU151
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 590              		.loc 1 286 14 is_stmt 0 view .LVU152
 591 0056 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 592              	.LVL40:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 593              		.loc 1 286 14 view .LVU153
 594 0058 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 595              	.LVL41:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 596              		.loc 1 286 14 view .LVU154
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 25


 597 005c EFE7     		b	.L47
 598              	.L58:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 599              		.loc 1 292 5 is_stmt 1 view .LVU155
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 600              		.loc 1 292 41 is_stmt 0 view .LVU156
 601 005e 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 602              	.LVL42:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 603              		.loc 1 292 14 view .LVU157
 604 0060 00F08002 		and	r2, r0, #128
 605 0064 00F04001 		and	r1, r0, #64
 606 0068 00F02000 		and	r0, r0, #32
 607 006c FFF7FEFF 		bl	FLASH_OB_UserConfig
 608              	.LVL43:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 609              		.loc 1 292 14 view .LVU158
 610 0070 E9E7     		b	.L48
 611              	.L59:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 612              		.loc 1 300 5 is_stmt 1 view .LVU159
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 613              		.loc 1 300 14 is_stmt 0 view .LVU160
 614 0072 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 615              	.LVL44:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 616              		.loc 1 300 14 view .LVU161
 617 0074 FFF7FEFF 		bl	FLASH_OB_BOR_LevelConfig
 618              	.LVL45:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 619              		.loc 1 300 14 view .LVU162
 620 0078 E9E7     		b	.L49
 621              	.LVL46:
 622              	.L50:
 623              	.LCFI5:
 624              		.cfi_def_cfa_offset 0
 625              		.cfi_restore 4
 626              		.cfi_restore 14
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 627              		.loc 1 262 3 view .LVU163
 628 007a 0220     		movs	r0, #2
 629              	.LVL47:
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 630              		.loc 1 307 1 view .LVU164
 631 007c 7047     		bx	lr
 632              	.L61:
 633 007e 00BF     		.align	2
 634              	.L60:
 635 0080 00000000 		.word	pFlash
 636              		.cfi_endproc
 637              	.LFE74:
 639              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 640              		.align	1
 641              		.global	HAL_FLASHEx_OBGetConfig
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 26


 645              		.fpu softvfp
 647              	HAL_FLASHEx_OBGetConfig:
 648              	.LVL48:
 649              	.LFB75:
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 650              		.loc 1 317 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 654              		.loc 1 317 1 is_stmt 0 view .LVU166
 655 0000 10B5     		push	{r4, lr}
 656              	.LCFI6:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660 0002 0446     		mov	r4, r0
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 661              		.loc 1 318 3 is_stmt 1 view .LVU167
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 662              		.loc 1 318 23 is_stmt 0 view .LVU168
 663 0004 0F23     		movs	r3, #15
 664 0006 0360     		str	r3, [r0]
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 665              		.loc 1 321 3 is_stmt 1 view .LVU169
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 666              		.loc 1 321 34 is_stmt 0 view .LVU170
 667 0008 FFF7FEFF 		bl	FLASH_OB_GetWRP
 668              	.LVL49:
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 669              		.loc 1 321 22 view .LVU171
 670 000c A060     		str	r0, [r4, #8]
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 671              		.loc 1 324 3 is_stmt 1 view .LVU172
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 672              		.loc 1 324 33 is_stmt 0 view .LVU173
 673 000e FFF7FEFF 		bl	FLASH_OB_GetRDP
 674              	.LVL50:
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 675              		.loc 1 324 21 view .LVU174
 676 0012 2061     		str	r0, [r4, #16]
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 677              		.loc 1 327 3 is_stmt 1 view .LVU175
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 678              		.loc 1 327 34 is_stmt 0 view .LVU176
 679 0014 FFF7FEFF 		bl	FLASH_OB_GetUser
 680              	.LVL51:
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 681              		.loc 1 327 23 view .LVU177
 682 0018 2076     		strb	r0, [r4, #24]
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 683              		.loc 1 330 3 is_stmt 1 view .LVU178
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 684              		.loc 1 330 33 is_stmt 0 view .LVU179
 685 001a FFF7FEFF 		bl	FLASH_OB_GetBOR
 686              	.LVL52:
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 27


 687              		.loc 1 330 21 view .LVU180
 688 001e 6061     		str	r0, [r4, #20]
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 689              		.loc 1 331 1 view .LVU181
 690 0020 10BD     		pop	{r4, pc}
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 691              		.loc 1 331 1 view .LVU182
 692              		.cfi_endproc
 693              	.LFE75:
 695              		.section	.text.FLASH_Erase_Sector,"ax",%progbits
 696              		.align	1
 697              		.global	FLASH_Erase_Sector
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu softvfp
 703              	FLASH_Erase_Sector:
 704              	.LVL53:
 705              	.LFB76:
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 706              		.loc 1 355 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 711              		.loc 1 355 1 is_stmt 0 view .LVU184
 712 0000 10B4     		push	{r4}
 713              	.LCFI7:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 4, -4
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 716              		.loc 1 356 3 is_stmt 1 view .LVU185
 717              	.LVL54:
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 718              		.loc 1 359 3 view .LVU186
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 719              		.loc 1 360 3 view .LVU187
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 720              		.loc 1 362 3 view .LVU188
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 721              		.loc 1 362 5 is_stmt 0 view .LVU189
 722 0002 49B1     		cbz	r1, .L66
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 723              		.loc 1 366 8 is_stmt 1 view .LVU190
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 724              		.loc 1 366 10 is_stmt 0 view .LVU191
 725 0004 0129     		cmp	r1, #1
 726 0006 25D0     		beq	.L67
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 727              		.loc 1 370 8 is_stmt 1 view .LVU192
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 728              		.loc 1 370 10 is_stmt 0 view .LVU193
 729 0008 0229     		cmp	r1, #2
 730 000a 02D0     		beq	.L70
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 731              		.loc 1 376 15 view .LVU194
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 28


 732 000c 4FF44074 		mov	r4, #768
 733 0010 03E0     		b	.L65
 734              	.L70:
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 735              		.loc 1 372 15 view .LVU195
 736 0012 4FF40074 		mov	r4, #512
 737 0016 00E0     		b	.L65
 738              	.L66:
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 739              		.loc 1 364 16 view .LVU196
 740 0018 0024     		movs	r4, #0
 741              	.L65:
 742              	.LVL55:
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 743              		.loc 1 380 3 is_stmt 1 view .LVU197
 744 001a 104B     		ldr	r3, .L71
 745 001c 1969     		ldr	r1, [r3, #16]
 746              	.LVL56:
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 747              		.loc 1 380 3 is_stmt 0 view .LVU198
 748 001e 21F44071 		bic	r1, r1, #768
 749 0022 1961     		str	r1, [r3, #16]
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 750              		.loc 1 381 3 is_stmt 1 view .LVU199
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 751              		.loc 1 381 13 is_stmt 0 view .LVU200
 752 0024 1A69     		ldr	r2, [r3, #16]
 753 0026 2243     		orrs	r2, r2, r4
 754 0028 1A61     		str	r2, [r3, #16]
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 755              		.loc 1 382 3 is_stmt 1 view .LVU201
 756 002a 1A69     		ldr	r2, [r3, #16]
 757 002c 22F0F802 		bic	r2, r2, #248
 758 0030 1A61     		str	r2, [r3, #16]
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 759              		.loc 1 383 3 view .LVU202
 760              	.LVL57:
 761              	.LBB4:
 762              	.LBI4:
 763              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 29


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 30


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 31


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 32


 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 33


 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 34


 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 35


 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 36


 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 37


 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 38


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 39


 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 40


 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 41


 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 42


 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 43


 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 44


 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 45


 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 764              		.loc 2 981 31 view .LVU203
 765              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 766              		.loc 2 983 3 view .LVU204
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 46


 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 767              		.loc 2 988 4 view .LVU205
 768 0032 F822     		movs	r2, #248
 769              		.syntax unified
 770              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 771 0034 92FAA2F2 		rbit r2, r2
 772              	@ 0 "" 2
 773              	.LVL58:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 774              		.loc 2 1001 3 view .LVU206
 775              		.loc 2 1001 3 is_stmt 0 view .LVU207
 776              		.thumb
 777              		.syntax unified
 778              	.LBE5:
 779              	.LBE4:
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 780              		.loc 1 383 39 view .LVU208
 781 0038 B2FA82F2 		clz	r2, r2
 782 003c 9040     		lsls	r0, r0, r2
 783              	.LVL59:
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 784              		.loc 1 383 29 view .LVU209
 785 003e 40F00200 		orr	r0, r0, #2
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 786              		.loc 1 383 13 view .LVU210
 787 0042 1A69     		ldr	r2, [r3, #16]
 788 0044 1043     		orrs	r0, r0, r2
 789 0046 1861     		str	r0, [r3, #16]
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 790              		.loc 1 384 3 is_stmt 1 view .LVU211
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 791              		.loc 1 384 13 is_stmt 0 view .LVU212
 792 0048 1A69     		ldr	r2, [r3, #16]
 793 004a 42F48032 		orr	r2, r2, #65536
 794 004e 1A61     		str	r2, [r3, #16]
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 795              		.loc 1 385 1 view .LVU213
 796 0050 10BC     		pop	{r4}
 797              	.LCFI8:
 798              		.cfi_remember_state
 799              		.cfi_restore 4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 47


 800              		.cfi_def_cfa_offset 0
 801              	.LVL60:
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 802              		.loc 1 385 1 view .LVU214
 803 0052 7047     		bx	lr
 804              	.LVL61:
 805              	.L67:
 806              	.LCFI9:
 807              		.cfi_restore_state
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 808              		.loc 1 368 15 view .LVU215
 809 0054 4FF48074 		mov	r4, #256
 810 0058 DFE7     		b	.L65
 811              	.L72:
 812 005a 00BF     		.align	2
 813              	.L71:
 814 005c 003C0240 		.word	1073888256
 815              		.cfi_endproc
 816              	.LFE76:
 818              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 819              		.align	1
 820              		.global	HAL_FLASHEx_Erase_IT
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu softvfp
 826              	HAL_FLASHEx_Erase_IT:
 827              	.LVL62:
 828              	.LFB73:
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 829              		.loc 1 205 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 833              		.loc 1 205 1 is_stmt 0 view .LVU217
 834 0000 08B5     		push	{r3, lr}
 835              	.LCFI10:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 3, -8
 838              		.cfi_offset 14, -4
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 839              		.loc 1 206 3 is_stmt 1 view .LVU218
 840              	.LVL63:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 841              		.loc 1 209 3 view .LVU219
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 842              		.loc 1 209 3 view .LVU220
 843 0002 184B     		ldr	r3, .L79
 844 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 845 0006 012B     		cmp	r3, #1
 846 0008 29D0     		beq	.L76
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 847              		.loc 1 209 3 discriminator 2 view .LVU221
 848 000a 164B     		ldr	r3, .L79
 849 000c 0122     		movs	r2, #1
 850 000e 1A76     		strb	r2, [r3, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 48


 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 851              		.loc 1 212 3 discriminator 2 view .LVU222
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 852              		.loc 1 215 3 discriminator 2 view .LVU223
 853 0010 154B     		ldr	r3, .L79+4
 854 0012 1A69     		ldr	r2, [r3, #16]
 855 0014 42F08072 		orr	r2, r2, #16777216
 856 0018 1A61     		str	r2, [r3, #16]
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 857              		.loc 1 218 3 discriminator 2 view .LVU224
 858 001a 1A69     		ldr	r2, [r3, #16]
 859 001c 42F00072 		orr	r2, r2, #33554432
 860 0020 1A61     		str	r2, [r3, #16]
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 861              		.loc 1 221 3 discriminator 2 view .LVU225
 862 0022 F322     		movs	r2, #243
 863 0024 DA60     		str	r2, [r3, #12]
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 864              		.loc 1 224 3 discriminator 2 view .LVU226
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 865              		.loc 1 224 16 is_stmt 0 discriminator 2 view .LVU227
 866 0026 0368     		ldr	r3, [r0]
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 867              		.loc 1 224 5 discriminator 2 view .LVU228
 868 0028 012B     		cmp	r3, #1
 869 002a 0DD0     		beq	.L78
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 870              		.loc 1 236 5 is_stmt 1 view .LVU229
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 871              		.loc 1 238 5 view .LVU230
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 872              		.loc 1 238 29 is_stmt 0 view .LVU231
 873 002c 0D4B     		ldr	r3, .L79
 874 002e 0122     		movs	r2, #1
 875 0030 1A70     		strb	r2, [r3]
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 876              		.loc 1 239 5 is_stmt 1 view .LVU232
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 877              		.loc 1 239 41 is_stmt 0 view .LVU233
 878 0032 C268     		ldr	r2, [r0, #12]
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 879              		.loc 1 239 29 view .LVU234
 880 0034 5A60     		str	r2, [r3, #4]
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 881              		.loc 1 240 5 is_stmt 1 view .LVU235
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 882              		.loc 1 240 31 is_stmt 0 view .LVU236
 883 0036 8268     		ldr	r2, [r0, #8]
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 884              		.loc 1 240 19 view .LVU237
 885 0038 DA60     		str	r2, [r3, #12]
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 886              		.loc 1 241 5 is_stmt 1 view .LVU238
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 887              		.loc 1 241 30 is_stmt 0 view .LVU239
 888 003a 017C     		ldrb	r1, [r0, #16]	@ zero_extendqisi2
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 49


 889              		.loc 1 241 28 view .LVU240
 890 003c 1972     		strb	r1, [r3, #8]
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 891              		.loc 1 244 5 is_stmt 1 view .LVU241
 892 003e 8068     		ldr	r0, [r0, #8]
 893              	.LVL64:
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 894              		.loc 1 244 5 is_stmt 0 view .LVU242
 895 0040 FFF7FEFF 		bl	FLASH_Erase_Sector
 896              	.LVL65:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 897              		.loc 1 247 10 view .LVU243
 898 0044 0020     		movs	r0, #0
 899              	.L74:
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 900              		.loc 1 248 1 view .LVU244
 901 0046 08BD     		pop	{r3, pc}
 902              	.LVL66:
 903              	.L78:
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 904              		.loc 1 227 5 is_stmt 1 view .LVU245
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 905              		.loc 1 227 29 is_stmt 0 view .LVU246
 906 0048 064B     		ldr	r3, .L79
 907 004a 0222     		movs	r2, #2
 908 004c 1A70     		strb	r2, [r3]
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 909              		.loc 1 228 5 is_stmt 1 view .LVU247
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 910              		.loc 1 228 29 is_stmt 0 view .LVU248
 911 004e 4268     		ldr	r2, [r0, #4]
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 912              		.loc 1 228 17 view .LVU249
 913 0050 1A61     		str	r2, [r3, #16]
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 914              		.loc 1 229 5 is_stmt 1 view .LVU250
 915 0052 4168     		ldr	r1, [r0, #4]
 916 0054 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 917              	.LVL67:
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 918              		.loc 1 229 5 is_stmt 0 view .LVU251
 919 0056 FFF7FEFF 		bl	FLASH_MassErase
 920              	.LVL68:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 921              		.loc 1 247 10 view .LVU252
 922 005a 0020     		movs	r0, #0
 923 005c F3E7     		b	.L74
 924              	.LVL69:
 925              	.L76:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 926              		.loc 1 209 3 view .LVU253
 927 005e 0220     		movs	r0, #2
 928              	.LVL70:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 929              		.loc 1 209 3 view .LVU254
 930 0060 F1E7     		b	.L74
 931              	.L80:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 50


 932 0062 00BF     		.align	2
 933              	.L79:
 934 0064 00000000 		.word	pFlash
 935 0068 003C0240 		.word	1073888256
 936              		.cfi_endproc
 937              	.LFE73:
 939              		.section	.text.FLASH_FlushCaches,"ax",%progbits
 940              		.align	1
 941              		.global	FLASH_FlushCaches
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu softvfp
 947              	FLASH_FlushCaches:
 948              	.LFB77:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 949              		.loc 1 392 1 is_stmt 1 view -0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 954              		.loc 1 394 3 view .LVU256
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 955              		.loc 1 394 6 is_stmt 0 view .LVU257
 956 0000 164B     		ldr	r3, .L84
 957 0002 1B68     		ldr	r3, [r3]
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 958              		.loc 1 394 5 view .LVU258
 959 0004 13F4007F 		tst	r3, #512
 960 0008 10D0     		beq	.L82
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset instruction cache */
 961              		.loc 1 397 5 is_stmt 1 view .LVU259
 962 000a 144B     		ldr	r3, .L84
 963 000c 1A68     		ldr	r2, [r3]
 964 000e 22F40072 		bic	r2, r2, #512
 965 0012 1A60     		str	r2, [r3]
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 966              		.loc 1 399 5 view .LVU260
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 967              		.loc 1 399 5 view .LVU261
 968 0014 1A68     		ldr	r2, [r3]
 969 0016 42F40062 		orr	r2, r2, #2048
 970 001a 1A60     		str	r2, [r3]
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 971              		.loc 1 399 5 view .LVU262
 972 001c 1A68     		ldr	r2, [r3]
 973 001e 22F40062 		bic	r2, r2, #2048
 974 0022 1A60     		str	r2, [r3]
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 975              		.loc 1 401 5 view .LVU263
 976 0024 1A68     		ldr	r2, [r3]
 977 0026 42F40072 		orr	r2, r2, #512
 978 002a 1A60     		str	r2, [r3]
 979              	.L82:
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 980              		.loc 1 405 3 view .LVU264
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 51


 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 981              		.loc 1 405 6 is_stmt 0 view .LVU265
 982 002c 0B4B     		ldr	r3, .L84
 983 002e 1B68     		ldr	r3, [r3]
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 984              		.loc 1 405 5 view .LVU266
 985 0030 13F4806F 		tst	r3, #1024
 986 0034 10D0     		beq	.L81
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset data cache */
 987              		.loc 1 408 5 is_stmt 1 view .LVU267
 988 0036 094B     		ldr	r3, .L84
 989 0038 1A68     		ldr	r2, [r3]
 990 003a 22F48062 		bic	r2, r2, #1024
 991 003e 1A60     		str	r2, [r3]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 992              		.loc 1 410 5 view .LVU268
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 993              		.loc 1 410 5 view .LVU269
 994 0040 1A68     		ldr	r2, [r3]
 995 0042 42F48052 		orr	r2, r2, #4096
 996 0046 1A60     		str	r2, [r3]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 997              		.loc 1 410 5 view .LVU270
 998 0048 1A68     		ldr	r2, [r3]
 999 004a 22F48052 		bic	r2, r2, #4096
 1000 004e 1A60     		str	r2, [r3]
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 1001              		.loc 1 412 5 view .LVU271
 1002 0050 1A68     		ldr	r2, [r3]
 1003 0052 42F48062 		orr	r2, r2, #1024
 1004 0056 1A60     		str	r2, [r3]
 1005              	.L81:
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1006              		.loc 1 414 1 is_stmt 0 view .LVU272
 1007 0058 7047     		bx	lr
 1008              	.L85:
 1009 005a 00BF     		.align	2
 1010              	.L84:
 1011 005c 003C0240 		.word	1073888256
 1012              		.cfi_endproc
 1013              	.LFE77:
 1015              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
 1016              		.align	1
 1017              		.global	HAL_FLASHEx_Erase
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu softvfp
 1023              	HAL_FLASHEx_Erase:
 1024              	.LVL71:
 1025              	.LFB72:
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1026              		.loc 1 134 1 is_stmt 1 view -0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 52


 1030              		.loc 1 134 1 is_stmt 0 view .LVU274
 1031 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1032              	.LCFI11:
 1033              		.cfi_def_cfa_offset 24
 1034              		.cfi_offset 3, -24
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t index = 0U;
 1040              		.loc 1 135 3 is_stmt 1 view .LVU275
 1041              	.LVL72:
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 1042              		.loc 1 136 3 view .LVU276
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1043              		.loc 1 139 3 view .LVU277
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1044              		.loc 1 139 3 view .LVU278
 1045 0002 224B     		ldr	r3, .L98
 1046 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1047 0006 012B     		cmp	r3, #1
 1048 0008 3ED0     		beq	.L94
 1049 000a 0E46     		mov	r6, r1
 1050 000c 0446     		mov	r4, r0
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1051              		.loc 1 139 3 discriminator 2 view .LVU279
 1052 000e 1F4B     		ldr	r3, .L98
 1053 0010 0122     		movs	r2, #1
 1054 0012 1A76     		strb	r2, [r3, #24]
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1055              		.loc 1 142 3 discriminator 2 view .LVU280
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1056              		.loc 1 145 3 discriminator 2 view .LVU281
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1057              		.loc 1 145 12 is_stmt 0 discriminator 2 view .LVU282
 1058 0014 4CF25030 		movw	r0, #50000
 1059              	.LVL73:
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1060              		.loc 1 145 12 discriminator 2 view .LVU283
 1061 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1062              	.LVL74:
 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 1063              		.loc 1 147 3 is_stmt 1 discriminator 2 view .LVU284
 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 1064              		.loc 1 147 5 is_stmt 0 discriminator 2 view .LVU285
 1065 001c 0746     		mov	r7, r0
 1066 001e 70BB     		cbnz	r0, .L88
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 1067              		.loc 1 150 5 is_stmt 1 view .LVU286
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 1068              		.loc 1 150 18 is_stmt 0 view .LVU287
 1069 0020 4FF0FF33 		mov	r3, #-1
 1070 0024 3360     		str	r3, [r6]
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 1071              		.loc 1 152 5 is_stmt 1 view .LVU288
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 53


 1072              		.loc 1 152 18 is_stmt 0 view .LVU289
 1073 0026 2368     		ldr	r3, [r4]
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 1074              		.loc 1 152 7 view .LVU290
 1075 0028 012B     		cmp	r3, #1
 1076 002a 16D0     		beq	.L96
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1077              		.loc 1 166 7 is_stmt 1 view .LVU291
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1078              		.loc 1 169 7 view .LVU292
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1079              		.loc 1 169 17 is_stmt 0 view .LVU293
 1080 002c A568     		ldr	r5, [r4, #8]
 1081              	.LVL75:
 1082              	.L91:
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1083              		.loc 1 169 58 discriminator 1 view .LVU294
 1084 002e E368     		ldr	r3, [r4, #12]
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1085              		.loc 1 169 82 discriminator 1 view .LVU295
 1086 0030 A268     		ldr	r2, [r4, #8]
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1087              		.loc 1 169 70 discriminator 1 view .LVU296
 1088 0032 1344     		add	r3, r3, r2
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1089              		.loc 1 169 7 discriminator 1 view .LVU297
 1090 0034 AB42     		cmp	r3, r5
 1091 0036 20D9     		bls	.L90
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1092              		.loc 1 171 9 is_stmt 1 view .LVU298
 1093 0038 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1094 003a 2846     		mov	r0, r5
 1095 003c FFF7FEFF 		bl	FLASH_Erase_Sector
 1096              	.LVL76:
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 1097              		.loc 1 174 9 view .LVU299
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 1098              		.loc 1 174 18 is_stmt 0 view .LVU300
 1099 0040 4CF25030 		movw	r0, #50000
 1100 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1101              	.LVL77:
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1102              		.loc 1 177 9 is_stmt 1 view .LVU301
 1103 0048 114A     		ldr	r2, .L98+4
 1104 004a 1369     		ldr	r3, [r2, #16]
 1105 004c 23F0FA03 		bic	r3, r3, #250
 1106 0050 1361     		str	r3, [r2, #16]
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 1107              		.loc 1 179 9 view .LVU302
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 1108              		.loc 1 179 11 is_stmt 0 view .LVU303
 1109 0052 0746     		mov	r7, r0
 1110 0054 80B9     		cbnz	r0, .L97
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1111              		.loc 1 169 98 discriminator 2 view .LVU304
 1112 0056 0135     		adds	r5, r5, #1
 1113              	.LVL78:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 54


 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1114              		.loc 1 169 98 discriminator 2 view .LVU305
 1115 0058 E9E7     		b	.L91
 1116              	.LVL79:
 1117              	.L96:
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1118              		.loc 1 155 7 is_stmt 1 view .LVU306
 1119 005a 6168     		ldr	r1, [r4, #4]
 1120 005c 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1121              	.LVL80:
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1122              		.loc 1 155 7 is_stmt 0 view .LVU307
 1123 005e FFF7FEFF 		bl	FLASH_MassErase
 1124              	.LVL81:
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 1125              		.loc 1 158 7 is_stmt 1 view .LVU308
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 1126              		.loc 1 158 16 is_stmt 0 view .LVU309
 1127 0062 4CF25030 		movw	r0, #50000
 1128 0066 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1129              	.LVL82:
 1130 006a 0746     		mov	r7, r0
 1131              	.LVL83:
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 1132              		.loc 1 161 7 is_stmt 1 view .LVU310
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 1133              		.loc 1 161 17 is_stmt 0 view .LVU311
 1134 006c 084A     		ldr	r2, .L98+4
 1135 006e 1369     		ldr	r3, [r2, #16]
 1136 0070 23F00403 		bic	r3, r3, #4
 1137 0074 1361     		str	r3, [r2, #16]
 1138 0076 00E0     		b	.L90
 1139              	.LVL84:
 1140              	.L97:
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 1141              		.loc 1 182 11 is_stmt 1 view .LVU312
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 1142              		.loc 1 182 24 is_stmt 0 view .LVU313
 1143 0078 3560     		str	r5, [r6]
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         }
 1144              		.loc 1 183 11 is_stmt 1 view .LVU314
 1145              	.LVL85:
 1146              	.L90:
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 1147              		.loc 1 188 5 view .LVU315
 1148 007a FFF7FEFF 		bl	FLASH_FlushCaches
 1149              	.LVL86:
 1150              	.L88:
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1151              		.loc 1 192 3 view .LVU316
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1152              		.loc 1 192 3 view .LVU317
 1153 007e 034B     		ldr	r3, .L98
 1154 0080 0022     		movs	r2, #0
 1155 0082 1A76     		strb	r2, [r3, #24]
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 1156              		.loc 1 194 3 view .LVU318
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 55


 1157              	.LVL87:
 1158              	.L87:
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1159              		.loc 1 195 1 is_stmt 0 view .LVU319
 1160 0084 3846     		mov	r0, r7
 1161 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1162              	.LVL88:
 1163              	.L94:
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1164              		.loc 1 139 3 view .LVU320
 1165 0088 0227     		movs	r7, #2
 1166 008a FBE7     		b	.L87
 1167              	.L99:
 1168              		.align	2
 1169              	.L98:
 1170 008c 00000000 		.word	pFlash
 1171 0090 003C0240 		.word	1073888256
 1172              		.cfi_endproc
 1173              	.LFE72:
 1175              		.text
 1176              	.Letext0:
 1177              		.file 3 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 1178              		.file 4 "c:\\users\\user\\appdata\\roaming\\gnumcueclipse\\armembeddedgcc\\arm-none-eabi\\include\
 1179              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1180              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 1181              		.file 7 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f215xx.h"
 1182              		.file 8 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 1183              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 1184              		.file 10 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_flash.h"
 1185              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_flash_ex.h"
 1186              		.file 12 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccizffmm.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f2xx_hal_flash_ex.c
C:\Users\User\AppData\Local\Temp\ccizffmm.s:16     .text.FLASH_MassErase:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:23     .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
C:\Users\User\AppData\Local\Temp\ccizffmm.s:58     .text.FLASH_MassErase:0000000000000020 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:63     .text.FLASH_OB_BOR_LevelConfig:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:69     .text.FLASH_OB_BOR_LevelConfig:0000000000000000 FLASH_OB_BOR_LevelConfig
C:\Users\User\AppData\Local\Temp\ccizffmm.s:98     .text.FLASH_OB_BOR_LevelConfig:0000000000000014 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:103    .text.FLASH_OB_GetUser:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:109    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
C:\Users\User\AppData\Local\Temp\ccizffmm.s:126    .text.FLASH_OB_GetUser:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:131    .text.FLASH_OB_GetWRP:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:137    .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
C:\Users\User\AppData\Local\Temp\ccizffmm.s:153    .text.FLASH_OB_GetWRP:0000000000000008 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:158    .text.FLASH_OB_GetRDP:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:164    .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
C:\Users\User\AppData\Local\Temp\ccizffmm.s:207    .text.FLASH_OB_GetRDP:0000000000000020 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:212    .text.FLASH_OB_GetBOR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:218    .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
C:\Users\User\AppData\Local\Temp\ccizffmm.s:235    .text.FLASH_OB_GetBOR:000000000000000c $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:240    .text.FLASH_OB_EnableWRP:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:246    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
C:\Users\User\AppData\Local\Temp\ccizffmm.s:294    .text.FLASH_OB_EnableWRP:0000000000000020 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:299    .text.FLASH_OB_DisableWRP:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:305    .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
C:\Users\User\AppData\Local\Temp\ccizffmm.s:355    .text.FLASH_OB_DisableWRP:0000000000000020 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:360    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:366    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 FLASH_OB_RDP_LevelConfig
C:\Users\User\AppData\Local\Temp\ccizffmm.s:408    .text.FLASH_OB_RDP_LevelConfig:0000000000000018 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:413    .text.FLASH_OB_UserConfig:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:419    .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
C:\Users\User\AppData\Local\Temp\ccizffmm.s:479    .text.FLASH_OB_UserConfig:0000000000000028 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:484    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:491    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
C:\Users\User\AppData\Local\Temp\ccizffmm.s:635    .text.HAL_FLASHEx_OBProgram:0000000000000080 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:640    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:647    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
C:\Users\User\AppData\Local\Temp\ccizffmm.s:696    .text.FLASH_Erase_Sector:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:703    .text.FLASH_Erase_Sector:0000000000000000 FLASH_Erase_Sector
C:\Users\User\AppData\Local\Temp\ccizffmm.s:814    .text.FLASH_Erase_Sector:000000000000005c $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:819    .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:826    .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
C:\Users\User\AppData\Local\Temp\ccizffmm.s:934    .text.HAL_FLASHEx_Erase_IT:0000000000000064 $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:940    .text.FLASH_FlushCaches:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:947    .text.FLASH_FlushCaches:0000000000000000 FLASH_FlushCaches
C:\Users\User\AppData\Local\Temp\ccizffmm.s:1011   .text.FLASH_FlushCaches:000000000000005c $d
C:\Users\User\AppData\Local\Temp\ccizffmm.s:1016   .text.HAL_FLASHEx_Erase:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccizffmm.s:1023   .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
C:\Users\User\AppData\Local\Temp\ccizffmm.s:1170   .text.HAL_FLASHEx_Erase:000000000000008c $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
